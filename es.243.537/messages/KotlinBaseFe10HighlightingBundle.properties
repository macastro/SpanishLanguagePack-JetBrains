always.null=Siempre nulo
cannot.be.inferred=no se puede inferir
defined.in=definido en
found.space=encontrado:
function.arguments=argumentos:
function.receiver.0=receptor: {0}
gutter.name.suspend.call=Suspender llamada
html.0.has.no.corresponding.expected.declaration.1.html={0} no tiene la declaración correspondiente{1}
html.0.is.not.abstract.and.does.not.implement.abstract.base.class.member.br.1.html={0} no es abstracto y no implementa miembro de la clase abstracta base<br/>{1}
html.0.is.not.abstract.and.does.not.implement.abstract.member.br.1.html={0} no es abstracto y no implementa miembro abstracto<br/>{1}
html.0.method.may.be.missing.none.of.the.following.functions.will.be.called.ul.1.ul.html='El método ''{0}'' puede estar faltando. Ninguna de las siguientes funciones será llamada: <ul>{1}</ul>'
html.0.must.override.1.br.because.it.inherits.many.implementations.of.it.html={0} debe redefinir {1}<br />por heredar la implementación de esta
html.accidental.override.0.html=Sobreescribir accidental: {0}
html.actual.class.0.has.no.corresponding.members.for.expected.class.members.1.html=La clase actual ''{0}'' no tiene los miembros correspondientes para los miembros esperados de la clase: {1}
html.assignment.operators.ambiguity.all.these.functions.match.ul.0.ul.table.html=Ambigüedad de operadores de asignación. Todas estas funciones coinciden. <ul>{0}</ul></table>
html.candidate.resolution.will.be.changed.soon.please.use.fully.qualified.name.to.invoke.the.following.closer.candidate.explicitly.ul.0.ul.html=La resolución de los candidatos va a ser cambiada, por favor use un nombre totalmente calificado para invocar explícitamente al siguiente candidato más cercano <ul>{0}</ul>
html.cannot.choose.among.the.following.candidates.without.completing.type.inference.ul.0.ul.html=No se puede elegir entre los siguientes candidatos sin completar la inferencia de tipo: <ul>{0}</ul>
html.expected.0.has.no.actual.declaration.in.module.1.2.html=Esperado {0} no tiene una declaración real en el módulo {1}{2}
html.function.return.type.mismatch.table.tr.td.expected.td.td.1.td.tr.tr.td.found.td.td.2.td.tr.table.html=No coincide el tipo de retorno de la función.<table><tr><td>Esperado:</td><td>{1}</td></tr><tr><td>Encontrado:</td><td>{2}</td></tr></table>
html.getter.return.type.must.be.equal.to.the.type.of.the.property.table.tr.td.expected.td.td.0.td.tr.tr.td.found.td.td.1.td.tr.table.html=El tipo de valor devuelto por el getter debe ser igual al tipo de propiedad.<table><tr><td>Esperado:</td><td>{0}</td></tr><tr><td>Encontrado:</td><td>{1}</td></tr></table>
html.internal.error.occurred.while.analyzing.this.expression.br.0.html=<strong>Error interno ocurrido mientras se analizaba esta expresión:</strong><br/>{0}
html.javascript.0.html=JavaScript: {0}
html.loop.parameter.type.mismatch.table.tr.td.iterated.values.td.td.0.td.tr.tr.td.parameter.td.td.1.td.tr.table.html=Desajuste de tipo de parámetro del bucle.<table><tr><td>Valores iterados:</td><td>{0}</td></tr><tr><td>Parámetro:</td><td>{1}</td></tr></table>
html.method.contains.from.concurrenthashmap.may.have.unexpected.semantics.it.calls.containsvalue.instead.of.containskey.br.use.explicit.form.of.the.call.to.containskey.containsvalue.contains.or.cast.the.value.to.kotlin.collections.map.instead.br.see.https.youtrack.jetbrains.com.issue.kt.18053.for.more.details.html=Method 'contains' del ConcurrentHashMap puede tener una semántica inesperada: llama a 'containsValue' en lugar de a 'containsKey'.<br/>Utiliza la forma explícita de la llamada a 'containsKey'/'containsValue'/'contains' o convierte el valor a kotlin.collections.Map.<br/>Consulta https://youtrack.jetbrains.com/issue/KT-18053 para más detalles
html.method.iterator.is.ambiguous.for.this.expression.ul.0.ul.html=El método ''iterator()'' es ambiguo para esta expresión.<ul>{0}</ul>
html.non.final.expect.class.and.its.actual.class.must.declare.exactly.the.same.non.private.members.html={0}: la clase actual y su clase expect no final deben declarar exactamente los mismos miembros no privados. Los siguientes miembros no privados en la clase actual no coinciden: {1}<br/>Este error ocurre porque la clase expect ''{2}'' no es final. Esta advertencia se convertirá en un error en versiones futuras.<br/>Además, consulta https://youtrack.jetbrains.com/issue/KT-22841 para obtener más información
html.none.of.the.following.functions.can.be.called.with.the.arguments.supplied.ul.0.ul.html=Ninguna de las siguientes funciones puede llamarse con los argumentos proporcionados. <ul>{0}</ul>
html.overload.resolution.ambiguity.all.these.functions.match.ul.0.ul.html=Desambiguación de sobrecarga. Todas estas funciones coinciden. <ul>{0}</ul>
html.overload.resolution.ambiguity.on.method.0.all.these.functions.match.ul.1.ul.html=Desambiguación de resolución de sobrecarga en el método ''{0}''. Todas estas funciones coinciden. <ul>{1}</ul>
html.platform.declaration.clash.0.html=Interferencia de declaración de plataforma: {0}
html.property.delegate.must.have.a.0.method.none.of.the.following.functions.are.suitable.ul.1.ul.html=El delegado de propiedad debe tener un método ''{0}''. Ninguna de las siguientes funciones son adecuadas. <ul>{1}</ul>
html.property.type.is.0.which.is.not.a.subtype.type.of.overridden.br.1.html=El tipo de la propiedad es {0}, que no es un subtipo del tipo anulado<br/>{1}
html.return.type.is.0.which.is.not.a.subtype.of.overridden.br.1.html=El tipo de retorno es ''{0}'', que no es un subtipo del método sobreescrito<br/>{1}
html.return.types.of.inherited.members.are.incompatible.br.0.br.1.html=Los tipos de retorno de los miembros heredados son incompatibles:<br/>{0},<br/>{1}
html.setter.parameter.type.must.be.equal.to.the.type.of.the.property.table.tr.td.expected.td.td.0.td.tr.tr.td.found.td.td.1.td.tr.table.html=El tipo del parámetro setter debe ser igual al tipo de la propiedad.<table><tr><td>Esperado:</td><td>{0}</td></tr><tr><td>Encontrado:</td><td>{1}</td></tr></table>
html.type.argument.is.not.within.its.bounds.table.tr.td.expected.td.td.0.td.tr.tr.td.found.td.td.1.td.tr.table.html=El argumento del tipo no está dentro de sus límites.<table><tr><td>Esperado:</td><td>{0}</td></tr><tr><td>Encontrado:</td><td>{1}</td></tr></table>
html.type.inference.failed.0.html=Inferencia de tipos fracasó: {0}
html.type.mismatch.table.tr.td.required.td.td.0.td.tr.tr.td.found.td.td.1.td.tr.table.br.projected.type.2.restricts.use.of.br.3.html=Error de coincidencia de tipo.<table><tr><td>Requerido:</td><td>{0}</td></tr><tr><td>Encontrado:</td><td>{1}</td></tr></table><br />
html.type.mismatch.table.tr.td.required.td.td.0.td.tr.tr.td.found.td.td.1.td.tr.table.html=Tipo incompatible.<table><tr><td>Necesario:</td><td>{0}</td></tr><tr><td>Encontrado:</td><td>{1}</td></tr></table>
html.types.of.inherited.properties.are.incompatible.br.0.br.1.html=Los tipos de propiedades heredadas son incompatibles:<br/>{0},<br/>{1}
html.types.of.inherited.var.properties.do.not.match.br.0.br.1.html=Los tipos de propiedades var heredadas no coinciden:<br/>{0},<br/>{1}
html.unresolved.reference.br.none.of.the.following.candidates.is.applicable.because.of.receiver.type.mismatch.ul.0.ul.html=Referencia no resuelta. <br/> Ninguno de los candidatos siguientes es aplicable debido a la discordancia en el tipo de receptor: <ul>{0}</ul>
html.val.property.cannot.override.var.property.br.1.html=La propiedad Val no puede sobreescribir la propiedad var<br />{1}
html.var.property.type.is.0.which.is.not.a.type.of.overridden.br.1.html=Tipo de propiedad var es {0}, que no es un tipo de reemplazado<br/>{1}
i.for.i.br.0=<i> para </i><br/>{0}
kotlin.compiler.error=Error del compilador de Kotlin
kotlin.compiler.warning=Advertencia de compilador Kotlin
required.space=requerido:
root.package=paqueteraiz
smart.cast.to.0.for.1.call=Conversión inteligente a {0} (para llamada {1})
the.following.declarations.have.the.same.jvm.signature.code.0.1.code.br.ul.2.ul=Las siguientes declaraciones tienen la misma firma JVM (<code>{0}{1}</code>):<br/>
type.inference.failed.expected.type.mismatch=Fallo la inferencia de tipos. No coincide el tipo esperado:
type.parameters.where=donde
unknown.receiver=Receptor desconocido
value.captured.in.a.closure=Valor capturado en un cierre
wrapped.into.a.reference.object.to.be.modified.when.captured.in.a.closure=Encapsulado en un objeto de referencia para ser modificado cuando es capturado en un cierre