abstract.class.not.allowed=La clase abstracta no está permitida
access.static.via.instance=Acceder al miembro estático a través de la referencia de instancia
accessible.name.change.modifier=Change Modifier
action.GotoSuperClass.MainMenu.text=clas_e alta
action.GotoSuperClass.description=Vaya a la declaración de la clase que la clase actual extiende o implementa
action.GotoSuperClass.text=Ir a la clase padr_e
action.analyzing.cyclic.dependencies.in.scope=Dependencias cíclicas de {0}
action.create.new.class=Nueva clase Java
action.create.new.class.description=Crear nueva clase Java
action.create.new.module-info.description=Crear nuevo módulo-info.java
action.create.new.module-info.title=module-info.java
action.create.new.package-info.description=Crear nuevo paquete-info.java
action.create.new.package-info.title=package-info.java
action.cyclic.dependency.title=Análisis de dependencia cíclica
action.description.copy.whole.thread.dump.to.clipboard=Copiar el volcado de hilo completo al portapapeles
action.description.group.by.scope=Agrupar por tipo de alcance (producción, prueba, bibliotecas)
action.description.group.threads.with.identical.stacktraces=Agrupar subprocesos con stacktraces idénticos
action.description.infer.nullity.annotations=Inferir anotaciones de nulidad
action.description.mark.directory.as.a.0.for.generated.files=Marcar directorio como {0} para archivos generados
action.description.mark.directory.as.an.ordinary.0=Marcar directorio como un {0} ordinario
action.description.show.only.threads.containing.a.specific.string=Mostrar solo los hilos que contienen una cadena específica
action.dfa.from.stacktrace.text=Encuentre por qué ''{0}'' podría ser {1}
action.expand.static.import.text=static expande la declaración de importación
action.find.similar.stack.call.diverged=Line numbers are likely diverged. Try to find the current location inside ''{0}.{1}()''
action.find.similar.stack.call.location.not.found=No similar location inside ''{0}.{1}()''
action.find.similar.stack.call.methods=Similar Methods to ''{0}.{1}()''
action.find.similar.stack.call.methods.not.found=No similar methods to ''{0}.{1}()''
action.find.similar.stack.call.similar.calls=Possible Locations Inside ''{0}.{1}()''
action.go.to.functional.implementation.text=Find Functional Interface Implementations
action.go.to.implementation.text=Ir a implementación
action.go.to.overriding.methods.text=Ir al método de reemplazo
action.go.to.subclass.text=Ir a la subclase
action.go.to.super.method.text=Ir al método principal
action.group.by.package=Paquete
action.group.by.scope.type=Agrupar por tipo de alcance
action.implement.method=Implementar método
action.implement.methods=Implementar métodos
action.override.method=Método de anulación
action.override.methods=Anular métodos
action.sdkmanrc.update.project.jdk=Update Project JDK
action.sort.by.percent.classes.which.overrides.method.description=Ordenar por porcentaje de clases que anulan métodos
action.sort.by.percent.classes.which.overrides.method.text=Ordenar por porcentaje de clases que reemplazan métodos
action.text.0.on.parameter.1={0} en el parámetro ''{1}''
action.text.choose.class.in.0=elegir clase en {0}...
action.text.copy.to.clipboard=Copiar al portapapeles
action.text.edit.template=Editar plantilla
action.text.enter.class.name=ingrese el nombre de la clase...
action.text.generated.root.0=Generado {0}
action.text.merge.identical.stacktraces=Combinar Stacktraces idénticos
action.text.show.methods.to.implement=Mostrar métodos para implementar
action.text.unmark.generated.0=Desmarcar generado {0}
action.title.infer.nullity.annotations=Infer Nullity Annotations
add.methods.dialog.or=\ o
add.to.permits.list=Agregar ''{0}'' a la lista de permisos para la clase sellada ''{1}''
add.to.permits.list.family.name=Add class to permits list
adds.ext.library.preview=Adds library ''{0}'' to module ''{1}''
adds.ext.library.preview.import=Adds library ''{0}'' to the dependencies of module ''{1}'' and imports ''{2}''
adds.library.preview=Adds {0, choice, 1#library ''''{1}''''|2#one of {2}} to the dependencies of module ''{3}'' and imports unresolved ''{4}''
adds.library.preview.no.import=Adds {0, choice, 1#library ''''{1}''''|2#one of {2}} to the dependencies of module ''{3}''
adds.module.dependencies.preview=Adds {0, choice, 1#module ''''{1}''''|2#one of {2}} to the dependencies of module ''{3}'' and imports unresolved classes
advanced.setting.code.vision.java.minimal.usages=Code Vision: Minimum usages required to show inlay hints
advanced.setting.compiler.automake.allow.when.app.running=Allow auto-make to start even if developed application is currently running
advanced.setting.compiler.automake.allow.when.app.running.description=Automatically started make may eventually delete some classes that are required by the application
advanced.setting.compiler.lower.process.priority=Run compilation with lower priority
advanced.setting.compiler.lower.process.priority.description=Run external JPS process with IDLE priority on Windows and nice level 10 on Linux/macOS
advanced.setting.java.completion.qualifier.as.argument=Enable completion for static methods, which uses qualifier as a first argument
advanced.setting.java.sdkmanrc.watcher=Start listening for changes in '.sdkmanrc' on project opening
advanced.settings.group.compiler=Compiler
advanced.settings.group.java=Java
align.types.in.multi.catch=Align types in multi-catch
annotate.intention.chooser.title=Elija la anotación para agregar
annotation.types.cannot.be.inlined=Los tipos de anotaciones no se pueden insertar
arch.checker.notification.content=The JDK and system architectures do not match. Builds can be much slower as a consequence.
arch.checker.notification.project.structure=Configure JDK
arch.checker.notification.title=JDK can cause slow builds
assignment.array.element.to.itself.problem.descriptor=Array element is assigned to itself
assignment.to.declared.variable.problem.descriptor=La variable ''{0}'' se inicializa con autoasignación
assignment.to.itself.problem.descriptor=La variable ''{0}'' se asigna a sí misma
assignment.to.itself.quickfix.name=Eliminar autoasignación
base.package.parameter.wizard.label=& paquete base\:
base.package.project.wizard.error.x.not.valid.package={0} no es un nombre de paquete válido
bean.property=Propiedad Bean
boolean.method.is.always.inverted.display.name=El método booleano siempre está invertido
boolean.method.is.always.inverted.problem.descriptor=El método booleano <code>#ref</code> siempre está invertido
button.add=Add...
button.add.blank=Agregar espacio en blanco
button.add.class=Agregar clase...
button.add.dependency=Add Dependency
button.add.package=Agregar paquete
button.add.pattern=Agregar patrón...
button.annotations=Anotaciones...
button.base.method=&Método base
button.code.patterns=Patrones de código...
button.current.method=&Método actual
button.text.settings=Configuración...
button.to.another.directory=To &Directory
button.to.another.source.root=To &Source Root
caller.chooser.referenced.code.title=código referenciado
cast.expression=expresión de conversión
cast.to.0=Transmitir a ''{0}''
change.color.command.text=Cambiar color
change.signature.from.usage.short.name=<html>Cambiar la firma de {0} ({1})</html>
change.uid.action.name=Cambiar aleatoriamente el inicializador 'serialVersionUID'
checkbox.after.description=Después de la descripción
checkbox.after.parameter.descriptions=Después de las descripciones de los parámetros
checkbox.after.return.tag=Después de la etiqueta de devolución
checkbox.align.parameter.descriptions=Alinear descripciones de parámetros
checkbox.align.thrown.exception.descriptions=Alinear descripciones de excepciones lanzadas
checkbox.annotate.local.variables=Anotar variables locales
checkbox.collapse.annotations=Anotaciones
checkbox.collapse.anonymous.classes=Clases anónimas
checkbox.collapse.closures="Closures" (clases anónimas que implementan un método, antes de Java 8)
checkbox.collapse.end.of.line.comments=Secuencia de comentarios al final de la línea
checkbox.collapse.generic.constructor.parameters=Constructor genérico y parámetros de método
checkbox.collapse.i18n.messages=Cadenas I18n
checkbox.collapse.inferred.type=Reemplazar 'var' con el tipo inferido
checkbox.collapse.inner.classes=Clases internas
checkbox.collapse.multiline.comments=Comentarios de varias líneas
checkbox.collapse.one.line.methods=Métodos de una línea
checkbox.collapse.simple.property.accessors=Accesores de propiedad simples
checkbox.collapse.suppress.warnings=@SuppressWarnings
checkbox.declare.var.type=Use 'var' for local variable declaration
checkbox.deprecated.members=Miembros obsoletos
checkbox.do.not.indent.top.level.class.members=No sangra a los miembros de la clase de nivel superior
checkbox.do.not.wrap.after.single.annotation=No ajustar después de una sola anotación
checkbox.do.not.wrap.one.line.comments=No envuelva comentarios de una línea
checkbox.don.t.warn.in.case.of.multiline.lambda=Don't warn if the parameter of 'List.replaceAll()' is multiline lambda
checkbox.enable.javadoc.formatting=Habilitar el formato JavaDoc
checkbox.enable.leading.asterisks=Habilitar asteriscos iniciales
checkbox.generate.p.on.empty.lines=Generar "<p>" en líneas vacías
checkbox.html.report.inaccessible.symbols=<html>Informar símbolos inaccesibles<br>(es posible que la herramienta javadoc no pueda crear hipervínculos)
checkbox.ignore.chains=Ignore chainable methods
checkbox.ignore.fields.used.in.multiple.methods=Ignorar los campos utilizados en varios métodos
checkbox.insert.imports.for.inner.classes=Insertar importaciones para clases internas
checkbox.iterate.unknown.stream.sources.via.stream.iterator=Iterar fuentes de Stream desconocidas a través de Stream.iterator()
checkbox.keep.empty.lines=Mantener líneas vacías
checkbox.keep.empty.param.tags=Mantener las etiquetas @param vacías
checkbox.keep.empty.return.tags=Mantener las etiquetas @return vacías
checkbox.keep.empty.throws.tags=Mantener las etiquetas @throws vacías
checkbox.keep.invalid.tags=Mantener etiquetas inválidas
checkbox.make.generated.local.variables.final=Hacer definitivas las variables locales generadas
checkbox.make.generated.parameters.final=Hacer que los parámetros generados sean finales
checkbox.param.description.on.new.line=Descripciones de parámetros en la nueva línea
checkbox.param.indent.on.continuation=Sangrar las líneas de continuación
checkbox.prefer.longer.names=Prefiere nombres más largos
checkbox.preserve.line.feeds=Conservar los avances de línea
checkbox.spaces.around.annotation.eq=Around '=' in annotation value pair
checkbox.spaces.before.colon.in.foreach=Antes de dos puntos en foreach
checkbox.spaces.before.deconstruction.list=Deconstruction list
checkbox.spaces.inside.one.line.enum=Dentro de una línea enum llaves
checkbox.spaces.record.header=Encabezado de registro
checkbox.spaces.within.deconstruction.list=Deconstruction list
checkbox.suggest.conversion.to.map.computeifabsent=Sugerir conversión a Map.computeIfAbsent
checkbox.suggest.conversion.to.map.getordefault=Sugerir conversión a Map.getOrDefault
checkbox.suggest.conversion.to.map.merge=Sugerir conversión a Map.merge
checkbox.suggest.conversion.to.map.putifabsent=Sugerir conversión a Map.putIfAbsent
checkbox.suggest.conversion.to.map.replaceall=Sugerir conversión a Map.replaceAll
checkbox.suggest.replacement.even.if.lambda.may.have.side.effects=Sugerir reemplazo incluso si lambda puede tener efectos secundarios
checkbox.suppress.with.suppresswarnings=Suprimir con @SuppressWarnings
checkbox.treat.get.k.null.the.same.as.containskey.k.may.change.semantics=Trate 'get (k)!=null' igual que 'containsKey (k)' (puede cambiar la semántica)
checkbox.use.fully.qualified.class.names=Use nombres de clase completamente calificados
checkbox.use.single.class.import=Usar importación de clase única
checkbox.use.throws.rather.than.exception=Use @throws en lugar de @exception
checkbox.warn.if.only.foreach.replacement.is.available=Advertir si solo está disponible el reemplazo 'forEach'
checkbox.warn.if.the.loop.is.trivial=Advertir si el bucle es trivial
checkbox.wrap.at.right.margin=Ajustar al margen derecho
choose.class=Elige clase
choose.super.class.popup.title=Elija la clase principal
chooser.text.choose.where.to.save.0=Elija dónde guardar ''{0}''
chooser.title.select.path.to.save.jar=Seleccionar ruta para guardar jar
class.can.be.record.conversion.make.member.more.accessible=If members become more accessible:
class.can.be.record.conversion.strategy.convert.silently=Convertir sin confirmación
class.can.be.record.conversion.strategy.do.not.convert=No sugiera conversión a registro
class.can.be.record.conversion.strategy.show.members=Mostrar miembros afectados en la vista de conflictos
class.can.be.record.display.name=La clase se puede grabar
class.can.be.record.quick.fix=Convertir en registro
class.can.be.record.suggest.renaming.accessors=get/is Sugiere cambiar el nombre de los accesores
class.can.be.record.suppress.conversion.if.annotated=Suppress conversion if class is annotated by:
class.can.be.record.suppress.conversion.if.annotated.fix.name=Suppress record conversion if annotated by ''{0}''
class.cannot.be.inlined.because.a.call.to.its.constructor.is.unresolved=No se pudo inline class porque la llamada al constructor de la clase no se resolvió
class.cannot.be.inlined.because.an.interface.implemented.by.it.cannot.be.resolved=No se puede en la clase en línea porque la interfaz implementada por la clase no se puede resolver
class.cannot.be.inlined.because.it.has.static.fields.with.non.constant.initializers=No se puede inline class porque la clase tiene campos estáticos con inicializadores no constantes
class.cannot.be.inlined.because.it.has.static.initializers=No se puede inline class porque la clase tiene un inicializador estático
class.cannot.be.inlined.because.it.has.static.inner.classes=No se puede incluir una clase en línea porque la clase tiene una clase interna estática
class.cannot.be.inlined.because.it.has.static.methods=No se puede inline class porque la clase tiene métodos estáticos
class.cannot.be.inlined.because.it.has.static.non.final.fields=No se puede inline class porque la clase tiene campos estáticos no finales
class.cannot.be.inlined.because.it.has.usages.of.fields.not.inherited.from.its.superclass=La clase no se puede insertar porque usa un campo que no es heredado de su clase principal.
class.cannot.be.inlined.because.it.has.usages.of.its.class.literal=No se puede inline class porque se usa class literal
class.cannot.be.inlined.because.it.has.usages.of.its.inner.classes=No se puede inline class porque se utilizan clases internas
class.cannot.be.inlined.because.it.is.used.as.a.this.qualifier=La clase no se puede incluir porque usa '' este '' calificador
class.cannot.be.inlined.because.it.is.used.in.a.catch.clause=No se puede incluir porque la clase se usa en la cláusula '' catch ''
class.cannot.be.inlined.because.it.is.used.in.a.throws.clause=No se puede incluir porque la clase se usa en la cláusula '' throws ''
class.cannot.be.inlined.because.its.constructor.contains.return.statements=No se puede insertar la clase porque el constructor de la clase tiene una declaración '' return ''
class.cannot.be.inlined.because.its.superclass.cannot.be.resolved=No se puede inline class porque su superclase no se puede resolver
class.cannot.be.inlined.because.there.are.usages.of.its.methods.not.inherited.from.its.superclass.or.interface=Porque la clase usa un método que no es heredado de su clase padre o la interfaz no se puede insertar
class.decorator.or.has.default.constructor={0}'' debe tener un constructor predeterminado o implementar el patrón '' Decorator 
class.filter.editor.add.dialog.title=Nuevo filtro
class.filter.editor.choose.class.title=Elegir clase
class.filter.editor.table.model.column.name.isActive=Activo
class.filter.editor.table.model.column.name.pattern=Patrón
class.has.no.default.constructor=''{0}'' no tiene un constructor predeterminado
class.is.not.a.subclass={0}'' no se puede asignar a ''{1}
class.is.not.concrete=''{0}'' no es una clase concreta
class.is.not.public=''{0}'' no es público
class.not.found.error.message=Clase ''{0}'' no encontrada
class.patterns.error.class.pattern.0.must.be.a.valid.java.qualifier=El patrón debe ser un nombre válido de Java completamente calificado, solo '' * '' están permitidos como marcadores de posición
class.patterns.error.method.pattern.0.must.be.a.valid.java.identifier=El patrón de método ''{0}'' debe ser un identificador de Java válido, solo '' * '' permitido como indicador
class.patterns.panel.add.class=Agregar clase
class.patterns.separator.mark.code.as.entry.point.if.qualified.name.matches=Marcar el código como punto de entrada si los nombres calificados coinciden
code.style.generation.override.method.signature=Anular firma del método
code.style.generation.repeat.synchronized.modifier=Modificador de repetición y sincronización
code.style.generation.replace.null.check=Reemplazar null-check con Objects::nonNull o Objects::isNull
code.style.generation.settings.error.not.valid.identifier.part.in.prefix=Prefix ''{0}'' tiene una parte de identificador de Java no válida
code.style.generation.settings.error.not.valid.identifier.part.in.suffix=El sufijo ''{0}'' contiene parte de un identificador de Java no válido
code.style.generation.use.class.isInstance=Use Class::isInstance y Class::cast cuando sea posible
code.style.generation.use.integer.sum=Use Integer::sum, etc. cuando sea posible
code.style.settings.angle.spacing.brackets=Corchetes
code.style.settings.spacing.after.closing.angle.bracket=Después de cerrar el corchete
code.style.settings.spacing.around.type.bounds=Alrededor de los límites de tipo
code.vision.implementations.hint={0, choice,1\# 1 implementations|2\# {0, number} implementations}
code.vision.inheritors.hint={0, choice,1\# 1 herederos|2\# {0, number} herederos}
code.vision.overrides.hint={0, choice,1\# 1 overrides|2\# {0, number} overrides}
column.name.class.entry.point=Clase
column.name.method.entry.point=Método
column.name.with.subclasses.entry.point=Incluir subclases
combobox.paste.insert.imports=&Insertar importaciones al pegar:
command.create.class.from.template=Crear clase a partir de plantilla
command.create.new.subdirectory=Crear nuevo subdirectorio
command.name.delegate.detected.change=Delegado
command.name.generate.tostring=crear toString()
command.name.insert.block.statement=Insertar declaración de bloque
command.name.replace.type=Replace Type
command.name.updating.package.statement=Actualización de la declaración del paquete
comment.the.class.will.be.created.in.the.package.0=La clase se creará en el paquete ''{0}''
compiler.options=Compiler options
completion.class.name.hint.2=Presione {0} una vez más para ignorar las dependencias del módulo mientras busca
completion.generate.via.wizard=(generate via wizard)
completion.inner.scope=inner
completion.inner.scope.tail.text=\ (from {0} block)
completion.no.suggestions.of.type=No hay sugerencias de tipo {0}
completion.override.implement.methods=Anular/implementar métodos...
completion.provider.method.declaration.type=provider() 메서드 선언
completion.requires.module.tail.text=\ (requires ''{0}'' module)
completion.smart.aslist.hint=Presione {0} una vez más para encontrar matrices de {1}
completion.smart.chain.hint=Presione {0} una vez más para buscar en las llamadas de métodos encadenados
completion.smart.hint=Presione {0} para mostrar solo las variantes que son adecuadas por tipo
completion.smart.toar.hint=Presione {0} una vez más para buscar colecciones de {1}
completion.smart.type.generate.anonymous.body=generar cuerpo anónimo
completion.unknown.type=Tipo desconocido {0}
configurable.EqualsHashCodeTemplatesPanel.display.name=Plantillas
configurable.GenerateToStringConfigurable.display.name=Configuración
configurable.TemplatesPanel.display.name=Plantillas
configure.annotations.option=Configurar anotaciones
conflict.message.method.will.override.method.base.class=Renamed {0} will override method of the base {1}
convert.compareto.expression.to.equals.call=Convertir expresión 'compareTo()' a llamada 'equals()'
convert.compareto.expression.to.equals.call.may.change.semantics=Convertir la expresión 'compareTo()' a la llamada 'equals()' (puede cambiar la semántica)
convert.number.binary=binary
convert.number.decimal=decimal
convert.number.hex=hex
convert.number.octal=octal
convert.number.plain.format=plain format
convert.number.scientific.format=scientific format
copy.abstract.method.intention.name=Usar la implementación existente de ''{0}''
copy.abstract.method.no.existing.implementations.found=No se encontraron implementaciones existentes
copy.abstract.method.popup.title=Elija la implementación para copiar
copy.abstract.method.title=Usar la implementación del método abstracto
copy.paste.reference.notification=<html>{0} {0,choice,1#import fue|2#import fueron} agregada <p><span><a href='show'> Revisar las importaciones añadidas...</a></span></html>
create.class.mapping.dialog.title={0} seleccionar clase
cyclic.dependencies.progress.text=Gráfico de dependencias de construcción
cyclic.dependencies.scope.dialog.module.button={0} &módulo ''{1}''
cyclic.dependencies.scope.dialog.project.button={0} todo el &proyecto
cyclic.dependencies.scope.dialog.title=Especificar {0} alcance
cyclic.dependencies.scope.include.test.sources.option=Incluir y probar fuentes
cyclic.dependencies.tree.cycle.node.text=ciclo
cyclic.dependencies.usage.view.initial.text=Seleccione el paquete para analizar del árbol de la izquierda
cyclic.dependencies.usage.view.root.node.text=Usos del paquete ''{0}'' en el paquete ''{1}''
dataflow.from.here=Flujo de datos desde aquí
dataflow.to.here=Flujo de datos hasta aquí
deannotate.intention.action.family.name=Eliminar anotación
deannotate.intention.action.several.text=Eliminar anotación...
deannotate.intention.action.text=Eliminar la anotación de {0}
deannotate.intention.chooser.title=Elija la anotación para eliminar
default.package.presentable.name=<predeterminado>
default.param.value.warning={0, choice, 0\#constructor |1\#method} con la firma seleccionada ya existe
delete.assignment.completely=Delete assignment completely
delete.initializer.completely=Delete initializer completely
dependant.sdk.unsatisfied.dependency.message=Primero debe configurar el SDK de Java
dependencies.libraries.node.text=Bibliotecas
dependencies.tree.node.default.package.abbreviation=<paquete predeterminado>
destination.combo.source.root.not.expected.conflict=Requiere una raíz de prueba, pero se ha seleccionado una raíz de origen
destination.combo.test.root.not.expected.conflict=Se requiere la raíz de origen pero se seleccionó la raíz de prueba
dfa.constraint.0.not.null={0}(no nulo)
dfa.constraint.not.null=no nulo
dfa.constraint.null.or.0=null o {0}
dialog.create.class.destination.package.label=Paquete de destino:
dialog.create.class.label=Crear {0}:
dialog.create.class.name=Crear {0} {1}
dialog.create.class.package.chooser.title=Elegir paquete de destino
dialog.edit.template.checkbox.smart.type.completion=Tipo inteligente c &ompleción
dialog.edit.template.checkbox.use.static.import=Utilice estática e importación si es posible
dialog.import.on.paste.title=Seleccionar clases para importar
dialog.import.on.paste.title2=Seleccionar elementos para importar
dialog.import.on.paste.title3=Seleccione Importar para eliminar
dialog.message.0.update.existing.class={0}. ¿Actualizar la clase existente?
dialog.message.class.not.found=Template class ''{0}'' not found
dialog.message.create.test.in.the.same.source.root=¿Crear prueba en la misma raíz de origen?
dialog.message.infer.nullity.annotations.requires.the.project.language.level=Infer Nullity Annotations requiere que el nivel de lenguaje del proyecto se establezca en 1.5 o superior.
dialog.message.jetbrains.annotations.library.is.missing=Falta la biblioteca de anotaciones JetBrains. \nSin la biblioteca, IntelliJ IDEA no puede ejecutar el análisis. ¿Le gustaría agregarlo?
dialog.message.modules.dont.refer.to.existing.annotations.library={0, choice, 0\#module|2\#module} {1} tiene una biblioteca ''{2}'' existente {0, opción, 0\# no|2\# no}. ¿Le gustaría agregar {0, choice, 0\#dependency|2\#dependency} ahora?
dialog.message.no.places.found.to.infer.nullable.notnull=No se encontraron lugares para inferir @Nullable/@NotNull
dialog.message.parameter.has.write.usages.inline.not.supported=Parameter has write usages. Inline is not supported
dialog.message.template.not.applicable=Template is not applicable
dialog.message.template.not.found=Template not found
dialog.paste.on.import.text=<html>El fragmento de código que ha pegado utiliza clases a las que las importaciones no pueden acceder en el nuevo contexto.<br/> Seleccione las clases que desea importar al nuevo archivo.</html>
dialog.paste.on.import.text2=<html>El fragmento de código que ha pegado utiliza elementos a los que las importaciones no pueden acceder en el nuevo contexto.<br/> Seleccione los elementos que desea importar al nuevo archivo.</html>
dialog.paste.on.import.text3=<html>El fragmento de código que ha pegado introdujo nuevas importaciones en el contexto actual.<br/> Seleccione las importaciones que desea eliminar.</html>
dialog.title.check.configuration=Check Configuration...
dialog.title.check.functional.interface.candidates=Check Functional Interface Candidates...
dialog.title.choose.0.parameters=Elija {0} Parámetros
dialog.title.choose.annotation=Seleccionar anotación {0}
dialog.title.choose.class=Elegir clase
dialog.title.choose.logger=Choose Logger
dialog.title.configure.annotations=Configurar anotaciones
dialog.title.configure.code.patterns=Configurar patrones de código
dialog.title.copy.template=Copiar plantilla
dialog.title.create.class.in.package=Crear clase en paquete
dialog.title.create.missing.tests=Create Missing Tests
dialog.title.create.new.template=Crea una nueva plantilla
dialog.title.edit.method.contract=Editar contrato de método
dialog.title.edit.range=Editar rango
dialog.title.infer.nullity=Inferir nulidad
dialog.title.infer.nullity.results=Inferir resultados de nulidad
dialog.title.move.directory=Move Directory
dialog.title.no.test.roots.found=No se encontraron raíces de prueba
dialog.title.process.duplicates=Procesar duplicados
dialog.title.super.method.found=Súper método encontrado
dialog.title.testdatapath.file.generate=Generate files from class to @TestDataPath
dialog.title.testdatapath.method.generate=Generate methods from @TestDataPath
disable.report.inaccessible.symbols.fix=Sin informe de símbolos inaccesibles
do.not.import.inner.classes.for=Excluir clases internas por nombre corto:
do.not.import.inner.classes.no.classes=No hay clases internas definidas
edit.contract.dialog.checkbox.impure.method=Method may produce &side effects
edit.contract.dialog.hint=<html>Especifique el texto del contrato <p> Ejemplo\: <code> _, null -> false</code><br><small>Consulte la descripción de la acción de intención para obtener más detalles</small></html>
edit.contract.dialog.mutates.hint=Specify comma-separated elements that can be mutated<p>Example: <code>this,param1</code><p>Leave empty for unspecified side effects.
edit.range.dialog.message=<html>Especifique un rango de valores <p> Deje '' desde '' o '' a '' vacío si no hay límite</html>
edit.range.error.invalid.value=Valor no válido
edit.range.should.not.be.greater.than.to=Should not be greater than 'to'
edit.range.should.not.be.less.than.from=Should not be less than 'from'
edit.range.value.should.be.bigger.than=no debe ser mayor que {0}
edit.range.value.should.be.less.than=no debe ser menor que {0}
editbox.blanklines.around.initializer=Alrededor del inicializador:
editbox.class.count.to.use.import.with.star=Recuento de clases para usar la importación con '*':
editbox.names.count.to.use.static.import.with.star=Los nombres cuentan para usar la importación estática con '*':
empty.title=Vacío
encapsulate.fields.dialog.javadoc.title=JavaDoc
enum.constant.ordinal=enum constante ordinal\:
enum.not.allowed=Enum no está permitido
enums.cannot.be.inlined=Las enumeraciones no se pueden insertar
environment.key.description.project.jdk=Absolute path to project JDK
environment.key.description.project.jdk.name=IDE-visible name of project JDK.
error.attempt.to.generate.constructor.for.anonymous.class=No se puede agregar un constructor a una clase anónima
error.attempt.to.generate.constructor.for.implicit.class=Cannot add constructor to an implicitly declared class
error.hint.no.expression.found=No se encontró ninguna expresión
error.message.ide.does.not.support.starting.processes.using.old.java=IDE doesn''t support starting Java processes using Java {0}, Upgrade JDK
error.package.already.contains.package-info=package-info.java'' ya existe para el paquete ''{0}
error.package.already.contains.package.html=El paquete ''{0}'' ya tiene un archivo ''package.html''. ¿Crear "package-info.java" de todos modos?
error.package.html.found.title=Se encontró 'paquete.html'
error.text.this.is.not.a.valid.java.class.name=Este no es un nombre de clase Java válido
exclude.0.from.auto.import=Excluir ''{0}'' de la importación automática
exclude.0.from.completion=Excluir ''{0}'' de la finalización
exclude.accessors=&Excluir descriptores de acceso
exclude.from.completion.group=Excluir de la importación automática y la finalización:
exclude.from.imports.no.exclusions=Agregar una clase, paquete o miembro
exclude.from.imports.no.exclusions.2=para excluir de la importación automática y la finalización
exclude.import.wildcard.comment=Use el comodín * para excluir a todos los miembros de una clase o paquete específico
exclude.table.mask=Clase, paquete o miembro
exclude.table.scope.column=Alcance
export.to.html.generate.hyperlinks.checkbox=Generar &hipervínculos a clases
external.annotation.prompt=Solicitud de anotación externa
external.annotations.external.option=Agregar &externamente
external.annotations.in.code.option=Agregar &código
external.annotations.open.file=Open annotations file
external.annotations.problem.parse.error=File: {0}<br>Problem: {1}
external.annotations.problem.title=Unable to read external annotations
external.annotations.root.chooser.description=Las anotaciones externas se guardarían en la carpeta apropiada
external.annotations.root.chooser.title=Seleccionar raíz de anotaciones externas para {0}
external.annotations.roots=Raíces de anotación
external.annotations.suggestion.message=<html><body> Si no desea anotaciones en su código, puede usar almacenamiento externo.<br>¿Buscar accesos del campo ''{0}''?
extract.interface.command.name=Extraer interfaz
extract.superclass.command.name=Extraer superclase
extracted.class.should.have.unique.name=Extracted class should have unique name. Name ''{0}'' is already in use by one of the inner classes
filetype.spi.description=Service Provider Interface
find.field.accessors.prompt=필드 ''{0}''의 접근자를 검색하시겠어요?
find.field.accessors.title=Accesores de campo encontrados
find.jar.hint.text.no.libraries.found.for.fqn=No se pudo encontrar la biblioteca para ''{0}''
find.options.include.accessors.base.checkbox=S&earch for base methods of accessors
find.options.include.accessors.base.checkbox.comment=Use top-level hierarchy methods as find usage targets by default
find.options.include.accessors.checkbox=Search for &accessors
find.options.include.overloaded.methods.checkbox=Incluir métodos sobrecargados
find.options.search.overriding.methods.checkbox=Search in &overriding methods
find.what.derived.classes.checkbox=&Clases derivadas
find.what.derived.interfaces.checkbox=&Interfaces derivadas
find.what.fields.usages.checkbox=Usos de &fields
find.what.implementing.classes.checkbox=&Implementando clases
find.what.implementing.methods.checkbox=&Implementando métodos
find.what.implicit.to.string.checkbox=llamadas I &mplicit
find.what.methods.usages.checkbox=Usos de &métodos
find.what.overriding.methods.checkbox=Métodos de sobre &montar
find.what.search.for.base.methods.checkbox=S&earch for base method usages
find.what.search.for.base.methods.checkbox.comment=Use top-level hierarchy methods as find usage targets by default
find.what.usages.checkbox=&Usos
find.what.usages.of.classes.and.interfaces=Usos de &clases e interfaces
fix.move.to.source.root=Move to source root
generate.button.title=Generar
generate.constructor.already.exists=El constructor ya existe
generate.constructor.fields.chooser.title=Elija campos para inicializar por constructor
generate.constructor.super.constructor.chooser.title=Elegir constructor de superclase
generate.delegate.target.chooser.title=Seleccionar objetivo para generar delegados para
generate.equals.and.hashcode.already.defined.title=Generar equals() y hashCode()
generate.equals.and.hashcode.already.defined.warning=Los métodos ''boolean equals(Object)'' e ''int hashCode()'' ya están definidos \npara la clase {0}. ¿Quieres eliminarlos y continuar?
generate.equals.and.hashcode.already.defined.warning.anonymous=Los métodos 'boolean equals(Object)' e 'int hashCode()' ya están definidos \n para esta clase anónima. ¿Quieres eliminarlos y continuar?
generate.equals.hashcode.accept.sublcasses=Aceptar &subclasses como parámetro para el método equals()
generate.equals.hashcode.accept.sublcasses.explanation=<html><body> Aunque generalmente no cumple con la especificación Object.equals(), la aceptación de subclases<br>puede ser necesaria para la Elija los campos &para incluirlos en equals()
generate.equals.hashcode.comparison.table=<html><table>center>yes<td align=center>nocenter>yes<td align=center>nocenter>no<td align=center>yescenter>yes<td align=center>nocenter>yes<td align=center>no&instanceof expression
generate.equals.hashcode.equals.fields.chooser.title=equals()에 포함할 필드 선택(&F)
generate.equals.hashcode.getclass.type.comparison=get&Class() comparison expression
generate.equals.hashcode.hashcode.fields.chooser.title=Elija los campos &para incluirlos en hashCode()
generate.equals.hashcode.instanceof.type.comparison=instanceof 식(&I)
generate.equals.hashcode.internal.error=Error interno
generate.equals.hashcode.non.null.fields.chooser.title=Seleccionar todos los campos &no nulos
generate.equals.hashcode.template=&Plantilla:
generate.equals.hashcode.type.comparison.label=For class type comparison in equals() method generate:
generate.equals.hashcode.use.getters=Usar &getters durante la generación de código
generate.equals.hashcode.warning.hashcode.for.arrays.is.not.supported=hashCode() para matrices no es compatible
generate.equals.hashcode.wizard.title=Generar equals() y hashCode()
generate.equals.no.fields.for.generation=No se pudieron encontrar campos para incluir en equals/hashCode
generate.equals.template.title=Plantilla igual a:
generate.equals.warning.equals.for.nested.arrays.not.supported=No se admite equals() para matrices anidadas
generate.equals.warning.generated.equals.could.be.incorrect=Generado equals() para Object [] puede ser incorrecto
generate.file.extension.text=Enter file extension: .php, .java, .kt, .cpp ....
generate.file.extension.validation.error=File extension ''{0}'' isn''t valid. It must start from ''.'', can''t contain space symbols or be blank
generate.getter.and.setter.error.no.fields=No se pudieron encontrar los campos para generar getter/setter para
generate.getter.and.setter.error.no.fields.without.getters.and.setters=Campo no encontrado sin getter/setter
generate.getter.and.setter.error.setters.for.read.only.not.generated=No se generó ningún setter para campos de solo lectura
generate.getter.error.no.fields=No se pueden encontrar campos para generar getter
generate.getter.error.no.fields.without.getters=No se pueden encontrar campos sin getter
generate.getter.fields.chooser.title=Seleccionar campos para generar captadores
generate.getter.setter.header.visibility.hint.=La visibilidad es '' Archivo | Configuraciones | editor | estilo de código | Java | La generación de código se aplica según
generate.getter.setter.title=Seleccionar campos para generar getters y setters
generate.getter.template=&plantilla Getter:
generate.hashcode.template.title=Plantilla HashCode:
generate.logger.no.place.found.dialog.message=Could not find places to insert logger
generate.logger.no.place.found.dialog.title=No Places Found
generate.logger.specify.place.popup.title=Choose Place
generate.members.implement.command=implementación
generate.members.nothing.to.insert=Nada para insertar
generate.method.nofiles.warn=No test methods were found in class {0}
generate.method.nosuites.warn=No test suites were found in @TestDataPath("{0}")
generate.missed.tests.action.error.no.tests.found=Prueba no encontrada.
generate.missed.tests.action.failed.to.detect.framework=No se pudo detectar el marco de prueba para {0}
generate.quickfix.files=Create QF scenarios(with '.after' suffix)
generate.record.constructor.title=Generar constructor de registros
generate.select.default.modifier.text=Select modifier
generate.setter.fields.chooser.title=Seleccionar campos para generar setters
generate.setter.template=&plantilla de Setter:
generate.setters.no.fields=No se pudieron encontrar campos para generar establecedores para
generate.setters.no.fields.without.setters=No se pueden encontrar campos sin setter
generate.test.support.method.error.cannot.generate.method=No se pudo generar el método. {0}
generate.test.support.method.error.method.already.exists=El método {0} ya existe
generate.test.support.method.error.no.template.found.for.framework=No se encontró ninguna plantilla para {0}. {1}
generate.tostring.already.exist.border=Cuando el método ya existe
generate.tostring.available.implicit.variables.label=Variables implícitas disponibles:<br/> {0}
generate.tostring.exclude..transient=Excluir campos transitorios
generate.tostring.exclude.by.field.name=Excluir campos por nombre (reg exp)
generate.tostring.exclude.by.field.type=Excluir campos por nombre de tipo (reg exp)
generate.tostring.exclude.by.name=Excluir métodos por nombre (reg exp)
generate.tostring.exclude.by.return.type=Excluir métodos por nombre de tipo de retorno (reg exp)
generate.tostring.exclude.constant.fields=Excluir campos constantes
generate.tostring.exclude.enum.fields=Excluir campos de enumeración
generate.tostring.exclude.logger=Excluir campos del registrador (Log4j, JDK Logging, Jakarta Commons Logging)
generate.tostring.exclude.static.fields=Excluir campos estáticos
generate.tostring.fully.qualified.class.name=Use un nombre de clase completamente calificado en la generación de código ($ classname)
generate.tostring.getters.in.generated.code=Habilitar captadores en la generación de código ($ métodos)
generate.tostring.handle.exception.error.message=Se lanzó una excepción irrecuperable mientras se realizaba la acción; consulte el registro de IDEA para obtener más detalles (stacktrace debe estar en idea.log): \n{0}
generate.tostring.handle.exception.plugin.warning.message=Se lanzó una excepción PluginException mientras se realizaba la acción; consulte el registro de IDEA para obtener detalles (stacktrace debe estar en idea.log): \n{0}
generate.tostring.handle.exception.velocity.error.message=Código de generación de error de velocidad; consulte el registro de IDEA para obtener más detalles (stacktrace debe estar en idea.log): \n{0}
generate.tostring.insert.border=¿Dónde insertar?
generate.tostring.method.already.exists.dialog.me=ssage\=기존 {0} 메서드 바꾸기
generate.tostring.method.already.exists.dialog.title=El método ya existe
generate.tostring.move.to.generated.checkbox=Mover el cursor al método generado
generate.tostring.settings=Configuración
generate.tostring.sort.ascending=Ascendente
generate.tostring.sort.checkbox=Ordenar elementos
generate.tostring.sort.descending=Descendente
generate.tostring.sort.super=Primero los miembros de la súper clase
generate.tostring.tab.title=toString() Configuración de generación
generate.tostring.template.label=Plantilla:
generate.tostring.title=Generar toString()
goto.super.class.chooser.title=Elija una superclase o interfaz
group.javadoc.alignment=Alineación
group.javadoc.blank.lines=Líneas en blanco
group.javadoc.invalid.tags=Etiquetas inválidas
group.javadoc.other=Otro
gutter.implemented.method=Método implementado
gutter.implementing.method=Método de implementación
gutter.overridden.method=Método anulado
gutter.overriding.method=Método de reemplazo
gutter.service=Servicio
gutter.sibling.inherited.method=Método heredado por hermanos
header.method.to.be.converted=Method to be converted
hide.out.of.cyclic.packages.action.description=Ocultar paquetes sin dependencias cíclicas
hide.out.of.cyclic.packages.action.text=Ocultar paquetes sin dependencias cíclicas
highlight.exceptions.thrown.chooser.title=Elija clases de excepción para resaltar
highlight.imported.classes.chooser.title=Elija clases importadas para resaltar
highlight.imported.members.chooser.title=Elija miembros importados para resaltar
highlight.overridden.classes.chooser.title=Elija clases para resaltar los métodos anulados de
highlight.suppressed.warnings.choose.inspections=Elija inspecciones para resaltar los problemas suprimidos de
highlight.throws.class.name=Highlight Throws {0}
highlight.throws.popup.throwing.places=Lugares lanzando {0}
highlight.throws.popup.usages=Usos de {0}
hint.text.added.imports=, agregue {0} {0, choice,1\#import declaraciones|2\#import declaraciones}
hint.text.not.valid.java.identifier=Not a valid Java identifier
hint.text.occurrences.were.inlined={1} usos en línea
hint.text.press.to.go.through.inlined.occurrences=presione {0} para explorar {1} usos en línea
hint.text.rearranged.imports=Declaraciones de importación reordenadas
hint.text.removed.imports=Eliminar {0} {0, choice,1\#import declaraciones|2\#import declaraciones}
hint.text.tostring.method.could.not.be.created.from.template= toString() '' El método no se puede crear a partir de la plantilla ''{0}
hint.text.tostring.template.invalid=toString() plantilla ''{0}'' no es válida
icon.preview=Vista previa del icono
ignore.imports.and.formatting=Ignorar las importaciones y el formato
illegal.name.validation.info=Nombre ilegal: {0}
implement.abstract.method.potential.implementations.with.weaker.access=Se han encontrado posibles implementaciones con acceso débil. {0}
implement.method.no.methods.to.implement=No se encontró ningún método para implementar
import.layout.panel.all.other.imports=Todas las demás declaraciones de importación
import.layout.panel.blank.line.entry=<línea en blanco>
import.layout.panel.down.button=Abajo
import.layout.panel.up.button=Arriba
import.layout.static.imports.separately=Diseñar importaciones estáticas por separado
import.statically=Importar estáticamente
include.accessors=&Incluir descriptores de acceso
increase.language.level.preview.description=Language level for module ''{0}'' will be changed to ''{1}''
infer.nullity.progress=Resultados de posprocesamiento...
inlay.MethodChainsInlayProvider.description=Method return types in call chains.
inlay.annotation.hints.external.annotations=Annotations that are stored outside your source code.<br>These annotations are useful when you need an annotation, but adding it to the source code is not an option (for example, when working with a library code).<br><br><a href='https://www.jetbrains.com/help/idea/external-annotations.html'>Documentation</a>
inlay.annotation.hints.inferred.annotations=Annotations that IntelliJ IDEA generates by scanning libraries and project code. These annotations help you understand code contracts and improve the capabilities of static analysis. They include: <br> @Contract <br> @Nullable <br> @NotNull <br> @Unmodifiable <br>@UnmodifiableView <br><br><a href='https://www.jetbrains.com/help/idea/inferring-nullity.html#inferred-annotations'>Documentation</a>
inlay.parameters.java.build.like.method=Methods that return an instance of the class they operate on, for example, calls in StringBuilder chains or intermediate operations in Java 8 Stream API.
inlay.parameters.java.clear.expression.type=Method calls that use a complex expression as an argument, for example, the ternary operator or a Java 13 switch statement.
inlay.parameters.java.enums=Enum constant declarations that use a parametrized constructor.
inlay.parameters.java.method.name.contains.parameter.name=Methods that take a single argument when the expected argument is clear from the method name, like in accessor methods.
inlay.parameters.java.multiple.params.same.type=Calls to methods with more than one non-literal argument of the same type.
inlay.parameters.java.new.expr=Calls to parametrized constructors.
inlay.parameters.java.simple.sequentially.numbered=Methods that take multiple parameters, whose names consist of one letter followed by a number.
insert.override.annotation=Insertar @ &Anular anotación
inspection.anonymous.2.method.ref.display.name=El tipo anónimo se puede reemplazar con la referencia del método
inspection.assert.quickfix=Afirmar ''{0}''
inspection.auto.add.module.requirements.quickfix=Fill in module dependencies
inspection.bulk.file.attributes.read.description=Bulk 'Files.readAttributes()' call can be used
inspection.bulk.file.attributes.read.message=Multiple file attribute calls can be replaced with single 'Files.readAttributes()' call
inspection.capturing.cleaner=Ejecutable pasado a Cleaner.register() captura la referencia ''{0}''
inspection.capturing.cleaner.description=El limpiador captura la referencia del objeto
inspection.cast.can.be.removed.narrowing.variable.type.fix.family.name=Cambiar el tipo de variable y eliminar el reparto
inspection.cast.can.be.removed.narrowing.variable.type.fix.name=Cambiar el tipo de ''{0}'' a ''{1}'' y eliminar el elenco
inspection.cast.can.be.removed.narrowing.variable.type.message=El elenco se puede eliminar cambiando el tipo de ''{0}'' a ''{1}''
inspection.cast.can.be.removed.narrowing.variable.type.name=Un tipo de variable demasiado débil conduce a una conversión innecesaria
inspection.charset.object.can.be.used.display.name=Se puede utilizar el objeto Conjunto de caracteres estándar
inspection.charset.object.can.be.used.fix.family.name=Usar constante Charset
inspection.charset.object.can.be.used.message={0} se puede usar en su lugar
inspection.collection.add.all.can.be.replaced.with.constructor.display.name=Llamada redundante 'Collection.addAll()'
inspection.collection.factories.fix.family.name=Reemplazar con llamada de fábrica de colección
inspection.collection.factories.fix.name=Reemplazar con ''{0}.{1}'' llamada
inspection.collection.factories.message=Puede ser reemplazado con ''{0}.{1}'' llamada
inspection.collection.factories.option.ignore.non.constant=No advertir cuando el contenido no sea constante
inspection.collection.factories.option.suggest.ofentries=Sugerir 'Map.ofEntries'
inspection.collection.used.as.vararg.display.name=Iterable se usa como vararg
inspection.collection.used.as.vararg.message=Iterable se pasa como vararg: probablemente se pretendía una matriz
inspection.comparator.combinators.display.name=Se puede utilizar el combinador del comparador
inspection.comparator.result.comparison.display.name=Uso sospechoso del método de comparación
inspection.comparator.result.comparison.fix.family.name=Corregir comparación de resultados del comparador
inspection.comparator.result.comparison.problem.display.name=Comparación del resultado del método de comparación con una constante específica
inspection.condition.covered.by.further.condition.display.name=La condición está cubierta por una condición adicional
inspection.conditional.break.in.infinite.loop=Mover condición al bucle
inspection.conditional.break.in.infinite.loop.allow.condition.fusion=Allow merging with existing loop condition
inspection.conditional.break.in.infinite.loop.description=Interrupción condicional dentro del bucle infinito
inspection.conditional.break.in.infinite.loop.no.conversion.with.do.while=Don't suggest to replace with 'do while'
inspection.conditional.break.in.infinite.loop.suggest.conversion.when.if.is.single.stmt.in.loop=Suggest conversion when 'if' is a single statement in loop
inspection.conditional.can.be.optional.display.name=Condicional se puede reemplazar con Opcional
inspection.convert.2.method.ref.display.name=Lambda se puede reemplazar con referencia de método
inspection.convert.2.streamapi.display.name=El bucle se puede contraer con Stream API
inspection.convert.to.local.quickfix=Convertir a local
inspection.data.flow.constant.values.display.name=Constant values
inspection.data.flow.display.name=Condiciones constantes \\& excepciones
inspection.data.flow.filter.notnull.quickfix=Insertar paso 'filtro (Objetos::nonNull)'
inspection.data.flow.ignore.assert.statements=Ignorar declaraciones de afirmación
inspection.data.flow.nullable.quickfix.option=Sugerir una anotación @Nullable para métodos/campos/parámetros donde se utilizan valores que aceptan valores NULL
inspection.data.flow.optional.of.nullable.misuse.display.name=Use of Optional.ofNullable with null or not-null argument
inspection.data.flow.report.not.null.required.parameter.with.null.literal.argument.usages=Parámetros de informes donde se utilizan argumentos literales nulos y no deben ser nulos
inspection.data.flow.report.nullable.methods.that.always.return.a.non.null.value=Informar métodos anulables que siempre devuelven un valor no nulo
inspection.data.flow.report.problems.that.happen.only.on.some.code.paths=Informar problemas que solo ocurren en algunas rutas de código
inspection.data.flow.treat.non.annotated.members.and.parameters.as.nullable=Trate los parámetros y miembros sin anotaciones como @Nullable
inspection.data.flow.true.asserts.option=No informe afirmaciones con condición estáticamente probada para ser siempre <code> verdadera</code>
inspection.data.flow.unreachable.code.display.name=Unreachable code
inspection.data.flow.unreachable.code.option.ignore.trivial.description=Do not report unreachable statements like <code>return 0</code>, <code>break</code>, etc., as they could be necessary to satisfy Java control flow rules.
inspection.data.flow.unreachable.code.option.ignore.trivial.name=Ignore trivial exit statements
inspection.data.flow.unreachable.code.option.respect.suppression.description=Try to avoid reporting unreachable code if it caused by a constant condition, where a corresponding warning is suppressed.
inspection.data.flow.unreachable.code.option.respect.suppression.name=Respect 'Constant value' inspection suppressions
inspection.data.flow.use.computeifpresent.quickfix=Reemplazar 'compute' con 'computeIfPresent'
inspection.dead.code.option.applet=Applets
inspection.dead.code.option.external=Clases con usos en archivos que no son de Java
inspection.dead.code.option.main=<html><code> métodos void main(String args [])</code></html>
inspection.dead.code.option.servlet=Servlets
inspection.default.annotation.param=Valor del parámetro de anotación predeterminado
inspection.duplicate.branches.in.switch.default.message=La rama en 'conmutador' es un duplicado de la rama predeterminada
inspection.duplicate.branches.in.switch.delete.fix.family.name=Eliminar ramas 'conmutadas' redundantes
inspection.duplicate.branches.in.switch.delete.fix.name=Eliminar rama redundante de 'conmutador'
inspection.duplicate.branches.in.switch.display.name=Ramas duplicadas en 'switch'
inspection.duplicate.branches.in.switch.merge.fix.family.name=Fusionar ramas duplicadas en 'switch'
inspection.duplicate.branches.in.switch.merge.fix.name=Fusionar con ''{0}''
inspection.duplicate.branches.in.switch.merge.with.default.fix.name=Fusionar con la rama 'switch' predeterminada
inspection.duplicate.branches.in.switch.message=Rama duplicada en 'switch'
inspection.duplicate.expressions.complexity.threshold=Umbral de complejidad de expresión
inspection.duplicate.expressions.display.name=Varias apariciones de la misma expresión
inspection.duplicate.expressions.introduce.variable.fix.family.name=Introducir variable
inspection.duplicate.expressions.introduce.variable.fix.name=Introducir variable para ''{0}''
inspection.duplicate.expressions.message=Varias apariciones de <code>#ref</code> #loc
inspection.duplicate.expressions.replace.other.occurrences.fix.family.name=Reemplazar con variable otras ocurrencias de expresión
inspection.duplicate.expressions.replace.other.occurrences.fix.name=Reemplazar con ''{0}'' otras apariciones de ''{1}''
inspection.duplicate.expressions.reuse.variable.fix.family.name=Reutilizar variable
inspection.duplicate.expressions.reuse.variable.fix.name=Reutilizar variable ''{0}'' para ''{1}''
inspection.empty.module.info.file=Empty 'module-info.java' file
inspection.endless.stream.description=La operación sin cortocircuito consume flujo infinito
inspection.equals.hashcode.display.name='equals()' y 'hashCode()' no emparejados
inspection.equals.hashcode.generate.equals.quickfix=Generar 'equals()'
inspection.equals.hashcode.generate.equals.quickfix.preview=Opens a dialog to configure 'equals()' generation.
inspection.equals.hashcode.generate.hashcode.quickfix=Generar 'hashCode()'
inspection.equals.hashcode.generate.hashcode.quickfix.preview=Opens a dialog to configure 'hashCode()' generation.
inspection.excessive.lambda.fix.family.name=Reemplazar lambda con constante
inspection.excessive.lambda.fix.name=Usar método ''{0}'' sin lambda
inspection.excessive.lambda.message=Uso excesivo de lambda
inspection.excessive.lambda.usage.display.name=Uso excesivo de lambda
inspection.excessive.range.check.display.name=Comprobación de rango excesiva
inspection.explicit.argument.can.be.lambda.display.name=El argumento explícito puede ser lambda
inspection.explicit.argument.can.be.lambda.fix.family.name=Reemplazar el argumento explícito con la función
inspection.explicit.argument.can.be.lambda.fix.name=Use el método ''{0}'' con argumento funcional
inspection.explicit.argument.can.be.lambda.message=El argumento explícito se puede convertir a lambda
inspection.explicit.array.filling.description=Se puede reemplazar con una sola llamada al método '' Arrays. {0}() ''
inspection.explicit.array.filling.display.name=Relleno explícito de matriz
inspection.explicit.array.filling.fix.family.name=Reemplazar bucle con llamada al método '' Arrays. {0}() ''
inspection.explicit.array.filling.no.suggestion.for.set.all=No sugiera usar 'Arrays.setAll()'
inspection.explicit.array.filling.redundant.loop.description=Inicialización redundante de una matriz recién creada
inspection.explicit.array.filling.suggest.set.all=Sugerir 'Arrays.setAll()'
inspection.explicit.to.implicit.class.migration.fix.name=Convert into implicitly declared class
inspection.explicit.to.implicit.class.migration.name=Explicit class declaration can be converted into implicitly declared class
inspection.export.results.callees=Cadena de llamadas
inspection.export.results.implicit.constructor=constructor implícito de
inspection.export.results.overrides.library.methods=Anula los métodos de la biblioteca
inspection.export.results.package=paquete
inspection.export.results.type.references=Lo siguiente usa este tipo
inspection.field.can.be.local.display.name=El campo puede ser local
inspection.field.can.be.local.problem.descriptor=El campo se puede convertir a una variable local
inspection.field.can.be.local.quickfix.constructor=Convertir campo a variable local en el constructor
inspection.field.can.be.local.quickfix.initializer=Convertir campo a variable local en la sección de inicializador
inspection.field.can.be.local.quickfix.one.method=Convertir campo en variable local en el método ''{0}''
inspection.fill.permits.list.display.name=Falta la misma subclase de archivo en la cláusula de permisos de la clase sellada
inspection.fill.permits.list.fix.name=Add missing subclasses to the permits clause
inspection.fill.permits.list.no.missing.inheritors=Sealed class has no missing inheritors
inspection.fold.expression.fix.family.name=Doblar expresión
inspection.fold.expression.into.stream.display.name=La expresión se puede plegar en la cadena Stream
inspection.fold.expression.into.stream.fix.name=Doblar expresión en cadena de flujo
inspection.fold.expression.into.string.display.name=La expresión se puede plegar en 'String.join'
inspection.fold.expression.into.string.fix.name=Doblar expresión en 'String.join'
inspection.forward.compatibility.name=Compatibilidad con versiones posteriores
inspection.frequently.used.inheritor.inspection.display.name=La clase puede extender una clase base comúnmente utilizada
inspection.functional.expression.can.be.folded.display.name=La expresión funcional se puede plegar
inspection.fuse.stream.operations.display.name=Los pasos posteriores se pueden fusionar en la cadena Stream API
inspection.fuse.stream.operations.fix.family.name=Fusionar más declaraciones a la cadena de API Stream
inspection.fuse.stream.operations.fix.name=Fusionar {0} en la cadena de la API de Stream
inspection.fuse.stream.operations.message=La transmisión se puede extender reemplazando {0}
inspection.fuse.stream.operations.option.strict.mode=No sugiera colectores 'toList()' o 'toSet()'
inspection.handle.signature.change.type.fix.name=Cambiar tipo a ''{0}''
inspection.handle.signature.field.cannot.resolve=No se puede resolver el campo ''{0}''
inspection.handle.signature.field.not.static=El campo ''{0}'' no es estático
inspection.handle.signature.field.static=El campo ''{0}'' es estático
inspection.handle.signature.field.type=El tipo de campo ''{0}'' es ''{1}''
inspection.handle.signature.method.abstract=El método ''{0}'' es abstracto en ''{1}''
inspection.handle.signature.method.not.static=El método ''{0}'' no es estático
inspection.handle.signature.method.static=El método ''{0}'' es estático
inspection.handle.signature.name=No coinciden los tipos MethodHandle/VarHandle
inspection.handle.signature.not.subclass=La clase de llamada ''{0}'' debe ser una subclase de ''{1}''
inspection.handle.signature.use.constructor.fix.family.name=Usa una de las sobrecargas del constructor
inspection.handle.signature.use.constructor.fix.name=Usar constructor ''{0}''
inspection.handle.signature.use.method.fix.family.name=Use una de las sobrecargas de métodos
inspection.handle.signature.use.method.fix.name=Usar método ''{0}''
inspection.idempotent.loop.body=Cuerpo del bucle idempotente
inspection.illegal.character=Carácter ilegal
inspection.implicit.to.explicit.class.backward.migration.fix.name=Convert implicitly declared class into regular class
inspection.implicit.to.explicit.class.backward.migration.name=Implicitly declared class can be replaced with ordinary class
inspection.inconsistent.text.block.indent.message=Text block indent consists of tabs and spaces
inspection.inconsistent.text.block.indent.name=Inconsistent whitespace indentation in text block
inspection.inconsistent.text.block.indent.spaces.to.tabs.many.to.one.fix=Replace spaces with tabs ({0} spaces = 1 tab)
inspection.inconsistent.text.block.indent.spaces.to.tabs.one.to.one.fix=Replace spaces with tabs (1 space = 1 tab)
inspection.inconsistent.text.block.indent.tabs.to.spaces.one.to.many.fix=Replace tabs with spaces (1 tab = {0} spaces)
inspection.inconsistent.text.block.indent.tabs.to.spaces.one.to.one.fix=Replace tabs with spaces (1 tab = 1 space)
inspection.input.stream.constructor.message=InputStream' can be constructed using 'Files.newInputStream()
inspection.insert.literal.underscores.display.name=Literal numérico ilegible
inspection.insert.literal.underscores.family.name=Insertar guiones bajos en literal numérico
inspection.io.stream.constructor.description='InputStream' and 'OutputStream' can be constructed using 'Files' methods
inspection.java.8.collection.remove.if.display.name=El bucle se puede reemplazar con Collection.removeIf()
inspection.java.8.list.replace.all.display.name=Loop can be replaced with 'List.replaceAll()'
inspection.java.8.map.api.display.name=Se puede utilizar el método de mapa único
inspection.java.9.collection.factory.display.name=La creación de colección inmutable se puede reemplazar con una llamada de fábrica de colección
inspection.javadoc.blank.lines.display.name=Blank line should be replaced with <p> to break lines
inspection.javadoc.blank.lines.fix.family.name=Replace blank lines with <p>
inspection.javadoc.blank.lines.fix.name=Insert <p>
inspection.javadoc.blank.lines.message=Blank line will be ignored
inspection.javadoc.label.text=Etiquetas Javadoc adicionales:
inspection.javadoc.link.as.plain.text.display.name=Link specified as plain text
inspection.javadoc.link.as.plain.text.message=Link specified as plain text
inspection.javadoc.lint.display.name=Problemas HTML en Javadoc(DocLint)
inspection.javadoc.method.problem.missing.param.tag=Falta la etiqueta obligatoria <code> @param</code> para el parámetro {0}
inspection.javadoc.method.problem.missing.tag.description=Falta la descripción de la etiqueta {0}
inspection.javadoc.option.ignore.deprecated=Ignorar elementos marcados como @deprecated
inspection.javadoc.option.ignore.period=Ignorar problemas de período
inspection.javadoc.option.ignore.self.ref=Ignorar Javadoc apuntando a sí mismo
inspection.javadoc.option.ignore.simple=Ignorar accesos de propiedad simples
inspection.javadoc.option.ignore.throws=Ignorar etiqueta duplicada 'throws'
inspection.javadoc.option.tab.title=Clase
inspection.javadoc.option.tab.title.field=Campo
inspection.javadoc.option.tab.title.inner.class=Clase interna
inspection.javadoc.option.tab.title.method=Método
inspection.javadoc.option.tab.title.module=Módulo
inspection.javadoc.option.tab.title.package=Paquete
inspection.javadoc.problem.add.param.tag=Agregar etiqueta @param para el parámetro ''{0}''
inspection.javadoc.problem.add.param.tag.family=Agregar etiqueta de parámetro Javadoc faltante
inspection.javadoc.problem.add.tag=Agregar etiqueta @{0} {1}
inspection.javadoc.problem.add.tag.family=Agregar etiqueta Javadoc faltante
inspection.javadoc.problem.cannot.resolve=No se puede resolver el símbolo {0}
inspection.javadoc.problem.descriptor=Javadoc requerido está ausente
inspection.javadoc.problem.descriptor1=Falta un punto en la documentación. La herramienta Javadoc utiliza el período para generar el comentario para la página de descripción general
inspection.javadoc.problem.disallowed.tag=La etiqueta {0} no está permitida aquí
inspection.javadoc.problem.duplicate.param=Etiqueta @param duplicada para el parámetro ''{0}''
inspection.javadoc.problem.duplicate.tag=Etiqueta @ {0} duplicada
inspection.javadoc.problem.duplicate.throws=Etiqueta @throws o @exception duplicada para la excepción ''{0}''
inspection.javadoc.problem.inaccessible=El símbolo {0} es inaccesible desde aquí
inspection.javadoc.problem.missing.tag=Falta la etiqueta obligatoria {0}
inspection.javadoc.problem.missing.tag.description=Falta {0} después de la etiqueta @ {1}
inspection.javadoc.problem.name.expected=Nombre esperado
inspection.javadoc.problem.pointing.to.itself=Javadoc apuntando a sí mismo
inspection.javadoc.problem.see.tag.expecting.ref=Se espera referencia de clase/método, texto entre comillas o enlace HTML después de la etiqueta @see
inspection.javadoc.problem.snippet.tag.is.not.available='@snippet' tag is not available at this language level
inspection.javadoc.problem.wrong.tag=Etiqueta incorrecta {0}
inspection.javadoc.ref.display.name=La declaración tiene problemas en las referencias de Javadoc
inspection.javadocDeclaration.display.name=Javadoc declaration problems
inspection.join.declaration.and.assignment.display.name=La asignación se puede unir con la declaración
inspection.join.declaration.and.assignment.fix.family.name=Declaración de unión y asignación
inspection.join.declaration.and.assignment.fix.title=Join Declaration and Assignment
inspection.join.declaration.and.assignment.message=La asignación se puede unir con la declaración ''{0}''
inspection.labeled.switch.rule.redundant.code.block.display.name=La regla del interruptor etiquetado tiene un bloque de código redundante
inspection.labeled.switch.rule.redundant.code.block.message=El bloque de código de la regla etiquetada es redundante
inspection.labeled.switch.rule.redundant.code.fix.name=Desenvolver bloque de código de la regla etiquetada
inspection.lambda.can.be.method.call.display.name=Lambda se puede reemplazar con una llamada al método
inspection.lambda.to.method.call.fix.family.name=Reemplazar expresión lambda con llamada al método
inspection.lambda.to.method.call.fix.name=Reemplazar expresión lambda con ''{0}''
inspection.magic.constant.display.name=Constante mágica
inspection.magic.constants.should.be.one.of.values=Debe ser uno de: {0} {1,choice,0#| 1#o su combinación}
inspection.manual.min.max.calculation.description=Puede ser reemplazado con la llamada '' Math. {0} ''
inspection.manual.min.max.calculation.disable.for.non.integral=Desactivar para flotación y doble
inspection.manual.min.max.calculation.display.name=Cálculo manual mínimo/máximo
inspection.map.foreach.display.name=Map.forEach() se puede utilizar
inspection.map.foreach.option.no.loops=No reportar bucles
inspection.mapping.before.count.family.name=Mapping call before count()
inspection.mapping.before.count.message=The ''{0}()'' call does not change the final count and might be optimized out.
inspection.meaningless.record.annotation.description=Meaningless record annotation
inspection.meaningless.record.annotation.message.method=Annotation has no effect: its target is METHOD but the corresponding accessor is explicitly declared
inspection.meaningless.record.annotation.message.method.and.parameter=Annotation has no effect: its targets are METHOD and PARAMETER but both accessor and canonical constructor are explicitly declared
inspection.meaningless.record.annotation.message.parameter=Annotation has no effect: its target is PARAMETER but the canonical constructor is explicitly declared
inspection.message.anonymous.ref.loc.can.be.replaced.with.method.reference=Anonymous#ref#loc se puede reemplazar con la referencia del método
inspection.message.can.be.replaced.with.0.constructor=Puede ser reemplazado con el constructor ''{0}''
inspection.message.can.be.replaced.with.files.readstring=Puede ser reemplazado con 'Files.readString()'
inspection.message.can.be.replaced.with.files.writestring=Puede ser reemplazado por 'Files.writeString()'
inspection.message.can.be.replaced.with.optional.of.nullable=Puede ser reemplazado por Optional.ofNullable()
inspection.message.can.be.replaced.with.single.expression.in.functional.style=Se puede reemplazar con una sola expresión en estilo funcional
inspection.message.can.be.replaced.with.string.repeat=Puede ser reemplazado por 'String.repeat()'
inspection.message.external.snippet.differs.from.inline.snippet=External snippet differs from inline snippet
inspection.message.filter.is.present.chain.can.be.replaced.with.anymatch=''filter().{0}().isPresent()'' cadena no se puede reemplazar con '' anyMatch () ' 'Hay
inspection.message.full.description=Descripción completa
inspection.message.lambda.parameter.type.is.redundant=El tipo de parámetro Lambda es redundante
inspection.message.pattern.variables.can.be.replaced.with.cast=Using 'instanceof' with patterns
inspection.message.pattern.variables.can.be.replaced.with.cast.family.name=Replace without patterns
inspection.message.pattern.variables.can.be.replaced.with.cast.fix.name=Replace ''{0}'' with casts
inspection.message.pattern.variables.can.be.replaced.with.cast.preserve.option=Try to preserve unused variables from patterns during quickfix
inspection.message.pseudo.functional.style.code=Código de estilo pseudo funcional
inspection.message.record.can.be.converted.to.class=Puede convertir un registro en una clase
inspection.message.redundant.default.parameter.value.assignment=Asignación de valor de parámetro predeterminado redundante
inspection.message.replace.optional.with.if.statements=Reemplazar opcional con declaraciones if
inspection.message.snippet.file.not.found=Snippet file ''{0}'' is not found
inspection.message.snippet.region.not.found=Region is not found
inspection.missingJavadoc.display.name=Missing Javadoc
inspection.missingJavadoc.label.minimalVisibility=Minimal visibility:
inspection.missingJavadoc.label.requiredTags=Required tags:
inspection.move.field.assignment.to.initializer.display.name=La asignación de campo se puede mover al inicializador
inspection.no.jdk.error.message=El JDK no está configurado correctamente para este proyecto. La inspección no puede continuar.
inspection.no.modules.error.message=Este proyecto no contiene módulos. La inspección no puede continuar.
inspection.notnull.field.not.initialized.display.name=@NotNull El campo no está inicializado
inspection.notnull.field.not.initialized.message={0} campos deben inicializarse
inspection.notnull.field.not.initialized.option.implicit=Ignorar campos que podrían inicializarse implícitamente
inspection.notnull.field.not.initialized.option.implicit.description=When checked, fields that are known to be initialized implicitly (e.g. via dependency injection) will not be reported
inspection.notnull.field.not.initialized.option.setup=Ignorar campos inicializados en el método setUp()
inspection.notnull.field.not.initialized.option.setup.description=When checked, fields in test case classes that are initialized in setup methods (e.g. annotated via <code>@Before</code> or <code>@BeforeEach</code>) will not be reported.
inspection.null.value.for.optional.assigned.ignore.fix.name=No advertir al comparar Opcional con nulo
inspection.null.value.for.optional.assigned.message=El valor opcional se compara con nulo
inspection.null.value.for.optional.context.assignment=asignación
inspection.null.value.for.optional.context.declaration=declaration
inspection.null.value.for.optional.context.lambda=expresión lambda
inspection.null.value.for.optional.context.parameter=parámetro
inspection.null.value.for.optional.context.return=declaración de retorno
inspection.null.value.for.optional.fix.family.name=Reemplazar con método opcional vacío
inspection.null.value.for.optional.message=Null se usa para el tipo "Opcional" en {0}
inspection.null.value.for.optional.option.comparisons=Informe de comparación de Opcional con nulo
inspection.nullable.problems.display.name=@NotNull/@ Problemas que aceptan valores NULL
inspection.nullable.problems.ignore.external.notnull=&Ignorar externa @NotNull
inspection.nullable.problems.method.overrides.notnull.option=<html>Informar @NotNull y parámetros que anulan los métodos @Nullable y<br>@Nullable que anulan @NotNull</html>
inspection.nullable.problems.method.overrides.option=Informe de parámetros o métodos no anotados o anulados que anulan @NotNull
inspection.nullable.problems.not.annotated.getters.for.annotated.fields=Informar parámetros no anotados y de establecimiento o captadores de campos anotados
inspection.nullable.problems.notnull.overrides.option=Informe @NotNull y parámetros que anulan los no anotados
inspection.nullable.problems.notnull.parameters.with.null.literal.option=Informar de los parámetros @NotNull con usos de argumentos literales nulos
inspection.obvious.null.check.display.name=Se llama al método de verificación nula con un argumento obviamente no nulo
inspection.optional.assigned.to.null.display.name=Valor nulo para el tipo opcional
inspection.optional.get.without.is.present.display.name=Se llama a Optional.get() sin la verificación isPresent()
inspection.optional.get.without.is.present.message=<code> {0}.#ref()</code> sin la marca '' isPresent() ''
inspection.optional.get.without.is.present.method.reference.message=<code>#ref</code> without 'isPresent()' check
inspection.optional.is.present.display.name=Optional.isPresent() se puede reemplazar con una expresión de estilo funcional
inspection.optional.to.if.display.name=Opcional se puede reemplazar con la secuencia de instrucciones if
inspection.output.stream.constructor.message=OutputStream' can be constructed using 'Files.newOutputStream()
inspection.overflowing.loop.index.inspection.description=El bucle se ejecuta cero o miles de millones de veces
inspection.overflowing.loop.index.inspection.name=Loop se ejecuta cero o miles de millones de veces
inspection.overwritten.key.array.message=Overwritten array element
inspection.overwritten.key.display.name=Clave de mapa sobrescrita o elemento de conjunto
inspection.overwritten.key.map.message=Clave de mapa duplicado
inspection.overwritten.key.set.message=Elemento de conjunto duplicado
inspection.parameter.can.be.local.display.name=El parámetro puede ser local
inspection.parameter.can.be.local.problem.descriptor=El parámetro se puede convertir a una variable local
inspection.preview.feature=Preview Feature warning
inspection.preview.feature.0.is.preview.api.message={0} is a preview API and may be removed in a future release
inspection.quickfix.assert.family=Afirmar
inspection.raw.use.of.parameterized.type.problem.descriptor=Raw use of parameterized class <code>#ref</code> #loc
inspection.read.write.string.can.be.used.display.name=Se puede utilizar 'Files.readString()' o 'Files.writeString()'
inspection.redundant.array.creation.display.name=Creación de matriz redundante
inspection.redundant.array.creation.for.varargs.call.descriptor=Creación de matriz redundante para llamar al método varargs
inspection.redundant.array.creation.quickfix=Eliminar la creación de matriz explícita
inspection.redundant.explicit.close=Redundante 'close()'
inspection.redundant.file.creation.description=<code>\#ref</code> está duplicado \#loc
inspection.redundant.file.creation.display.name=Creación de instancias de 'Archivo' innecesarias
inspection.redundant.file.creation.quickfix=Reemplazar con el nombre del archivo
inspection.redundant.lambda.parameter.type.display.name=Tipos de parámetros lambda redundantes
inspection.redundant.null.check.always.fail.message=La verificación nula siempre fallará: {0} nunca es nulo
inspection.redundant.null.check.fix.family.name=Eliminar verificación nula redundante
inspection.redundant.null.check.fix.notnull.family.name=Eliminar erróneo '!=null'
inspection.redundant.null.check.message=Verificación nula redundante: {0} nunca es nulo
inspection.redundant.operation.on.empty.array.message=Array <code>#ref</code> siempre está vacío
inspection.redundant.operation.on.empty.collection.message=La colección <code>#ref</code> siempre está vacía
inspection.redundant.operation.on.empty.container.display.name=Operación redundante en contenedor vacío
inspection.redundant.operation.on.empty.map.message=El mapa <code>#ref</code> siempre está vacío
inspection.redundant.record.constructor.can.be.compact.message=El constructor canónico se puede convertir a forma compacta
inspection.redundant.record.constructor.canonical.message=Constructor canónico redundante
inspection.redundant.record.constructor.compact.message=Constructor compacto redundante
inspection.redundant.record.constructor.description=Constructor de registros redundantes
inspection.redundant.record.constructor.fix.family.name=Convertir constructor canónico a forma compacta
inspection.redundant.record.constructor.statement.message=Asignación de campo redundante en constructor compacto
inspection.redundant.stream.optional.call.display.name=Paso redundante en Stream o cadena de llamadas opcional
inspection.redundant.stream.optional.call.explanation.at.most.one=el flujo contiene como máximo un elemento
inspection.redundant.stream.optional.call.explanation.distinct=ya había una llamada 'distinta' en la cadena
inspection.redundant.stream.optional.call.explanation.distinct.set=los elementos serán distintos de todos modos cuando se recopilen en el conjunto
inspection.redundant.stream.optional.call.explanation.filter=El predicado siempre es verdadero
inspection.redundant.stream.optional.call.explanation.map.flatMap=la llamada anterior 'map' puede reemplazar el paso 'flatMap'
inspection.redundant.stream.optional.call.explanation.parallel=hay una llamada ''{0}'' posterior que anula esta llamada
inspection.redundant.stream.optional.call.explanation.parallel.single=el flujo creado a partir de un solo elemento no se paralelizará
inspection.redundant.stream.optional.call.explanation.parallel.source=the stream was created via 'parallelStream()', so it's already parallel
inspection.redundant.stream.optional.call.explanation.sequential.source=the stream was created via 'stream()', so it's already sequential
inspection.redundant.stream.optional.call.explanation.sorted=la llamada ''{0}'' subsiguiente no depende del orden de clasificación
inspection.redundant.stream.optional.call.explanation.sorted.parallel=subsequent ''{0}()'' operation doesn''t depend on the sort order for parallel streams
inspection.redundant.stream.optional.call.explanation.sorted.twice=el contenido de la transmisión se ordena nuevamente después de eso
inspection.redundant.stream.optional.call.explanation.unordered=ya había una llamada 'desordenada' en la cadena
inspection.redundant.stream.optional.call.fix.bind.name=Merge the ''{0}()'' step with the previous ''{1}()'' step
inspection.redundant.stream.optional.call.fix.collect.to.ordered.family.name=Recopilar en 'LinkedHashSet'
inspection.redundant.stream.optional.call.fix.family.name=Eliminar llamada en cadena redundante
inspection.redundant.stream.optional.call.fix.name=Eliminar llamada ''{0}''
inspection.redundant.stream.optional.call.fix.replace.terminal=Replace the terminal operation
inspection.redundant.stream.optional.call.fix.replace.terminal.text=Replace the terminal operation with ''{0}()''
inspection.redundant.stream.optional.call.message=Llamada ''{0}'' redundante
inspection.redundant.stream.optional.call.message.with.explanation=Llamada duplicada ''{0}()''\: {1}
inspection.redundant.stream.optional.call.option.streamboxing=Informar sobre boxeo redundante en Stream.map
inspection.redundant.unmodifiable.call.description=Uso duplicado de envoltorios de colección no modificables
inspection.redundant.unmodifiable.call.display.name=Uso duplicado del contenedor de ''{0}''
inspection.redundant.unmodifiable.call.unwrap.argument.quickfix=Desenvolver argumento
inspection.reflect.handle.invocation.argument.not.array=El argumento no es un tipo de matriz
inspection.reflect.handle.invocation.argument.not.exact=El tipo de argumento debe ser exactamente ''{0}''
inspection.reflect.handle.invocation.primitive.argument.null=El argumento del tipo ''{0}'' no puede ser '' nulo ''
inspection.reflect.handle.invocation.receiver.incompatible=El tipo de receptor de llamada es incompatible: se espera ''{0}''
inspection.reflect.handle.invocation.receiver.null=El receptor de la llamada es 'nulo'
inspection.reflect.handle.invocation.result.not.assignable=Debería ser lanzado a ''{0}'' o su superclase
inspection.reflect.handle.invocation.result.not.exact=Debería convertirse en ''{0}''
inspection.reflect.handle.invocation.result.null=El valor devuelto es siempre 'nulo'
inspection.reflect.handle.invocation.result.void=El tipo de retorno es 'void'
inspection.reflection.invocation.argument.count={0,choice,0#No hay argumentos|1#Un argumento es|1 <{0} argumentos son} esperados
inspection.reflection.invocation.argument.not.assignable=El argumento no se puede asignar a ''{0}''
inspection.reflection.invocation.array.not.assignable=Matriz {0,choice,1#elemento tiene|1 <elementos tienen} incompatible {0,choice,1#tipo|1 <tipos}
inspection.reflection.invocation.item.count={0,choice,0#La matriz vacía es|1#La matriz de un solo elemento es|1 <Se esperan {0} elementos de la matriz
inspection.reflection.invocation.item.not.assignable=El elemento de la matriz no se puede asignar a ''{0}''
inspection.reflection.invocation.name=Los argumentos de invocación reflectante no coinciden
inspection.reflection.member.access.cannot.resolve.constructor.arguments=No se puede resolver el constructor con tipos de argumentos especificados
inspection.reflection.member.access.cannot.resolve.field=No se puede resolver el campo ''{0}''
inspection.reflection.member.access.cannot.resolve.method=No se puede resolver el método ''{0}''
inspection.reflection.member.access.cannot.resolve.method.arguments=No se puede resolver el método ''{0}'' con tipos de argumentos especificados
inspection.reflection.member.access.check.exists=Verifique que el campo/método exista en clases no finales
inspection.reflection.member.access.check.exists.exclude.chooser=Clase para excluir
inspection.reflection.member.access.check.exists.exclude.label=Exclude classes:
inspection.reflection.member.access.constructor.not.public=El constructor no es público
inspection.reflection.member.access.field.not.in.class=El campo ''{0}'' no está declarado en la clase ''{1}''
inspection.reflection.member.access.field.not.public=El campo ''{0}'' no es público
inspection.reflection.member.access.fix.family.name=Use el método de reflexión apropiado
inspection.reflection.member.access.method.not.in.class=El método ''{0}'' no está declarado en la clase ''{1}''
inspection.reflection.member.access.method.not.public=El método ''{0}'' no es público
inspection.reflection.member.access.name=Acceso reflectante a miembro de clase inexistente/no visible
inspection.reflection.visibility.name=Problemas de acceso reflectante a través de módulos
inspection.remove.literal.underscores.display.name=Guiones bajos en literal numérico
inspection.remove.literal.underscores.family.name=Eliminar guiones bajos del literal numérico
inspection.replace.inefficient.stream.count.display.name=Cadenas de llamadas de la API de Stream ineficientes que terminan en count()
inspection.replace.javadoc.display.name=Comment replaceable with Javadoc
inspection.replace.methodref.ternary.quickfix=Reemplazar con lambda de verificación nula
inspection.replace.ternary.quickfix=Reemplazar con ''{0} != null ?:''
inspection.replace.with.bulk.file.attributes.read.fix.family.name=Replace with bulk 'Files.readAttributes()' call
inspection.replace.with.bulk.fix.family.name=Reemplazar con llamada de método masivo
inspection.replace.with.bulk.fix.name=Reemplazar iteración con llamada masiva ''{0}''
inspection.replace.with.bulk.message=La iteración se puede reemplazar con una llamada masiva ''{0}''
inspection.replace.with.bulk.wrap.arrays=Use Arrays.asList() para envolver arreglos
inspection.replace.with.enhanced.switch.statement.fix.name=Reemplazar con declaración mejorada 'switch'
inspection.replace.with.javadoc=Replace with Javadoc comment
inspection.replace.with.javadoc.comment=Comment can be converted to Javadoc
inspection.replace.with.old.style.switch.statement.fix.name=Reemplazar con la declaración 'switch' de estilo antiguo
inspection.replace.with.regular.string.literal.fix=Reemplazar con literal de cadena regular
inspection.replace.with.string.template.fix=Replace with string template
inspection.replace.with.switch.expression.fix.family.name=Migrate to enhanced switch
inspection.replace.with.switch.expression.fix.name=Reemplazar con expresión 'cambiar'
inspection.replace.with.text.block.fix=Reemplazar con bloque de texto
inspection.replace.with.trivial.lambda.fix.family.name=Reemplazar con lambda trivial
inspection.replace.with.trivial.lambda.fix.name=Reemplazar con lambda devolviendo ''{0}''
inspection.require.non.null=Reemplazar verificación nula con llamada estática de Objetos/Stream
inspection.require.non.null.description=La verificación nula se puede reemplazar con una llamada al método
inspection.require.non.null.message=Reemplazar condición con {0}
inspection.require.non.null.no.warning.replacement.bigger=No advertir si la longitud del reemplazo es mayor que la original
inspection.require.non.null.quickfix=Replace {0, choice, 1#''if'' statement|2#conditional expression} with ''{1}()'' call
inspection.return.separated.from.computation.descriptor=Retorno separado del cálculo del valor de ''{0}''
inspection.return.separated.from.computation.family.quickfix=Mueva 'retorno' más cerca del cálculo del resultado
inspection.return.separated.from.computation.name='return' separado del cálculo del resultado
inspection.return.separated.from.computation.quickfix=Mueva ''return'' más cerca del cálculo del valor de ''{0}''
inspection.same.parameter.display.name=El parámetro del método real es la misma constante
inspection.same.parameter.fix.family.name=Parámetro en línea como valor constante
inspection.same.parameter.fix.name=Valor en línea ''{1}'' para el parámetro ''{0}''
inspection.same.parameter.problem.descriptor=El valor real del parámetro ''{0}'' es siempre ''{1}''
inspection.simplifiable.comparator.comparing.message=Innecesaria llamada ''{0}()''
inspection.simplifiable.comparator.display.name=El comparador se puede simplificar
inspection.simplifiable.comparator.entry.comparator.message=En su lugar, se puede utilizar ''{0}''
inspection.simplifiable.comparator.fix.comparing.family.name=Eliminar llamada redundante
inspection.simplifiable.comparator.fix.entry.comparator.family.name=Usar comparador de Map.Entry predefinido
inspection.simplifiable.comparator.fix.remove.name=Eliminar llamada ''{0}()''
inspection.simplifiable.comparator.fix.replace.name=Eliminar la llamada ''{0}()'' y usar '' {1}() ''
inspection.simplifiable.comparator.fix.reversed.family.name=Simplifique el comparador reemplazando 'max' por 'min'
inspection.simplifiable.comparator.fix.reversed.name=Reemplazar con ''{0}'' simplificando el comparador
inspection.simplifiable.comparator.reversed.message=El comparador se puede simplificar si la llamada '' {0}() '' se reemplaza por '' {1}() ''
inspection.simplify.collector.display.name=El recopilador se puede simplificar
inspection.simplify.collector.fix.family.name=Simplificar el colector en cascada
inspection.simplify.collector.fix.name=Utilice el recopilador '' Colectores. {0}''
inspection.simplify.collector.message=Puede simplificarse usando el colector ''{0}''
inspection.simplify.for.each.extract.intermediate.operations=Extraer operaciones intermedias
inspection.simplify.foreach.display.name=Llamada forEach() simplificable
inspection.simplify.optional.call.chains.display.name=La cadena de llamadas opcional se puede simplificar
inspection.simplify.stream.api.call.chains.display.name=La cadena de llamadas de la API de transmisión se puede simplificar
inspection.slow.abstract.set.remove.all.description=Call to 'set.removeAll(list)' may work slowly
inspection.slow.abstract.set.remove.all.fix.family.name=Use 'Set.remove' instead of 'Set.removeAll'
inspection.slow.list.contains.all.description=Call to 'list.containsAll(collection)' may have poor performance
inspection.slow.list.contains.all.fix.family.name=Wrap in 'HashSet' constructor
inspection.slow.list.contains.all.fix.name=Wrap ''{0}'' in ''HashSet'' constructor
inspection.sorted.collection.with.non.comparable.keys.display.name=Colección ordenada con elementos no comparables
inspection.sorted.collection.with.non.comparable.keys.message=Construcción de colección ordenada con elementos no comparables
inspection.sorted.collection.with.non.comparable.keys.option.type.parameters=No informe parámetros de tipo no comparables
inspection.static.pseudo.functional.style.method.display.name=Expresión pseudo funcional usando clase estática
inspection.stream.api.migration.can.be.replaced.with.call=Puede ser reemplazado con la llamada ''{0}''
inspection.stream.to.loop.display.name=La cadena de llamadas de la API de transmisión se puede reemplazar con un bucle
inspection.string.repeat.can.be.used.display.name=Se puede utilizar String.repeat()
inspection.string.template.migration.concatenation.message=Concatenation can be replaced with string template
inspection.string.template.migration.name=String template can be used
inspection.string.template.migration.string.message=String can be replaced with template
inspection.surround.if.family=Rodear con if
inspection.surround.if.quickfix=Rodear con ''if ({0}{1})''
inspection.suspicious.list.remove.display.name='List.remove()' sospechoso en el bucle
inspection.suspicious.return.byte.input.stream.convert.to.unsigned=Convert to an unsigned byte
inspection.suspicious.return.byte.input.stream.name=Suspicious byte value returned from 'InputStream.read()'
inspection.suspicious.ternary.in.varargs.description=El operador ternario dentro de la llamada vararg contiene ramas de matriz y no matriz
inspection.suspicious.ternary.in.varargs.display.name=Operador ternario cuestionable en la llamada al método vararg
inspection.suspicious.ternary.in.varargs.quickfix=Envolviendo con un inicializador de matriz
inspection.switch.expression.backward.expression.migration.inspection.name=La expresión 'switch' se puede reemplazar con una declaración de estilo antiguo 'switch'
inspection.switch.expression.backward.migration.inspection.name=El nuevo estilo 'interruptor' puede ser reemplazado por uno antiguo
inspection.switch.expression.backward.statement.migration.inspection.name=la declaración 'switch' se puede reemplazar con la declaración 'switch' de estilo antiguo
inspection.switch.expression.migration.expression.max.statements=Maximum number of statements in one branch to convert to switch expression
inspection.switch.expression.migration.inspection.name=La declaración se puede reemplazar con un 'interruptor' mejorado
inspection.switch.expression.migration.inspection.switch.description=La instrucción Switch se puede reemplazar con 'switch' mejorado
inspection.switch.expression.migration.option.expression.max.statements=Do not report switches having more than {0} {0, choice, 1#statement|2#statements} in a single branch
inspection.switch.expression.migration.warn.only.on.expression=Mostrar advertencia solo si la conversión a expresión es posible
inspection.switch.labeled.rule.can.be.code.block.display.name=La regla del interruptor etiquetado puede tener un bloque de código
inspection.switch.labeled.rule.can.be.code.block.expression.message=La expresión del resultado de la regla etiquetada se puede ajustar con un bloque de código
inspection.switch.labeled.rule.can.be.code.block.fix.expression.name=Envuelva la expresión de resultado de la regla etiquetada con bloque de código
inspection.switch.labeled.rule.can.be.code.block.fix.statement.name=Envuelva la declaración de la regla etiquetada con el bloque de código
inspection.switch.labeled.rule.can.be.code.block.statement.message=La declaración de la regla etiquetada se puede envolver con un bloque de código
inspection.text.block.backward.migration.message=El bloque de texto se puede convertir en un literal de cadena normal
inspection.text.block.backward.migration.name=El bloque de texto se puede reemplazar con un literal de cadena regular
inspection.text.block.migration.concatenation.message=Concatenation can be replaced with text block
inspection.text.block.migration.name=Se puede utilizar un bloque de texto
inspection.text.block.migration.string.message=String can be replaced with text block
inspection.text.block.migration.suggest.literal.replacement=Sugerir reemplazar cadena con saltos de línea
inspection.trailing.whitespaces.in.text.block.message=Trailing whitespace characters inside text block
inspection.trailing.whitespaces.in.text.block.name=Trailing whitespace in text block
inspection.trailing.whitespaces.in.text.block.remove.whitespaces=Remove trailing whitespace characters
inspection.trailing.whitespaces.in.text.block.replaces.whitespaces.with.escapes=Escape trailing whitespace characters
inspection.trivial.functional.expression.usage.display.name=Uso trivial de expresión funcional
inspection.unchecked.warning.display.name=Advertencia sin marcar
inspection.undeclared.service.usage.message=El uso del servicio ''{0}'' no está declarado en module-info
inspection.undeclared.service.usage.name=Uso del servicio no declarado en 'module-info'
inspection.unresolved.module.dependencies.problem.descriptor=Unresolved module dependencies
inspection.unused.assignment.display.name=Asignación no utilizada
inspection.unused.assignment.option=Informe ++ i cuando puede ser reemplazado por (i + 1)
inspection.unused.assignment.option1=Informe i ++ cuando el valor modificado no se utilice posteriormente
inspection.unused.assignment.option2=Informar inicializadores redundantes
inspection.unused.assignment.option3=Report pattern variables whose values are never used
inspection.unused.assignment.option4=Report iteration parameters whose values are never used
inspection.unused.assignment.problem.descriptor1=La variable {0} nunca se usa
inspection.unused.assignment.problem.descriptor2=La variable {0} inicializador {1} es redundante
inspection.unused.assignment.problem.descriptor3=El valor {0} asignado a {1} nunca se usa
inspection.unused.assignment.problem.descriptor4=El valor cambiado en {0} nunca se usa
inspection.unused.assignment.problem.descriptor5=The value of pattern variable <code>#ref</code> #loc is never used
inspection.unused.assignment.problem.descriptor6=The value of foreach iteration parameter <code>#ref</code> #loc is never used
inspection.unused.assignment.remove.assignment.quickfix=Eliminar asignación redundante
inspection.unused.assignment.remove.assignment.quickfix.title=Remove Redundant Assignment
inspection.unused.assignment.remove.initializer.quickfix=Remove redundant initializer
inspection.unused.assignment.remove.initializer.quickfix.title=Remove Redundant Initializer
inspection.unused.display.name=Declaración no utilizada
inspection.unused.parameter.composer=El parámetro <code>#ref</code> no se utiliza en ninguna implementación
inspection.unused.parameter.composer1=El parámetro <code>#ref</code> no se utiliza en este método ni en ninguno de sus métodos derivados
inspection.unused.parameter.delete.family=Safe delete unused parameter(s)
inspection.unused.parameter.delete.quickfix=Eliminar parámetros no utilizados
inspection.unused.parameter.problem.descriptor=Parameter <code>#ref</code> is not used
inspection.unused.return.value.display.name=El método puede ser nulo
inspection.unused.return.value.make.void.quickfix=Hacer que el método sea 'void'
inspection.unused.return.value.problem.descriptor=El valor de retorno del método nunca se usa
inspection.unused.symbol.check.accessors=Captadores/definidores
inspection.unused.symbol.check.classes=Clases:
inspection.unused.symbol.check.fields=Campos:
inspection.unused.symbol.check.inner.classes=Clases internas:
inspection.unused.symbol.check.localvars=Variables locales
inspection.unused.symbol.check.methods=Métodos:
inspection.unused.symbol.check.parameters=Parámetros en
inspection.unused.symbol.check.parameters.excluding.hierarchy=Excluding hierarchy
inspection.use.bulk.operation.display.name=Se puede usar operación masiva en lugar de iteración
inspection.value.based.warnings=Value-based warnings
inspection.value.based.warnings.synchronization=Attempt to synchronize on an instance of a value-based class
inspection.variable.assigned.to.itself.display.name=La variable se asigna a sí misma
inspection.wrapper.type.may.be.primitive.display.name=El tipo de envoltura puede ser primitivo
inspection.wrapper.type.may.be.primitive.fix.name=Convertir el tipo de envoltorio en primitivo
inspection.wrapper.type.may.be.primitive.name=El tipo puede ser primitivo
intention.add.explicit.type.arguments.family=Agregar argumentos de tipo explícito
intention.add.on.demand.static.import.family=Agregar importación estática bajo demanda
intention.add.on.demand.static.import.text=Agregar importación estática bajo demanda para ''{0}''
intention.add.single.member.import.text=Agregar importación para ''{0}''
intention.add.single.member.static.import.family=Agregar importación estática de un solo miembro
intention.add.single.member.static.import.text=Agregar importación estática para ''{0}''
intention.assign.field.from.parameter.family=Asignar parámetro al campo
intention.assign.field.from.parameter.text=Asignar parámetro al campo ''{0}''
intention.bind.fields.from.parameters.family=Vincular parámetros a campos
intention.bind.fields.from.parameters.text=Vincular {0} parámetros a campos
intention.break.string.on.line.breaks.text=Cadena de ruptura en '\\n'
intention.category.annotations=Java/Annotations
intention.category.collections=Java/Collections
intention.category.comments=Java/Comments
intention.category.concurrency=Java/Concurrency
intention.category.conditional.operator=Java/Conditions
intention.category.control.flow=Java/Control flow
intention.category.declaration=Java/Declaration
intention.category.expressions=Java/Expressions
intention.category.i18n=Java/Internationalization
intention.category.imports=Java/Imports
intention.category.junit=Java/JUnit
intention.category.other=Java/Other
intention.category.refactorings=Java/Refactorings
intention.category.streams=Java/Streams
intention.category.strings=Java/Strings
intention.category.try.statements=Java/Try statements
intention.compose.function.family=Reemplazar llamada a función anidada con composición
intention.compose.function.text=Reemplazar la llamada a la función anidada con y Luego llamar
intention.convert.color.representation.family=Convertir representación de color
intention.convert.color.representation.text=Convertir a ''new Color{0}''
intention.convert.compact.constructor.to.canonical=Convertir constructor compacto a canónico
intention.convert.to.single.return.command.text=Convertir cuerpo a formato de punto final único
intention.convert.to.single.return.name=Transforma el cuerpo en una forma de punto de salida único
intention.convert.to.single.return.progress.title=Convertir cuerpo a formato de punto final único
intention.create.annotation.method.from.usage=Create @interface method ''{0}()''
intention.create.field.from.parameter.family=Crear campo para parámetro
intention.create.field.from.parameter.text=Crear campo para el parámetro ''{0}''
intention.create.switch.statement=Create switch statement
intention.create.test.dialog.choose.super.class=Elija Superclase
intention.create.test.dialog.class.name=Nombre de la clase:
intention.create.test.dialog.fix.library=Arreglar
intention.create.test.dialog.generate=Generar:
intention.create.test.dialog.java=Java
intention.create.test.dialog.library.not.found={0} biblioteca no encontrada en el módulo
intention.create.test.dialog.select.methods=Generar prueba y métodos para:
intention.create.test.dialog.setUp=set&Up/@Before
intention.create.test.dialog.show.inherited=Mostrar y métodos heredados
intention.create.test.dialog.super.class=Superclase:
intention.create.test.dialog.tearDown=tear&Down/@After
intention.create.test.dialog.testing.library=Prueba y biblioteca:
intention.encapsulate.field.text=Encapsular campo
intention.error.cannot.create.class.message=No se puede crear la clase ''{0}''
intention.error.cannot.create.class.title=No se pudo crear la clase
intention.error.make.sealed.class.different.modules=Some of the inheritors are in different modules
intention.error.make.sealed.class.different.packages=Module is unnamed and some of the inheritors are in the different package
intention.error.make.sealed.class.has.anonymous.or.local.inheritors=Some of the inheritors are anonymous or local
intention.error.make.sealed.class.inheritors.not.in.java.file=Some of the inheritors are not in java files
intention.error.make.sealed.class.interface.has.no.inheritors=Interface has no inheritors
intention.error.make.sealed.class.is.used.in.functional.expression=Class is used in functional expression
intention.extract.if.condition.family=Extraer si condición
intention.extract.if.condition.text=Extraer si ({0})
intention.extract.map.step.family=Extraer al método de mapeo separado
intention.extract.map.step.text=Extraer la variable ''{0}'' a la operación ''{1}''
intention.extract.method.text=Método de extracción
intention.extract.set.from.comparison.chain.family=Extraer conjunto de la cadena de comparación
intention.extract.set.from.comparison.chain.popup.title=Extract Set from Comparison Chain
intention.extract.set.from.comparison.chain.replace.all=Replace all occurrences
intention.extract.set.from.comparison.chain.replace.only.this=Replace only this occurrence
intention.family.add.javadoc=Agregar Javadoc
intention.family.copy.abstract.method.implementation=Copiar la implementación del método abstracto
intention.family.create.a.class.in.package=Crear una clase en el paquete
intention.family.edit.method.contract=Editar contrato de método
intention.family.edit.range=Editar rango
intention.family.expand.static.import=Expandir importación estática
intention.family.fix.bounded.wildcards=Corregir comodines delimitados
intention.family.make.external.annotations.explicit=Hacer explícitas anotaciones externas
intention.family.make.inferred.annotations.explicit=Hacer explícitas anotaciones inferidas
intention.family.move.it=Moverlo
intention.family.name.add.main.method=Add 'main' method
intention.family.name.box.primitive.in.conditional.branch=Box primitive value in conditional branch
intention.family.name.convert.record.to.class=Convert record to class
intention.family.name.delete.possible.side.effects=Delete possible side effects
intention.family.name.delete.private.method=비공개 메서드 삭제
intention.family.name.dismiss=Dismiss
intention.family.name.extract.possible.side.effects=Extract possible side effects
intention.family.name.ignore.project=Do not show again in this project
intention.family.name.make.sealed=sello de clase
intention.family.name.move.class.to.test.root=Move class to test root
intention.family.name.move.member.into.class=Move member into class
intention.family.name.set.explicit.variable.type=Set explicit variable type
intention.family.name.synchronize.inline.snippet=Synchronize inline snippet
intention.family.name.upgrade.jdk=JDK 업그레이드
intention.family.put.arguments.on.one.line=Pon los argumentos en una línea
intention.family.put.arguments.on.separate.lines=Coloque los argumentos en líneas separadas
intention.family.put.parameters.on.one.line=Coloque los parámetros en una línea
intention.family.put.parameters.on.separate.lines=Coloque los parámetros en líneas separadas
intention.family.put.record.components.on.one.line=Put record components on one line
intention.family.put.record.components.on.separate.lines=Put record components on separate lines
intention.family.replace.optional.ispresent.condition.with.functional.style.expression=Reemplazar la condición Optional.isPresent() con expresión de estilo funcional
intention.family.sort.content=Ordenar contenido
intention.family.swap.if.statements=Intercambiar declaraciones 'if'
intention.family.unimplement.interface.class=Interfaz/clase de unimplement
intention.family.variable.access.from.inner.class=Variable accessFromInnerClass
intention.implement.abstract.class.default.text=Implementar clase abstracta
intention.implement.abstract.class.family=Implementar clase o interfaz abstracta
intention.implement.abstract.method.command.name=Implementar método
intention.implement.abstract.method.error.no.classes.message=No se han encontrado clases donde se pueda implementar este método
intention.implement.abstract.method.error.no.classes.title=No se encontraron clases
intention.implement.abstract.method.family=Implementar método abstracto
intention.implement.abstract.method.searching.for.descendants.progress=Buscando descendientes...
intention.implement.abstract.method.text=Implementar método ''{0}''
intention.inline.map.family=Método de mapeo de flujo en línea
intention.inline.map.inline.text=Inline ''{0}'' cuerpo en la siguiente llamada ''{1}''
intention.inline.map.merge.text=Fusionar llamada ''{0}'' y llamada ''{1}''
intention.introduce.variable.text=Introducir variable local
intention.invert.if.condition=Invertir condición 'if'
intention.make.final.fixer.if=Make ''{0}'' effectively final by moving initializer to the ''if'' statement
intention.make.final.fixer.stream=Make ''{0}'' effectively final using stream API
intention.merge.filter.family=Combinar filtros
intention.merge.filter.text=Combinar cadena de filtros
intention.move.field.assignment.to.declaration=Mover asignación a declaración de campo
intention.move.initializer.to.constructor=Mover inicializador al constructor
intention.move.initializer.to.set.up=Mover el inicializador al método de configuración
intention.name.collapse.into.loop=Contraer en bucle
intention.name.copy.to.final.temp.variable=''{0}'' a {1, choice, 0\# |1\#actual} variable temporal final
intention.name.delete.method=메서드 ''{0}()'' 삭제
intention.name.delete.method.only=... 그 외에는 없음
intention.name.delete.method.title=메서드 ''{0}()'' 삭제
intention.name.delete.method.with.callees=... 그곳에서만 사용되는 다른 비공개 메서드와 함께
intention.name.extract.method.to.new.interface=Extraer método ''{0}'' como nueva interfaz
intention.name.iterate.over=Iterate over {0}
intention.name.make.variable.final={1, choice, 0\# '' ''{0}'' '' conjunto |1\#variable} final
intention.name.move.class.to.test.root=Move ''{0}'' to test root
intention.name.move.into.if.branches=Subir a las ramas de la declaración 'if'
intention.name.pull.method.up=Mover método ''{0}'' hacia arriba
intention.name.pull.method.up.and.make.it.abstract.conditionally=Mover método ''{0}'' a ''{1}'' {2, choice, establecido en 0\# abstract |1\#}
intention.name.pull.method.up.make.it.abstract=Mover el método ''{0}'' hacia arriba y hacerlo abstracto
intention.name.set.variable.type=Set variable type to ''{0}''
intention.name.transform.variables.into.final.one.element.array={1, choice, 0\# '' ''{0}'' '' a1\#variable} elemento único convertir a la matriz final de
intention.name.upgrade.jdk.to=Upgrade JDK to {0}+
intention.override.method.text=Anular método ''{0}''
intention.replace.concatenation.with.formatted.output.family=Reemplazar concatenación con salida formateada
intention.replace.concatenation.with.formatted.output.text=Reemplazar '+' con 'java.text.MessageFormat.format()'
intention.sequenced.collection.can.be.used.display.name=SequencedCollection method can be used
intention.sequenced.collection.can.be.used.fix.name=Replace with SequencedCollection method call
intention.split.declaration.assignment.text=Dividir en declaración y asignación
intention.split.declaration.family=Declaración dividida
intention.split.filter.family=Filtro dividido
intention.split.filter.text=Dividir en cadena de filtros
intention.split.if.family=Dividir 'if'
intention.split.if.text=Dividir en 2 if's
intention.split.switch.branch.with.several.case.values.copy.text=Copiar rama 'switch'
intention.split.switch.branch.with.several.case.values.family=División de rama de interruptor con varios valores de caso en ramas de 'interruptor' individuales
intention.split.switch.branch.with.several.case.values.split.text=Valores divididos de la rama 'switch'
intention.surround.resource.with.ARM.block=Envolvente con bloque try-with-resources
intention.surround.with.ARM.block.template=try-with-resources
intention.text.add.method.contract.to.0=Agregar contrato de método a ''{0}''
intention.text.add.range.to.0=Agregar rango a ''{0}''
intention.text.annotate.externally=Anotar externamente
intention.text.collapse.repeating.annotations=Contraer anotaciones repetidas
intention.text.create.a.class.in.0=Crear una clase en ''{0}''
intention.text.create.a.class.in.package.preview=Opens a dialog to create a class in package ''{0}''
intention.text.edit.method.contract.of.0=Editar contrato de método de ''{0}''
intention.text.edit.range.of.0=Editar rango de ''{0}''
intention.text.fix.method.0.parameters.with.bounded.wildcards=Corregir parámetros del método ''{0}'' con comodines delimitados
intention.text.generate.missing.test.methods=Generate missing test methods
intention.text.implements.list.remove.others=Remove other ''{0}'' references
intention.text.replace.all.delete.import=Replace all and delete the import
intention.text.replace.implements.with.static.import=Reemplazar implementos con importación estática
intention.text.replace.static.import.with.qualified.access.to.0=Reemplazar importación estática con acceso calificado a {0}
intention.text.replace.this.occurrence.keep.import=Replace this occurrence and keep the import
intention.text.unimplement.0=Desimplementar {0}
intention.unroll.loop.family=Desenrollar bucle
intention.unwrap.else.branch=Desenvolver la rama 'else'
intention.unwrap.else.branch.changes.semantics=Desenvolver la rama 'else' (cambia la semántica)
intention.use.single.member.static.import.text=Usar importación estática para ''{0}''
intention.wrap.with.unmodifiable=Envolver con colección o mapa no modificable
intention.wrap.with.unmodifiable.list=Envolver con lista no modificable
intention.wrap.with.unmodifiable.map=Envolver con mapa no modificable
intention.wrap.with.unmodifiable.set=Envolver con un conjunto no modificable
interface.not.allowed=La interfaz no está permitida
interfaces.cannot.be.inlined=Las interfaces no se pueden insertar
introduce.functional.variable.accessibility.conflict=La variable {0} no es realmente final y, por lo tanto, no se puede acceder a ella dentro de una expresión de función
introduce.functional.variable.interface.chooser.title=Elija la interfaz funcional aplicable\: {0} -> {1}
introduce.functional.variable.nothing.found.message=No se encontró una interfaz de función aplicable
introduce.parameter.advertisement.text=Press {0} to delegate via overloading method or {1} to show more options
introduce.parameter.inlay.title.delegate=Delegate
introduce.parameter.inlay.tooltip.delegate=Delegate via overloading method
introduce.parameter.object.no.accessor.conflict.message=requiere {0, choice, 0\#getter |1\#setter} del campo ''{1}''
introduce.variable.change.semantics.warning=Extraer la expresión seleccionada cambia el significado de toda la expresión.
introduce.variable.change.type.adv=Cambie el tipo presionando {0}
introduce.variable.reassign.adv=Reasigne una variable existente presionando {0}
invalid.extracted.class.name=''{0}'' es un nombre de clase extraído no válido
invert.quickfix.preview=Opens a dialog to invert the selected boolean and choose its new name.
java.completion.tag={0, choice, 1#Tag:|2#Tags:}
java.configurable.logger.not.found=Logger was not found inside the project
java.configurable.logger.unspecified=Unspecified
java.implicit.types.inlay.provider.name=Implicit types
java.line.markers=Marcadores de línea Java
java.method.chains.inlay.provider.name=Method chains
java.platform.module.system.name=Java Platform Module System
java.preview.features.accept.notification.link=Aceptar
java.preview.features.alert.title=Alerta de función experimental
java.preview.features.legal.notice=Debe aceptar los términos del aviso legal de la especificación beta de Java para habilitar la compatibilidad con "{0}".<br/><br/> {0} (Preview)
java.preview.features.notification.title=Funciones de vista previa de Java
java.preview.features.unsupported=Java language level <b>{0} (Preview)</b> used in this project is not supported anymore. excepción
java.preview.features.unsupported.title=Unsupported Java preview features
java.preview.features.warning=Cuando se lance Java {0}, es posible que se elimine la compatibilidad con el nivel de lenguaje {1} (Vista previa)
java.preview.level={0}(테스트 버전)
java.terms.exception=예외
java.terms.instance.initializer=inicializador de instancia
java.terms.of.annotation.type={0} de tipo de anotación {1}
java.terms.of.anonymous.class={0} de clase anónima
java.terms.of.class={0} de clase {1}
java.terms.of.enum={0} de enumeración {1}
java.terms.of.interface={0} de interfaz {1}
java.terms.region=region
java.terms.static.initializer=inicializador estático
java.terms.type.parameter=parámetro de tipo
java.terms.variable.of.method={0} de {1}
javadoc.apiNote=Nota API:
javadoc.author=Autor:
javadoc.candidates.not.found=<html>No se encontraron candidatos para la llamada al método <b>{0}</b>.</html>
javadoc.constructor.candidates=<html>Los candidatos para el nuevo <b>{0}</b>() son:<br>{1}</html>
javadoc.deprecated=Desaprobado
javadoc.description.copied.from.class=Descripción copiada de la clase:
javadoc.description.copied.from.field=Descripción copiada del campo:
javadoc.description.copied.from.interface=Descripción copiada de la interfaz:
javadoc.description.inferred.annotation.hint=i
javadoc.documentation.url.checked=The following documentation {0, choice, 1#URL was|2#URLs were} checked:
javadoc.edit.api.docs.paths=Edit API docs paths
javadoc.gen.error.module.source.path.is.not.evaluated=IDEA cannot generate Javadoc as module-source-path cannot be evaluated
javadoc.gen.error.modules.without.module.info=No se puede generar Javadoc en IDEA porque el archivo module-info.java no existe en el módulo {0}
javadoc.generate.arguments=&Otros argumentos de la línea de comando:
javadoc.generate.exited=\n "javadoc" terminó con el código de salida $EXIT_CODE$
javadoc.generate.heap.size=&Tamaño máximo de pila (Mb):
javadoc.generate.include.jdk.library.sources.in.sourcepath.option=Incluir JDK y fuentes de biblioteca en -sourcepath
javadoc.generate.link.to.jdk.documentation.option=Enlace a la documentación JDK (use la opción -link)
javadoc.generate.locale=&Locale:
javadoc.generate.no.classes.in.selected.packages.error=El alcance seleccionado no contiene clases Java
javadoc.generate.no.javadoc.tool=No se pudo generar JavaDoc porque falta la herramienta javadoc para {0} o {1}. ''Configuración | Especifique el SDK de Java correcto en la ''estructura del proyecto''.
javadoc.generate.no.jdk=JavaDoc no se puede generar porque no hay ningún SDK de Java configurado para su proyecto. 'Configuración | Especifique Java SDK en 'Estructura del proyecto'.
javadoc.generate.ok=Generate
javadoc.generate.open.in.browser=Abrir documento &generado en el navegador
javadoc.generate.options.hierarchy=Generar árbol de jerarquía
javadoc.generate.options.index=Generar índice
javadoc.generate.options.index.per.letter=Índice separado por letra
javadoc.generate.options.navigator=Generar barra de navegación
javadoc.generate.options.separator=JavaDoc Options
javadoc.generate.output.directory=Salida y directorio:
javadoc.generate.output.directory.browse=Examinar directorio de salida
javadoc.generate.scope.row=Visibility level:
javadoc.generate.sources.progress=Buscando fuentes para generar Javadoc
javadoc.generate.tag.list.deprecated=lista obsoleta
javadoc.generate.temp.file.does.not.exist=El archivo temporal falta o no se puede abrir
javadoc.generate.temp.file.error=No se puede crear un archivo temporal
javadoc.generate.title=Generar JavaDoc
javadoc.generate.validation.error=Specify the output directory.
javadoc.implNote=Nota de implementación:
javadoc.implSpec=Requisitos de implementación:
javadoc.method.in.class={0} en la clase {1}
javadoc.method.in.interface={0} en la interfaz {1}
javadoc.method.overrides=Anulaciones:
javadoc.method.specified.by=Especificado por:
javadoc.option.automatically.insert.closing.tag.javadoc=Inserta automáticamente la etiqueta de cierre en JavaDoc
javadoc.option.javadoc.title=JavaDoc
javadoc.see.also=Ver también:
javadoc.settings.title=Javadoc
javadoc.since=Desde:
javadoc.snippet.error.both.substring.and.regex=@{0}: either regex or substring should be specified but not both
javadoc.snippet.error.duplicate.attribute=@{0}: duplicate attribute: ''{1}''
javadoc.snippet.error.malformed.regular.expression=@{0}: malformed regular expression: {1}
javadoc.snippet.error.malformed.replacement=@{0}: malformed regular expression replacement ''{1}'': {2}
javadoc.snippet.error.markup.tag.expected=Markup tag or attribute expected
javadoc.snippet.error.missing.required.attribute=@{0}: missing ''{1}'' attribute
javadoc.snippet.error.regex.too.complex=@{0}: too complex regular expression ''{1}''
javadoc.snippet.error.unknown.enum.value=@{0}: unknown {1} ''{2}''; only {3} are supported
javadoc.snippet.error.unsupported.attribute=@{0}: unsupported attribute: ''{1}''
javadoc.snippet.not.found=Snippet not found: {0}
javadoc.snippet.region.not.found=Region not found: {0}
javadoc.type.parameters=Tipo de parámetros:
javadoc.version=Versión:
jrt.node.short=[JRT]
jvm.logging.configurable.display.name=JVM Logging
jvm.logging.configurable.id=jvm.logging
jvm.logging.configurable.java.group.display.name=Java
label.add.math.max.0.count.to.avoid.possible.semantics.change=Agregue Math.max(0, count) para evitar posibles cambios de semántica
label.canonical.constructor=Constructor canónico
label.class.filter.editor.add.dialog.filter.pattern=Ingrese el patrón de filtro:
label.class.pattern.syntax.explanation=Deje el método en blanco para mostrar el constructor\nCualquier * coincidirá con uno o más caracteres en el nombre completo (incluido el punto)
label.compact.constructor=constructor de compresión
label.configurable.logger.generation.variable.name=변수 이름\:
label.configurable.logger.type=Logger:
label.contract=Contrato:
label.enter.fully.qualified.class.name=Ingrese el nombre de la clase completamente calificado
label.entry.points=Puntos de entrada:
label.forbid.api.usages=Prohibir usos de API:
label.forbid.api.usages.project=(according to project settings)
label.from.inclusive=Desde (inclusive):
label.ignore.complicated.fix=Ignore when a quick-fix cannot be provided
label.ignored.exceptions=Ignored exceptions:
label.implementation=Implementación:
label.implements.method.of_class_or_interface.name=implementa {0} {1} ''{2}''.
label.implements.method.of_interfaces=implementa métodos de las siguientes clases/interfaces:
label.jvm.class.name=JVM class name
label.jvm.field.name=JVM field name
label.jvm.method.name=JVM method name
label.maximal.reported.method.visibility=Visibilidad máxima del método informado:
label.method=Método ''{0}''
label.minimal.reported.method.usage.count=Recuento mínimo de uso del método informado:
label.mutates=Muta:
label.name.prefix=Prefijo de nombre:
label.name.suffix=Sufijo del nombre:
label.naming.field=Campo:
label.naming.local.variable=Variable local:
label.naming.parameter=Parámetro:
label.naming.static.field=Campo estático:
label.naming.subclass=Subclase:
label.naming.test.class=Clase de prueba:
label.new.template.name=Nuevo nombre de plantilla\:
label.overrides.method.of_class_or_interface.name=anula {0} {1} ''{2}''.
label.show.import.popup.for=Mostrar ventana emergente de importación para:
label.to.inclusive=Para (inclusive):
label.unused.declaration.reachable.from.tests.option=Cuando los puntos de entrada están en fuentes de prueba, marque los destinatarios como:
lambda.tree.node.presentation=Lambda
leave.in.same.source.root.item=Dejar en la misma raíz de origen
library.classes.cannot.be.inlined=Las clases de la biblioteca no se pueden insertar
line.marker.recursive.call=Llamada recursiva
line.marker.type.external.annotations=Anotaciones externas
line.marker.type.inferred.contract.annotations=Anotaciones de contrato inferidas
line.marker.type.inferred.nullability.annotations=Anotaciones de nulabilidad inferidas
link.configurable.logger.generator.display.name=<a href='link'>Settings</a>
link.configure.classes.excluded.from.completion=Configure classes excluded from completion
list.item.configuration=[configuración] {0}
list.item.suite=[herramientas] {0}
listbox.import.package=Paquete
listbox.import.static=Estático
listbox.import.with.subpackages=Con subpaquetes
live.template.context.consumer.function=Función de consumidor
live.template.context.declaration=Declaración
live.template.context.else='else' position
live.template.context.expression=Expresión
live.template.context.statement=Declaración
loading.additional.annotations=Loading additional annotations...
macro.array.variable=arrayVariable()
macro.class.name=Nombre de clase
macro.classpath.entry=Entrada en la ruta de clase a la que pertenece el elemento
macro.component.type.of.array=componentTypeOf(Array)
macro.descendant.classes.enum=descendantClassesEnum(String)
macro.expression.type=expressionType(Expresión)
macro.file.fully.qualified.package=Archivo paquete completo
macro.file.package=Paquete de archivos
macro.guess.element.type.of.container=guessElementType(contenedor)
macro.iterable.component.type=iterableComponentType(ArrayOrIterable)
macro.iterable.variable=iterableVariable()
macro.javadoc.output.directory=directorio de salida de JavaDoc
macro.project.classpath=Ruta de clases del proyecto
macro.variable.of.type=variableOfType(Tipo)
megabytes.unit=megabytes
methods.to.implement.chooser.title=Seleccionar métodos para implementar
methods.to.override.chooser.title=Seleccionar métodos para anular
methods.to.override.generate.javadoc=Generate missed JavaDoc
methods.to.override.implement.chooser.title=Seleccionar métodos para anular/implementar
module.not.in.requirements=El módulo ''{0}'' no tiene el módulo ''{1}'' en los requisitos
module.package.not.exported=El módulo ''{0}'' no exporta el paquete ''{1}'' al módulo ''{2}''
module.package.not.open=El módulo ''{0}'' no abre el paquete ''{1}'' al módulo ''{2}''
module.type.java.description=Los módulos Java se utilizan para desarrollar aplicaciones web y de escritorio <b>basadas en JVM</b>, incluidas aplicaciones que utilizan <b>Java EE</b>y otros marcos de desarrollo empresarial.
module.type.java.name=Módulo Java
move.class.import.from.default.package.conflict={0} won''t be accessible from the default package
move.classes.destination.class.not.found.message=No se encontró la clase de destino
move.classes.invalid.destination.package.name.message=''{0}'' es un nombre de paquete de destino no válido
move.inner.select.target.package.title=Seleccionar paquete de destino
move.member.enum.conflict=No se puede aplicar la enumeración en el contexto actual
move.member.final.initializer.conflict=los inicializadores mutables finales no se pueden usar después del movimiento.
multiple.usages.of.static.import.found=Múltiples usos de la importación estática encontrados
navigate.to.duplicate.fix=Navegar para duplicar
new.line.when.body.is.presented=New line when body is presented
no.jre.description=<Sin JRE>
no.methods.overriding.0.are.found=No se encuentran métodos que invaliden {0,choice,0#|1#''{1}''|2#estas clases}
no.patterns=No se han configurado patrones de clase
node.call.hierarchy.unknown.jsp=jsp desconocido
node.hierarchy.java.lang.object=Todas las clases se derivan de java.lang.Object
non.code.annotations.explanation.external.and.inferred.available=External and <i>inferred</i> annotations available.
non.code.annotations.explanation.external.available=External annotations available.
non.code.annotations.explanation.full.signature=Full signature:
non.code.annotations.explanation.inferred.available=<i>Inferred</i> annotations available.
notification.content.added.annotations=Added {0} {0, choice, 1#annotation|2#annotations}
notification.content.change.jdk=Change JDK
notification.content.was.set.up=JDK ''{0}'' was set up for the project
notification.group.arch.checker=JDK and system architectures are different
notification.group.jdk.resolve.problems=Failed to resolve JDK
notification.group.jshell=JShell problem occurred
notification.group.language.level=Preview Java language level requires accepting license
notification.group.legacy.library=Legacy library depends on IDE installation
notification.group.preview.features=Preview Java language level may be discontinued
notification.group.redundant.exports=Redundant exports/opens can be removed
notification.group.repository=JAR files synchronized with repository
notification.group.setup.external.annotations=Failed to load external annotations
notification.group.setup.sdk=JDK configured
notification.group.source.searcher=Failed to find sources for JAR file
notification.group.testintegration=Failed to generate tests for @TestDataPath
notification.navigation.to.overriding.classes=La navegación a clases anuladas no es posible durante la actualización del índice
notification.navigation.to.overriding.methods=La navegación a los métodos de anulación no es posible durante la actualización del índice
notification.text.full.thread.dump.was.successfully.copied.to.clipboard=El volcado de hilo completo se copió con éxito al portapapeles
null.check.surrounder.description=if (expr \! \=null) {...}
nullable.notnull.annotation.used.label=Annotation used for code generation:
nullable.notnull.annotations.panel.title={0} anotaciones
nullable.notnull.annotations.runtime.instrumentation.tooltip=Agregar aserciones de tiempo de ejecución para métodos y parámetros sin anotaciones nulas
nullable.notnull.configuration.dialog.title=Configuración Nullable/NotNull
nullable.stuff.inspection.navigate.null.argument.usages.fix.family.name=Navegar a usos de argumentos 'nulos'
nullable.stuff.inspection.navigate.null.argument.usages.fix.family.preview=Shows a list of usages where 'null' is passed as an argument.
nullable.stuff.inspection.navigate.null.argument.usages.view.name=Usos de argumentos '' nulos '' para el parámetro {0}
offline.inspections.jdk.not.found={0} no encontrado
offline.inspections.library.urls.were.not.resolved=Las raíces {0} de la biblioteca ''{1}'' del módulo ''{2}'' no se resolvieron
offline.inspections.library.was.not.resolved=Configure la biblioteca ''{0}'' que se utiliza en el módulo ''{1}''
offline.inspections.no.source.roots=No se detectaron raíces de origen para el módulo ''{0}''
open.settings.dialog.for.module.preview.text=Open settings dialog for module ''{0}''
options.java.attribute.descriptor.abstract.class=Clases e interfaces//Clase abstracta
options.java.attribute.descriptor.abstract.method=Métodos//Método abstracto
options.java.attribute.descriptor.annotation.attribute.name=Anotaciones//Nombre del atributo de anotación
options.java.attribute.descriptor.annotation.name=Annotations//Nombre de la anotación
options.java.attribute.descriptor.anonymous.class=Clases e interfaces//Clase anónima
options.java.attribute.descriptor.class=Clases e interfaces//Clase
options.java.attribute.descriptor.constructor.call=Métodos//Llamada al constructor
options.java.attribute.descriptor.constructor.declaration=Métodos//Declaración del constructor
options.java.attribute.descriptor.enum=Clases e interfaces//Enum
options.java.attribute.descriptor.implicit.anonymous.parameter=Parámetros//Parámetro de clase anónimo implícito
options.java.attribute.descriptor.inherited.method=Métodos//Método heredado
options.java.attribute.descriptor.instance.field=Campos de clase//Campo de instancia
options.java.attribute.descriptor.instance.final.field=Campos de clase//Campo final de la instancia
options.java.attribute.descriptor.interface=Clases e interfaces//Interfaz
options.java.attribute.descriptor.javadoc.comment=Comentarios//JavaDoc//Texto
options.java.attribute.descriptor.javadoc.markup=Comentarios//JavaDoc//Marcado
options.java.attribute.descriptor.javadoc.tag=Comentarios//JavaDoc//Etiqueta
options.java.attribute.descriptor.javadoc.tag.value=Comentarios//JavaDoc//Valor de etiqueta
options.java.attribute.descriptor.lambda.parameter=Parámetros//Parámetro Lambda
options.java.attribute.descriptor.method.call=Métodos//Llamada al método
options.java.attribute.descriptor.method.declaration=Métodos//Declaración del método
options.java.attribute.descriptor.method.imported.call=Métodos//Llamada estática al método importado
options.java.attribute.descriptor.package.private=Visibility//Package-private
options.java.attribute.descriptor.private=Visibility//Private
options.java.attribute.descriptor.protected=Visibility//Protected
options.java.attribute.descriptor.public=Visibility//Public
options.java.attribute.descriptor.reassigned.local.variable=Variables//Variable local reasignada
options.java.attribute.descriptor.reassigned.parameter=Parámetros//Parámetro reasignado
options.java.attribute.descriptor.static.field=Class Fields//Campo estático
options.java.attribute.descriptor.static.final.field=Campos de clase//Constante (campo final estático)
options.java.attribute.descriptor.static.final.imported.field=Campos de clase//Constante (campo importado final estático)
options.java.attribute.descriptor.static.imported.field=Campos de clase//Campo importado estático
options.java.attribute.descriptor.static.method=Métodos//Método estático
options.java.attribute.descriptor.type.parameter=Parámetros//Tipo de parámetro
options.java.display.name=Java
override.implement.broken.file.template.message=Corrija la plantilla "Cuerpo del método anulado/implementado"
override.implement.broken.file.template.title=Error de plantilla de archivo
override.methods.error.no.methods=No se encontró ningún método para anular
package.chooser.modal.progress.title=Searching for packages...
package.classes=Package classes:
package.dependencies.production.node.text=Clases de producción
package.dependencies.test.node.text=Clases de prueba
package.pattern.provider.hint.label=Use <b>*.txt</b> to match all 'txt' files in the project, <b>file:path_in_project//*</b> to match all files in a directory recursively, <b>src:foo..*</b> to match all classes in a package recursively.
packaging.jlink.artifact.name=JLink
packaging.jlink.artifact.title=Run-time image (JLink)
packaging.jlink.compression.first.level=String sharing
packaging.jlink.compression.level=Compression level
packaging.jlink.compression.second.level=Zip
packaging.jlink.compression.zero.level=No compression
packaging.jlink.verbose.tracing=Enable verbose tracing
paste.class.command.name=Pegar clase ''{0}''
please.report.a.bug=Informe un error
popup.content.tests.were.not.found.in.module=Tests were not found in module ''{0}''.\n
popup.content.tests.were.not.found.in.module.search.in.dependencies=Search across module dependencies instead
popup.content.tests.were.not.found.in.module.use.instead=No se encontraron pruebas en el módulo ''{0}''.\nEn lugar de {1, choice, 0\#module {2} | No use\none de1\# {3}\n}
popup.title.choose.framework=Elegir marco
popup.title.choose.target.class=Choose Target Class
popup.title.choose.test=Elija Prueba
popup.title.debug.recent.tests=Depurar pruebas recientes
popup.title.remove.unused.variable=Remove Unused Variable
popup.title.select.a.jar.file=Seleccionar un archivo JAR
popup.title.select.qualified.name=Seleccionar nombre calificado
popup.title.select.target.code.block=Select Target Code Block
postfix.template.condition.array.name=Matriz
postfix.template.condition.boolean.name=Boolean
postfix.template.condition.non.void.name=non-void
postfix.template.condition.not.primitive.type.name=No es un tipo primitivo
postfix.template.condition.number.name=Número
postfix.template.condition.void.name=void
postfix.template.editor.choose.class.title=Elige clase
postfix.template.language.level.title=Nivel mínimo de lenguaje:
postfix.template.provider.name=Java
presentable.text.anonymous.class=Clase anónima
presentable.text.code.display=Código
presentable.text.code.from.context=Código de {0}
presentable.text.invalid.element.name=no es válido
press.0.to.see.inheritors.of.1=Presione {0} para ver los herederos de {1}
press.0.to.see.non.imported.classes=Presione {0} para ver las clases no importadas
pressing.0.twice.without.a.class.qualifier=Presionar {0} dos veces sin un calificador de clase mostraría todos los métodos estáticos accesibles
progress.creating.class=Creando clase {0}
progress.title.calculate.applicable.types=Calculate applicable types...
progress.title.check.applicability=Verificar aplicabilidad...
progress.title.checking.if.class.exists=Check target class ''{0}'' exists
progress.title.collect.method.overriders=Collect method overriders...
progress.title.detect.overridden.methods=Check overriding methods
progress.title.detecting.jdk=Detecting JDK
progress.title.download.library.descriptor=Descargar descriptor de biblioteca
progress.title.find.references.in.implement.extends.lists=Buscar referencias en listas de implementación/extensión...
progress.title.finding.cause=Encontrar una causa
progress.title.looking.for.jdk=Looking for JDK...
progress.title.looking.for.libraries=Buscando bibliotecas
progress.title.optimize.imports=Optimizar importaciones...
progress.title.preprocess.usages=Usos de preproceso
progress.title.restore.references=Restoring references
progress.title.search.for.overriding.methods=Buscar métodos de reemplazo...
progress.title.searching.for.sub.classes=Buscando subclases
project.problems.fix.description=Problemas encontrados relacionados con ''{0}''
project.problems.fix.text=Mostrar problemas relacionados
project.problems.hint.text={0} relacionado {0,choice,0#problema|2#problemas}
project.problems.title=Problemas relacionados
project.problems.window.title=Problemas relacionados con {0}
prompt.choose.base.class.of.the.hierarchy=Elija la clase base de la jerarquía para buscar en
prompt.create.non.existing.package=El paquete {0} no existe. \n¿Desea crearlo?
prompt.delete.class={0,choice,1#clase|2#clases}
prompt.delete.field={0,choice,1#campo|2#campos}
prompt.delete.interface={0,choice,1#interface|2#interfaces}
prompt.delete.method={0,choice,1#método|2#métodos}
prompt.delete.package={0,choice,1#paquete|2#paquetes}
prompt.delete.type.parameter={0,choice,1#parámetro de tipo|2#parámetros de tipo}
prompt.do.you.want.to.action_verb.the.method.from_class=¿Quiere {0} la base {1,choice,1#método|2#métodos} en su lugar?
psi.error.incorrect.class.template.message=No se puede crear {0} - plantilla {1} incorrecta.
psi.search.overriding.progress=Buscando métodos de reemplazo...
pull.members.up.fix.name=Mover miembro hacia arriba
pull.up.accessible.conflict=No se pudo acceder a {0}
pull.up.accessible.conflict.1={0} no es accesible desde {1}
pull.up.concrete.inherit.abstract.method.conflict=Concrete ''{0}'' hereda un nuevo método abstracto
pull.up.members.usage.view.description.code.references.node=Clase para agregar miembros a "{0}"
pull.up.members.usage.view.description.processed.elements.node=Mover miembros de la clase {0} hacia arriba
push.down.anonymous.conflict=No se puede enviar la implementación a una clase anónima
push.down.missed.implementation.conflict=Falta la implementación {0} no abstracta de {1}
push.down.static.nonstatic.conflict=static {0} no se puede enviar a no estático {1}
push.down.super.method.call.changed.conflict=Una llamada a un método principal se resuelve en otro método
push.method.down.command.name=Mover método hacia abajo...
qualify.static.access.command.name=static calificar para el acceso
qualify.static.call.fix.text=static Calificación de llamada
qualify.static.constant.access=static qualify acceso constante
quickfix.add.variable.family.name=Inicializar variable
quickfix.add.variable.text=Inicializar variable ''{0}''
quickfix.family.avoid.mutation.using.stream.api=Evite la mutación usando Stream API
quickfix.family.change.javadoc.to=Cambiar a...
quickfix.family.find.cause=Encontrar la causa
quickfix.family.remove.javadoc.tag=Eliminar etiqueta
quickfix.family.remove.redundant.parameter=Eliminar parámetro redundante
quickfix.family.remove.redundant.parameter.types=Eliminar tipos de parámetros redundantes
quickfix.family.replace.cast.type=Reemplazar el tipo de conversión
quickfix.family.replace.inefficient.stream.count=Reemplazar Stream.count() ineficiente
quickfix.family.replace.optional.chain.with.if.statements=Reemplazar cadena opcional con declaraciones if
quickfix.family.replace.stream.api.chain.with.loop=Reemplazar la cadena de la API de transmisión con un bucle
quickfix.family.replace.with.java.stream.api.pipeline=Reemplazar con la tubería de API de Java Stream
quickfix.family.replace.with.magic.constant=Reemplazar con constante mágica
quickfix.family.replace.with.method.reference=Reemplazar con la referencia del método
quickfix.family.replace.with.optional.of.nullable.chain=Reemplazar con Optional.ofNullable() cadena
quickfix.family.replace.with.stream.api.equivalent=Reemplazar con Stream API equivalente
quickfix.family.simplify.foreach.lambda=Simplificar para cada lambda
quickfix.family.simplify.stream.call.chain=Simplificar la cadena de llamadas de flujo
quickfix.family.use.flatmap=Usar 'flatMap'
quickfix.family.wrap.with.mutable.collection=Envolver con colección mutable
quickfix.find.cause.description=Attempts to highlight code elements that resulted in this warning and explain how exactly they contribute.
quickfix.name.find.jar.on.web=Buscar JAR en la web
quickfix.text.0.may.not.work.before.jdk.11.0.2={0} (puede que no funcione antes de JDK 11.0.2)
quickfix.text.avoid.mutation.using.stream.api.0.operation=Evite la mutación usando la operación Stream API ''{0}''
quickfix.text.remove.javadoc.0=Remove ''@{0}'' tag
quickfix.text.remove.javadoc.0.1=Eliminar @ {0} {1}
quickfix.text.remove.not.null.annotation=Eliminar anotación no nula
quickfix.text.replace.0.stream.with.1.2=Reemplaza {0} .stream() con {1}. {2}()
quickfix.text.replace.collect.0.with.1.2=Reemplazar '' collect ({0}()) '' por ''{1}'' {2}
quickfix.text.replace.filter.0.is.present.with.any.match=Reemplazar '' filter(). {0}(). isPresent() '' por '' anyMatch() ''
quickfix.text.replace.stream.0.with.1.2=Reemplazar '' stream(). {0}() '' con '' {1}() '' {2}
quickfix.text.replace.url.with.html=Replace URL with HTML link
quickfix.text.suffix.may.change.semantics=\ (puede cambiar la semántica)
quickfix.text.wrap.0.with.1=Ajustar ''{0}'' con ''{1}''
radio.button.subclass.of.0=Subclase de ''{0}''
radio.button.unused.declaration.unused.option=unused
radio.button.unused.declaration.used.option=used
radio.button.with.provider.method=Con el método 'provider()'
radio.use.fully.qualified.class.names.in.javadoc=Use nombres de clase completamente calificados en JavaDoc:
radio.use.fully.qualified.class.names.in.javadoc.always=Siempre
radio.use.fully.qualified.class.names.in.javadoc.if.not.imported=Si aún no se ha importado
radio.use.fully.qualified.class.names.in.javadoc.never=Nunca, use un nombre corto y agregue import
raw.use.of.parameterized.type.ignore.new.objects.option=Ignore construction of new objects
raw.use.of.parameterized.type.ignore.overridden.parameter.option=Ignore parameter types of overriding methods
raw.use.of.parameterized.type.ignore.quickfix.not.available.option=Ignore when automatic quick-fix is not available
raw.use.of.parameterized.type.ignore.type.casts.option=Ignore type casts
raw.use.of.parameterized.type.ignore.uncompilable.option=Ignore where a type parameter would not compile
raw.variable.type.can.be.generic.cast.quickfix=Change cast type to {0}
raw.variable.type.can.be.generic.cast.quickfix.family=Parameterize cast type
raw.variable.type.can.be.generic.family.quickfix=Add generic parameters to the type
raw.variable.type.can.be.generic.quickfix=Change type of {0} to {1}
refactoring.method.reference.to.lambda.conflict=La referencia del método se convierte a lambda
remove.var.keyword.text=Remove 'var'
rename.package.class.already.exist.conflict=La clase con el nombre completo ''{0}'' ya existe
rename.package.command.name=Cambiar el nombre del paquete
rename.package.ignored.name.warning=Está intentando crear un paquete con un nombre ignorado. Esto no mostrará ningún resultado.
rename.package.invalid.name.error=Nombre de paquete no válido
rename.super.base.chooser.popup.title={0} anula el método de {2} {1, choice, 0\# deployment |1\# override}
rename.super.methods.chooser.popup.title={0} tiene un método principal
replace.implements.with.static.import.field.usages.progress=Encuentra usos de campos constantes...
scheduled.thread.pool.executor.with.zero.core.threads.description='ScheduledThreadPoolExecutor' should not have zero core threads
scheduled.thread.pool.executor.with.zero.core.threads.display.name='ScheduledThreadPoolExecutor' with zero core threads
scope.hierarchy=Jerarquía de {0}
sdk.cannot.create=No se puede crear el SDK
sdk.configured.sdkmanrc=''{0}'' is set as project JDK.
sdk.configured.sdkmanrc.title=JDK is configured (.sdkmanrc)
sdk.java.no.classes=No se pueden encontrar las clases JDK en ''{0}''
section.title.inspection.suspicious.names.ignore.methods=Ignorar métodos
separator.annotations.to.copy=Anotaciones para copiar
separator.mark.as.entry.point.if.annotated.by=Marcar como punto de entrada si se anota con
separator.mark.field.as.implicitly.written.if.annotated.by=Marcar el campo como escrito explícitamente cuando se anota con
set.language.level=Establecer nivel de lenguaje
set.language.level.to.0=Establecer el nivel de lenguaje en {0}
settings.completion.ml.java.display.name=Java
settings.inlay.java.annotations=Anotaciones
settings.inlay.java.builder.like.methods=Métodos tipo constructor
settings.inlay.java.complex.expressions.binary.functional.array.access.and.other=Expresiones complejas: binarias, funcionales, acceso a matrices y otras
settings.inlay.java.enum.constants=Constantes de enumeración
settings.inlay.java.external.annotations=Anotaciones externas
settings.inlay.java.implicit.types=Tipos implícitos
settings.inlay.java.implicit.types.description=Local variables declared with the var keyword when the inferred type may not be clear from the right part of the assignment, for example, when using a factory method.
settings.inlay.java.inferred.annotations=Anotaciones inferidas
settings.inlay.java.inheritors=Herederos
settings.inlay.java.insert.annotation=Insertar anotación
settings.inlay.java.methods.with.same.named.numbered.parameters=Métodos con parámetros numerados del mismo nombre
settings.inlay.java.new.expressions=Expresiones 'Nuevas'
settings.inlay.java.non.literals.in.case.of.multiple.parameters.with.the.same.type=No literales en el caso de varios parámetros con el mismo tipo
settings.inlay.java.parameters.with.names.that.are.contained.in.the.method.name=Parámetros con nombres que están contenidos en el nombre del método
settings.inlay.java.show.hints.for=Mostrar sugerencias para:
settings.inlay.java.show.parameter.hints.for=Mostrar sugerencias de parámetros para:
settings.inlay.java.show.parameter.hints.when.expression.type.is.clear.description=Array inicializador, conmutador, condicional, referencia, instancia de, asignación, llamada, calificado, conversión de tipos, expresiones de acceso a objetos de clase.
settings.inlay.java.turn.off.external.annotations=Desactivar anotaciones externas
settings.inlay.java.turn.off.inferred.annotations=Desactivar las anotaciones inferidas
settings.inlay.java.usages=Usos
show.import.popup.for.classes=&Clases
show.import.popup.for.static.methods.and.fields=Método&s y campos estáticos
show.siblings.choose.super.class.title=Seleccione la clase o interfaz principal
show.siblings.find.usages.class.title=clase principal/interfaz
show.siblings.find.usages.method.title=método principal
side.effects.expression.presentation=Expresión ''{0}''
side.effects.pattern.message=<html>\n<body>\nPosibles efectos secundarios encontrados en {0} <br>\nSolution\:\n<br>\n - \\&nbsp;todo relacionado Dónde usar las variables con expresiones <b> Eliminar</b> o <br>\n - \\&nbsp;Convertir expresiones asignadas a variables en sintaxis de forma independiente <b> Convertir</b><br>\n<div style \="padding- izquierda\: 0.6cm; ">\n es decir, <br>\n<borde de la tabla \ =" 0 ">\n<tr>\n<td><code> {1};</ code></td>\n</tr>\n</table>\n Resultados\: <br>\n<borde de la tabla \="0">\n<tr>\n<td><código> {2};</ código></td>\n</tr>\n</table>\n</div>\n</body>\n</html>
simplify.optional.chain.inspection.fix.description.optional.chain.can.be.eliminated=Optional chain can be eliminated
simplify.optional.chain.inspection.fix.description.replace.with.value.of.description=Optional chain can be replaced with 'String.valueOf()'
simplify.optional.chain.inspection.fix.description.replace.with.value.of.name=Replace with 'String.valueOf()'
simplify.optional.chain.inspection.fix.name.remove.redundant.optional.chain=Remove redundant Optional chain
simplify.optional.chain.inspection.map.or.else.description=opcional Puede simplificar la cadena
simplify.optional.chain.inspection.optional.rewrapping.description=Volver a envolver innecesario opcional
simplify.optional.chain.inspection.optional.rewrapping.name=Unwrapped
simplify.optional.chain.inspection.or.else.non.null.fix.description=la comprobación nula se puede eliminar con '' ifPresent ''
simplify.optional.chain.inspection.or.else.non.null.fix.name=reemplace el cheque nulo con ifPresent ()
simplify.optional.chain.inspection.or.else.return.fix.description=la comprobación nula se puede eliminar
simplify.optional.chain.inspection.or.else.return.fix.name=reemplace el cheque nulo con {0} ({1})
simplify.optional.chain.inspection.remove.redundant.steps.from.optional.chain=Eliminar pasos redundantes de la cadena opcional
simplify.optional.chain.inspection.to.x=opcional Simplifique la cadena a ''{0}''
simplify.stream.collection.creation.fix.name=reemplazar con el constructor ''{0}''
simplify.stream.inspection.iterate.take.while.fix.message=3 argumentos se pueden reemplazar con ''iterate()''
simplify.stream.inspection.iterate.take.while.fix.name=reemplazar con 3 argumentos ''iterate()''
simplify.stream.inspection.message.can.be.replaced={0}'' se puede reemplazar con ''{1}
simplify.stream.inspection.message.can.be.replaced.may.change.semantics=''{0}'' se puede reemplazar con ''{1}'' (el significado puede cambiar si existe)
simplify.stream.match.negation.fix.name=reemplazar {0} con {1} (...)
simplify.stream.remove.boolean.identity.fix.message=Puede fusionarse con la llamada anterior ''map''
simplify.stream.remove.boolean.identity.fix.name=Fusionar con la llamada anterior ''map''
simplify.stream.replace.support.with.collection.fix.message=Se puede reemplazar llamando a ''{0}.{1}''
simplify.stream.replace.support.with.collection.fix.name=reemplazar con ''{0}.{1}'' llamada
simplify.stream.replace.with.element.iteration.fix.message=Se puede reemplazar con la repetición del elemento
simplify.stream.simple.stream.of.fix.name.use.stream.element.explicitly=Usar el elemento Stream explícitamente
simplify.stream.simple.stream.of.message=Flujo de elemento único innecesario
simplify.stream.swap.filter.and.map.fix.message=''filter()'' y ''map()'' son intercambiables
simplify.stream.swap.filter.and.map.fix.name=filter()'' reemplaza ''map()
slice.filter.parse.error.enum.constant.not.found=Constante de enumeración no encontrada: {0}
slice.filter.parse.error.expression.must.evaluate.to.constant=La expresión debe evaluarse a una constante: {0}
slice.filter.parse.error.incorrect.constant.expected.number=Constante incorrecta (número esperado): {0}
slice.filter.parse.error.incorrect.constant.type=Tipo de constante incorrecto (obligatorio: {0})
slice.filter.parse.error.incorrect.expression=Expresión incorrecta: {0}
slice.filter.parse.error.not.null.filter.not.applicable.for.primitive.type=''! null '' filter no es aplicable para el tipo primitivo {0}
slice.filter.parse.error.null.filter.not.applicable.for.primitive.type=el filtro '' null '' no es aplicable para el tipo primitivo {0}
slice.usage.message.assertion.violated=(¡aserción violada!)
slice.usage.message.in.file.stopped.here=(en el archivo {0} - parado aquí)
slice.usage.message.location=en {0}
slice.usage.message.tracking.container.contents=(Seguimiento del contenido del contenedor ''{0} {1}'')
sort.threads.by.name=Ordenar hilos por nombre
sort.threads.by.type=Ordenar hilos por tipo
special.annotations.annotations.list=Anotaciones especiales adicionales
special.annotations.annotations.preview=Adds ''@{0}'' to a list of annotations that will be ignored by this inspection
special.annotations.list.add.annotation.class=Agregar clase de anotación
special.annotations.list.annotation.class=Clase de anotación
special.annotations.list.annotation.pattern=Agregar patrón de anotación
special.annotations.list.annotation.pattern.message=Agregar patrón de anotación
special.annotations.list.remove.pattern=Eliminar
spi.extension.error.message=La extensión registrada debe implementar {0}
spi.no.provider.error.message=No se encontró el proveedor de servicios "{0}"
status.bar.overridden.methods.highlighted.message={0} overridden {0,choice,1#method|2#methods} encontrado (presione {1} nuevamente para eliminar el resaltado, Escape para eliminar todo el resaltado)
stream.to.loop.inspection.message.replace.foreach.call.with.loop=Reemplazar llamada '' forEach '' con bucle
stream.to.loop.inspection.message.replace.stream.api.chain.with.loop=Reemplaza la cadena de API de flujo con un bucle
surround.with.cast=Surround With Cast
surround.with.dowhile.template=do/while
surround.with.for.template=for
surround.with.ifelse.expression.template=if (expr) {...} else {...}
surround.with.not.instanceof.template=!(expr instancia de tipo)
surround.with.runnable.template=Ejecutable
surround.with.synchronized.template=sincronizado
surround.with.try.catch.finally.template=probar/atrapar/finalmente
surround.with.try.catch.incorrect.template.message=¡Plantilla de archivo no válida para el cuerpo de captura!
surround.with.try.catch.incorrect.template.title=Envolvente con Try/Catch
surround.with.try.catch.template=try/catch
switch.stmt.template.description=switch (expr) {...}
tab.title.entry.points=Puntos de entrada
tab.title.infer.nullity.preview=vista previa de la inferencia de nulidad
tab.title.members.to.report=Miembros para informar
tab.title.slices.grouped.by.nullness=\ (agrupado por nulidad)
table.cell.constructors=constructores
target.code.block.presentable.text=Containing block
title.cannot.create.class=No se puede crear una clase
title.code.vision=Code Vision
title.code.vision.inlay.hints=Code Vision
title.import.layout=Importar diseño
title.javadoc=JavaDoc
title.naming=Nombre
title.naming.final.modifier=Modificador final
title.naming.functional.expressions=Cuerpo Lambda
title.naming.variable=Variable
title.package.not.found=Paquete no encontrado
title.packages=Paquetes
title.packages.to.use.import.with=Paquetes para usar Importar con '*'
title.related.problems.inlay.hints=Related Problems
to.import.a.method.statically.press.0=Para importar un método de forma estática, presione {0}
todo.index.not.available=No aplicable
tooltip.anonymous=Anonymous
tooltip.has.several.functional.implementations=Has several functional implementations
tooltip.implements.method=Implements method
tooltip.implements.method.in=Implements method in
tooltip.incorrect.file.template=Incorrect ''{0}'' file template
tooltip.is.functionally.implemented.in=Is functionally implemented in
tooltip.is.implemented.by=Is implemented by
tooltip.is.implemented.by.several.subclasses=Is implemented by several subclasses
tooltip.is.implemented.in=Is implemented in
tooltip.is.implemented.in.several.subclasses=Is implemented in several subclasses
tooltip.is.overridden.by.several.subclasses=Is overridden by several subclasses
tooltip.is.overridden.in=Is overridden in
tooltip.is.overridden.in.several.subclasses=Is overridden in several subclasses
tooltip.is.subclassed.by=Is subclassed by
tooltip.overrides.method=Overrides method
tooltip.overrides.method.in=Overrides method in
tooltip.reassigned.local.variable=Reassigned local variable
tooltip.reassigned.parameter=Reassigned parameter
tooltip.recursive.call=Llamada recursiva
tooltip.via.subclass=via subclass
type.information.constraints=Restricciones
type.information.local.object=Objeto local
type.information.locality=Localidad
type.information.mutability=mutabilidad
type.information.not.equal.to=No es igual a
type.information.nullability=nulabilidad
type.information.range=rango
type.information.type=Tipo
type.information.value=Valor
type.migration.cannot.convert.message=Cannot convert type of expression <b>{0}</b>{3, choice, 0#|1# from '<'b'>'{1}'<'/b'>'} to <b>{2}</b>
type.migration.cannot.convert.tooltip=No se puede convertir el tipo de expresión de {0} a {1}
type.migration.cannot.convert.vararg.message=Cannot convert call <b>{0}</b> from vararg to non-vararg
type.migration.cannot.convert.vararg.tooltip=Cannot convert call from vararg to non-vararg
type.migration.command.name=TypeMigration
type.migration.dialog.message.disjunction.type.not.applicable=Only a catch block parameter can be migrated to a union type
type.migration.dialog.message.invalid.type=''{0}'' es un tipo no válido
type.migration.dialog.message.vararg.type.not.applicable=Only the last parameter of a method can be migrated to a vararg type
type.migration.dialog.message.void.not.applicable='' void '' no es aplicable
type.migration.getter.rename.suggestion.always.migrate.method.names=Migrar siempre los nombres de los métodos
type.migration.getter.rename.suggestion.never.migrate.method.names=No migrar nombres de métodos
type.migration.getter.rename.suggestion.text=Cambiar el nombre del getter de ''{0}'' a ''{1}'' después de migrar el tipo de retorno a ''{2}'' ¿Migrar a?
type.migration.multi.root.toolwindow.title=Tipo de migración de {0}
type.migration.processed.elements.header=Raíz del tipo de migración
type.migration.replaced.notification=Reemplazar con {0}
type.migration.single.root.toolwindow.title=Migrar tipo de {0} de ''{1}'' a ''{2}''
type.parameters.cannot.be.inlined=Los parámetros de tipo no se pueden insertar
unchecked.warning.inspection.message.unchecked.generics.array.creation.for.varargs.parameter=Crear una matriz genérica sin marcar para el parámetro vararg
unchecked.warning.inspection.reason.expr.has.raw.type.so.result.erased=. Reason: ''{0}'' has raw type, so result of {1} is erased
unchecked.warning.inspection.settings.ignore.unchecked.assignment=Ignorar asignaciones sin marcar
unchecked.warning.inspection.settings.ignore.unchecked.call.as.member.of.raw.type=Ignora las llamadas sin marcar como miembros de tipos primitivos
unchecked.warning.inspection.settings.ignore.unchecked.cast=Ignorar los lanzamientos sin marcar
unchecked.warning.inspection.settings.ignore.unchecked.generics.array.creation.for.vararg.parameter=ignorar la creación de una matriz genérica sin marcar para el parámetro vararg
unchecked.warning.inspection.settings.ignore.unchecked.overriding=Ignorar anulaciones no marcadas
unknown.library=알 수 없는 라이브러리
unscramble.detect.analyze.threaddump.from.clipboard.item=Detecta y analiza automáticamente los volcados de subprocesos copiados al portapapeles fuera de IntelliJ IDEA
unscramble.log.path.label=&Archivo de registro:
unscramble.no.unscrambler.item=<No hay un descifrador instalado>
unscramble.normalize.button=&Normalizar
unscramble.stacktrace.caption=Ponga un seguimiento de pila o un volcado de hilo completo aquí:
unscramble.unscrambled.deadlock.tab=<Deadlock>
unscramble.unscrambled.stacktrace.tab=<Stacktrace>
unscramble.unscrambled.threaddump.tab=<Hilos>
unscramble.unscrambler.combobox=Un &codificador:
unscramble.use.unscrambler.checkbox=&Descodificar seguimiento de pila
unwrap.anonymous=Desenvolver 'anónimo...'
unwrap.array.initializer=Desenvolver inicializador de matriz
unwrap.conditional=Desenvolver 'f? a: b'
unwrap.lambda=Desenvolver 'lambda...'
unwrap.switch.expression=Expresión de ruptura '' cambiar ''
unwrap.switch.statement=Unwrap 'switch' statement
unwrap.synchronized=Desenvolver 'sincronizado...'
update.external.annotations=Actualizar anotaciones externas
usage.target.exception=Excepción
usage.target.package.in.directory={0} (en {1})
usages.telescope={0,choice, 0#no usages|1#1 usage|2#{0,number} usages}
use.external.annotations=Usar &anotaciones externas
validator.text.class.not.found=Class not found
validator.text.no.annotation=Must be annotation
validator.text.not.valid.class.name=Not a valid class name
validator.text.wrong.superclass=Wrong superclass
vm.option.description.category=Category:
vm.option.description.default.value=Default value:
vm.option.description.description=Description:
vm.option.description.diagnostic=Diagnostic
vm.option.description.experimental=Experimental
vm.option.description.option=Option:
vm.option.description.product=Product
vm.option.description.requires=\ (requires {0})
vm.option.description.standard=Standard
vm.option.description.type=Type:
warning.java.file.outside.source.root=Java file is located outside of the module source root, so it won't be compiled
where.do.you.want.to.move.directory.prompt={0}\n\nWould you like to move the directory to another source root or another directory?
wrap.return.value.anonymous.class.presentation=Anónimo {0}
wrap.return.value.created.class.not.accessible.conflict=La clase creada no es accesible desde la ubicación de la llamada
wrap.return.value.existing.class.does.not.have.appropriate.constructor.conflict=Existing class does not have appropriate constructor
wrap.return.value.existing.class.does.not.have.getter.conflict=La clase existente no tiene getter para el campo seleccionado
wrapping.annotation.enums=Enum field annotations
wrapping.annotation.parameters=Parámetros de anotación
wrapping.deconstruction.patterns=Deconstruction patterns
wrapping.multi.catch.types=Types in multi-catch
wrapping.record.components=Componentes del registro
wrapping.semicolon.after.call.chain=Move ';' to the new line
wrapping.switch.statement.or.expression='switch' statement/expression
wrapping.text.blocks=Bloques de texto
wrong.package.statement=Declaración de paquete incorrecta
