ActionGroupDropDown.label=Grupo de acciones
AttribitePanel.validation=Validación
AttributeTipInfo.Severity.LEAST_EFFICIENT=Menos eficiente
AttributeTipInfo.Severity.MORE_EFFICIENT=Más eficiente
AttributeTipInfo.Severity.MOST_EFFICIENT=Más eficiente
ColumnRenderer.inDb.prefix=En la base de datos:
ColumnValueCellRenderer.usedBy=Usado por {0}
ConfirmDialog.title=Confirmar
ConstraintCheckDigitIndexItem.name=Comprobación de índice de dígito
ConstraintCurrencyItem.name=Unidad
ConstraintFractionItem.name=Fracción
ConstraintHostItem.name=Host
ConstraintIgnoreNonDigitCharactersItem.name=Ignorar caracteres no numéricos
ConstraintInclusiveItem.name=Inclusivo
ConstraintIntegerItem.name=Entero
ConstraintMaxItem.name=Máximo
ConstraintMaxLongItem.name=Máx.
ConstraintMessageItem.name=Mensaje
ConstraintMinItem.name=Valor mínimo
ConstraintMinLongItem.name=Mínimo
ConstraintPortItem.name=Puerto
ConstraintProtocolItem.name=Protocolo
ConstraintRegexpItem.name=Expresión regular
ConverterAttributeItem.name=Convertidor
CreateIndexDialog.label.name=Nombre
CreateIndexDialog.label.unique=Único
CreateRepoLookupItem.command.name=Crear repositorio
DaysDurationItem.days=días
DaysDurationItem.hours=horas
DaysDurationItem.millis=milisegundos
DaysDurationItem.minutes=minutos
DaysDurationItem.nanos=nanos
DaysDurationItem.seconds=segundos
DisplayName.codingAssistance=Asistencia de codificación
DisplayName.dbDrivers=Controladores de base de datos
DisplayName.dtoDeclaration=Declaración del DTO
DisplayName.entityDeclaration=Declaración de entidad JPA
DisplayName.hibernateEnvers=Hibernate Envers
DisplayName.mapperDeclaration=Declaración del Mapper
DisplayName.projectionDeclaration=Declaración de proyección
DisplayName.repository=Repositorio Spring Data
DomainEntityType.JPA=Entidad JPA
DomainEntityType.MONGODB=Documento MongoDB
DtoAttributePanel.mappingWillBeHandledImplicitly=El mapeo se procesará implícitamente
DtoAttributePanel.unsetName=<Anular nombre>
EndIndexItem.name=Índice final
EntityFromPojoAttributeType.EXISTING_CLASS=Seleccionar clase entidad existente
EntityFromPojoAttributeType.NEW_CLASS=Crear nueva clase de entidad
EntityFromPojoAttributeType.TRANSIENT=Transitorio
EntityToDtoMapperDialog.fromDto=Mapear {0} desde...
EntityToDtoMapperDialog.toDto=Mapear {0} a...
EntityViewCreateDialog.title=Nueva {0}
EnvironmentVariablesDialog.message.illegalNameEnvironmentVariable=Nombre ilegal de la variable de entorno: {0}
EnvironmentVariablesDialog.message.illegalValueEnvironmentVariable=El valor de la variable de entorno ''{0}'' es ilegal: ''{1}''
ExtractJpqlQueryIntention.error={0} error
GenerateEntityAttributeAction.TypeField.radio.element.collection=Colección de elementos
GenerateEntityAttributeAction.TypeField.radio.id=ID
GenerateEntityAttributeAction.TypeField.radio.persist=Persistente
GenerateEntityAttributeAction.TypeField.radio.transient=transitorio
GenerateEntityAttributeAction.popup.title.enterAttributeType=Introduce el tipo de atributo
InheritanceField.default=Por defecto ({0})
InjectionInsertHandler.hint.text.canNotPerformCompletion.canNotFindInjectingClass=No se puede realizar el autocompletado: no se encuentra la clase de inyección.
InjectionInsertHandler.hint.text.canNotPerformCompletion.targetClassNotFound=No se puede completar: clase destino no encontrada
Item.notImplemented.text=Esta funcionalidad no ha sido implementada todavía. Planeamos implementarla en una actualización futura.
JpaAttributePropertiesPanel.action.createItem=Crear propiedad inversa...
JpaAttributePropertiesPanel.notification.unableToDefineEntityId=No se puede definir el tipo de ID de la entidad ''{0}''
JpaColumnNamesEditor.validation.columnMustNotBeEmpty=La lista de columnas no puede estar vacía
JpaToolWindowManager.designer=Diseñador
JpaToolWindowManager.jpaDesignerEmptyText=El diseñador solo admite los siguientes tipos de archivo:\n• Entidades JPA\n• Repositorios JPA\n• Scripts SQL\n• Conjuntos de cambios de Liquibase
JpaToolWindowManager.jpaDesignerTitle=Diseñador JPA
JpaToolWindowManager.structure=Estructura
JpaToolWindowManager.toolWindowId=Herramienta JPA Buddy
MapperMethodCreationDialog.single=Único
MapperMethodCreationDialog.title.from.dto.to.entity=De DTO a entidad
MapperMethodCreationDialog.title.from.entity.to.dto=De entidad a DTO
MessageDialog.no.thanks=No, gracias
MessageDialog.request.ultimate.trial=Probar IntelliJ IDEA Ultimate
MethodType.COUNT=Cantidad
MethodType.DELETE=Método Eliminar
MethodType.EXISTS=Existe
MethodType.FIND_COLLECTION=Buscar Colección
MethodType.FIND_INSTANCE=Encuentra instancia
MethodType.QUERY_COUNT=Cuenta
MethodType.QUERY_DELETE=Eliminar
MethodType.QUERY_EXISTS=Existe
MethodType.QUERY_FIND_COLLECTION=Consulta de búsqueda de colección
MethodType.QUERY_FIND_INSTANCE=Buscar instancia
MethodType.QUERY_UPDATE=ACTUALIZARCONSULTA
NewType.INDEX=Índice
NewType.UNIQUE_CONSTRAINT=RESTRICCIÓN ÚNICA
NotImplemented.title=Próximamente
PTableGroup.association=asociación
PTableGroup.basic=Básico
PTableGroup.column=Columna
PTableGroup.format=formato
PTableGroup.general=General
PTableGroup.hibernate.envers=Hibernate Envers
PTableGroup.id=ID
PTableGroup.inheritance=Herencia
PTableGroup.jpa.buddy=JPA Buddy
PTableGroup.lombok=Lombok
PTableGroup.table=Tabla
PTableGroup.validation=Validación
Palette.category.attributes=Atributos
Palette.category.audit=Auditar
Palette.category.indexes=Índices
Palette.category.lifecycleCallbacks=Retrollamada de ciclo de vida
Palette.category.liquibase.add=Añadir
Palette.category.liquibase.create=Crear
Palette.category.liquibase.drop=Eliminar
Palette.category.liquibase.filter=Archivos Liquibase
Palette.category.liquibase.rename=Renombrar
Palette.category.method=Método
Palette.category.namedGraph=Gráfica con nombre
Palette.category.namedGraphs=Gráficas con nombre
Palette.category.namedQuery=Consultas con nombre
Palette.category.other=Otros
Palette.category.query=Consultas
Palette.category.reverseEngineering=Ingeniería inversa
Palette.category.utils=Utilidades
QueryType.COUNT=Cuenta
QueryType.DELETE=DELETE
QueryType.EXISTS=Existe
QueryType.FIND=Buscar
QueryType.UPDATE=Actualizar
RepositoryCreationDialog.mode.bulk=Masivo
RepositoryCreationDialog.mode.single=Único
RepositoryCreationDialog.title=Nuevo Repositorio Spring Data
RepositoryGraphEditor.radio.fetch=Traer
RepositoryGraphEditor.radio.load=Cargar
RepositoryMethodDialog.changeSettings=Cambiar Configuración
RepositoryMethodDialog.is=(Es)
RevisionListenerRenderer.newClass=Nueva clase
SpringAuditItem.name=Spring Audit
StartIndexItem.name=Índice de inicio
TabularPropertiesEditor.propertiesNotFound=Propiedad no encontrada
TabularPropertiesEditor.validation.number=Número inválido
ToStringType.ALL=Todos
ToStringType.NONE=Ninguno
ToStringType.ONLY_EXPLICITLY_INCLUDED=Solo incluido explícitamente
TypeInject.CONSTRUCTOR_OR_AUTOWIRED=Constructor/@Autowired
TypeInject.LOOKUP=Buscar método
TypeInject.OBJECT_FACTORY=Fábrica de objetos
action.CreateLiquibaseChangeLog.text=Registro de cambios vacío de Liquibase
action.CreateLiquibaseChangeLogItem.description=Crea el cambio de Liquibase
action.CreateLiquibaseChangeLogItem.text=Elemento del registro de cambios de Liquibase
action.CreateReverseEngineeringItem.description=Realizar ingeniería inversa de columna de base de datos a la propiedad de la entidad JPA
action.CreateReverseEngineeringItem.text=Generar entidad desde DB
action.JpbAddAttributesFromPojo.text=Añadir Atributos de DTO
action.JpbAddAttributesToDTO.text=Agregar atributos a DTO
action.JpbAddMapperMethods.description=Agregar métodos Mapper
action.JpbAddMapperMethods.text=Métodos de mapper...
action.JpbConfigureToolWindow.description=Configurar la barra de herramientas y ventana de herramientas del editor
action.JpbConfigureToolWindow.text=Configurar barra de herramientas y ventanas de herramientas del editor
action.JpbCreateCustomDs.text=Conexión de base de datos...
action.JpbCreateCustomType.text=Tipo personalizado de Hibernate
action.JpbCreateDto.text=Crear DTO
action.JpbCreateEntity.text=Entidad JPA
action.JpbCreateEntityActionWithRelationFrom.text=Referencia entidades...
action.JpbCreateEntityActionWithRelationTo.text=Entidad referenciada
action.JpbCreateEntityFromPojo.text=Generar JPA Entity desde POJO
action.JpbCreateEntityView.text=Blaze Vista de entidad de persistencia
action.JpbCreateHibernateEvent.text=Crear Evento Hibernate
action.JpbCreateIndex.description=Crear índice
action.JpbCreateIndex.text=Índices/Restricciones...
action.JpbCreateJpaConverter.text=JPA Converter
action.JpbCreateJpaDto.text=DTO
action.JpbCreateJpaRepository.text=Repositorio Spring Data JPA
action.JpbCreateMapper.text=Interfaz de MapStruct
action.JpbCreatePersistenceUnit.text=Unidad de persistencia
action.JpbCreateRelatedEntityPopup.description=Agregar propiedad con entidad de referencia
action.JpbCreateRelatedEntityPopup.text=Crear entidad referenciada
action.JpbCreateRepositoryMethod.description=Crear método de repositorio
action.JpbCreateRepositoryMethod.text=Método de repositorio...
action.JpbCreateRevisionEntity.text=Entidad de Revisión
action.JpbCreateSpringDataSource.description=Propiedades del origen de datos del bastidor
action.JpbCreateSpringDataSource.text=Fuente de datos
action.JpbCreateSpringProjection.text=Proyección Spring Data
action.JpbDeleteDataStore.text=Borrar...
action.JpbDeletePersistenceUnit.text=Eliminar persistencia unidad
action.JpbDetectDataSource.text=Detectando conexión...
action.JpbEditCustomDataSource.text=Editar Conexión BD
action.JpbEditPersistenceUnit.text=Editar unidad de persistencia
action.JpbExtractMappedSuperClass.text=Extraer a MappedSuperClass
action.JpbFlywayAddDdlChange.text=Agregar sentencia DDL/SQL
action.JpbFlywayCreateSqlChange.description=Crear sentencia DDL
action.JpbFlywayCreateSqlChange.text=Sentencia DDL/SQL
action.JpbFlywayGenerateDiffDdlChanges.text=Generar DDL de diferencias
action.JpbGenerateEntityAttribute.description=Añadir atributo de entidad
action.JpbGenerateEntityAttribute.text=Atributo entidad...
action.JpbGenerateLifecycleCallback.description=Adicionar devolución de llamada del ciclo de vida de JPA
action.JpbGenerateLifecycleCallback.text=Generar callback de ciclo de vida...
action.JpbGenerateNamedQuery.description=Agrega consulta nombrada
action.JpbGenerateNamedQuery.text=Generar consulta nombrada...
action.JpbGenerateUtilities.description=Utilidades JPA
action.JpbGenerateUtilities.text=Utilidades de JPA...
action.JpbLiquibaseDeleteTag.text=Eliminar Etiqueta
action.JpbMapperCreation.text=Crear interfaz MapStruct
action.JpbReEntityAttributeFromDb.text=Generar Atributo de Entidad desde Base de Datos
action.JpbReferencesTreeNotification.text=Referencias
action.JpbRefreshJpaStructure.text=Refrescar árbol del explorador JPA
action.JpbSafeDeleteAttribute.description=Borra atributo de forma segura
action.JpbSafeDeleteAttribute.text=Eliminación segura...
action.JpbSafeDeleteClass.text=Eliminar clase de forma segura
action.JpbSafeDeleteMethod.description=Eliminar método seguro
action.JpbSafeDeleteMethod.text=Eliminar de forma segura...
action.JpbSearchInLibraries.text=Buscar en librerías
action.JpbSelectInStructureView.text=Seleccionar en el Explorador de JPA
action.JpbSelectOpenedFileNotificationProvider.text=Seleccionar en el explorador de JPA
action.JpbShowEntityDdl.text=Mostrar DDL
action.JpbShowInspectorPopup.description=Mostrar el popup del inspector
action.JpbShowInspectorPopup.text=Mostrar Popup Inspector
action.JpbShowJpaSettings.text=Ajustes de JPA Buddy
action.JpbSyncDtoWithEntity.text=Añadir rasgos desde la entidad
action.JpbSyncEntityWithDto.text=Generar características de entidad desde DTO
action.actions.text=Acciones
action.add.text=Añadir
action.add.to.source.text=Agregar al texto de la fuente
action.browse.text=Explorar
action.create.dto.text=Crear DTO
action.create.jpa.converter.text=Crear convertidor JPA
action.create.projection.text=Crear proyección
action.delete.tag.text=Eliminar etiqueta
action.delete.text=Eliminar...
action.description.create.projection=Crear proyección...
action.description.migration=Migración de tipo...
action.description.smart.refactoring=Refactorización inteligente
action.documentation.text=Documentación
action.edit.lowercase=Redactar
action.extract.lowercase=Extraer...
action.navigate.lowercase=Navegar
action.new.text=Nuevo
action.select.item.text=Seleccionar elemento
add=agregar
add.attribute.dto=Añadir atributo al DTO
add.attributes.from.dto.to.entity=Añadir atributos desde el DTO en {0}
add.attributes.to.entity=Agregar atributos a entidad
addShortCut=Añadir atajo de teclado
additional.db.drivers=Controladores de BD adicionales
apply=Aplicar
attributeItem.readModel=Leer modelo de atributo
bean.injection.symbols.comment=No se mostrará el autocompletado de inyección Bean si la cantidad de símbolos ingresados es menor a la establecida
border.title.autowiring.code.style=Estilo de código de autoenlace
cancel=cancelar
category.all.results=Todos los resultados
changes.please.enter.a.valid.regex=Por favor introduzca un {0} válido
checkbox.update.entity.from.dto=Actualizar entidad desde DTO
choose.table.columns=Seleccionar columnas de la tabla
class.comment=Comentario de clase
class.name.postfix=Sufijo del nombre de clase
column.name.attribute=atributo
column.name.column=Columna
column.name.condition=condición
column.name.direction=dirección
column.name.entity=Entidad
column.name.ignoreCase=ignorar mayúsculas y minúsculas
column.name.name=Nombre
column.name.nullability=Permitividad nula
column.name.nullable=Acepta nulo
column.name.operator=Operador
column.name.repository=Repositorio
column.name.unique=único
columns=columnas
command.name.add.lifecycle.callback=Agregar devolución de llamada de ciclo de vida ''{0}''
command.name.append.changes.to.sql.file=Anexar cambios en el archivo Sql
command.name.change.repository.method.nullability=Cambiar nulidad de método del depósito
command.name.create=Crear {0}
command.name.create.changeset=Crear ChangeSet
command.name.create.tag=Crear {0} etiqueta
command.name.generate.repository.method=Generar métodos para repositorios
command.name.override.repository.method=Anular método del repositorio
configurable.group.jpa.buddy.tools.settings.description=<html><body>JPA Buddy es una herramienta de desarrollo diseñada para automatizar tareas diarias relacionadas con el modelado de datos en aplicaciones Java y Kotlin.
configurable.group.jpa.buddy.tools.settings.display.name=JPA Buddy
configure.editor.header.and.tool.windows=Configurar barra de herramientas y ventanas de herramientas del editor
continue=continuar
copy=copiar
could.not.parse.repository.method.name=No se ha podido parsear el nombre del método del repositorio.\nCompruebe que "{0}" está utilizando la convención método nombre Spring Data.
create=crear
create.db.connection=Crear conexión de base de datos
db.connection.0.has.been.created=Se creó la conexión de base de datos "{0}"
db.driver.version=Versión del driver
ddl.generate.in.existing.file.feature.description=Esta función te permite generar declaraciones de DDL para entidades JPA con solo unos pocos clics. No solo puedes generar scripts de inicialización para crear un esquema de base de datos desde cero, sino también DDL diferenciales para actualizar una base de datos existente a un estado válido de acuerdo con las entidades JPA. Esta función también es muy útil para reemplazar la propiedad problemática spring.jpa.hibernate.ddl-auto. Al usar esta acción de JPA Buddy, puedes tener el control total del DDL antes de su ejecución, configurar la asignación correcta de tipos Java -> BD, mapear campos usando conversores de atributos y tipos Hibernate, generar declaraciones drop y mucho más.
default.beans.inject.strategy=Estrategia de inyección de beans por defecto
default.beans.inject.strategy.constructor=Crea campos de referencia final de Bean e inicializa a través del constructor de clase
default.beans.inject.strategy.field=Crea un campo de referencia de bean con la anotación @Autowired
default.beans.inject.strategy.setter=Crear bean referencias de campos y métodos setter con anotaciones @Autowired
default.repository.name.suffix=sufijo de nombre del repositorio por defecto
delete=eliminar
delete.db.persistenceUnit=¿Desea eliminar la unidad de persistencia "{0}"?
designer.settings=Configuraciones del diseñador
designers=Diseñadores
designers.changelog=Liquibase registro de cambios
designers.entity=Entidad JPA
designers.repository=Spring Data repositorio
designers.sql=Tipo de archivo SQL
detect.dataSource.not.found=<html>JPA Buddy no encontró ninguna configuración de fuente de datos en el archivo de propiedades. Recuerda que JPA Buddy solo puede detectar conexiones a <a href="https://www.jetbrains.com/help/idea/jpa-buddy-database-connections.html" target="blank">bases de datos soportadas</a>.</html>
detected.data.sources=Fuentes de datos detectadas
dialog.message.entity.projectionTypeInvalid=¡El tipo de entidad/proyección es inválido!
dialog.message.this.not.valid.length=Esta no es una longitud válida.
dialog.message.validation.attributeOverridesHaveEmptyValues=Los anulados de atributos tienen valores vacíos
dialog.message.validation.columnHaventSpecified=No se ha especificado la columna
dialog.message.value.length.must.be.between.symbols=La longitud del valor debe estar entre 1 y {0} caracteres
dialog.title.attribute.overrides=Sobreescrituras de atributos
dialog.title.choose.attributes.to.concatenate=Seleccionar atributos que concatenar
dialog.title.choose.attributes.to.include=Seleccionar atributos a incluir
dialog.title.create.choice.constraint.index=Crear {0, choice, 0#restricción|1#índice}
dialog.title.delete=Eliminar
dialog.title.entity.projection.type.migration=Migración de tipo proyectada/entidad
dialog.title.new.spring.projection=Nuevo Spring Projection
dialog.title.spring.auditing=Auditoría de primavera
discard=descartar
done=Cambios guardados
driver.class=DriverClass
dto.and.mapper.feature.description=Los DTO son esenciales para las aplicaciones web, pero su implementación genera código boilerplate. Docenas de clases que son casi una copia de tus entidades, cada una con un mapper. Ahorra tiempo en el trabajo diario con la función de **Generación de DTO**. Puedes crear DTO y mappers MapStruct a partir de definiciones de entidades JPA, ¡pero eso no es todo! Con el tiempo las entidades cambian y necesitas cambiar los DTO en consecuencia. JPA Buddy también resuelve esto. Te permite **sincronizar entidades con sus DTO** y viceversa. Además, JPA Buddy proporciona la acción **Generar entidad desde POJO** que ayuda a generar entidades JPA a partir de cualquier clase Java/Kotlin. Esta característica puede ser útil si desarrollas aplicaciones siguiendo un enfoque basado en API primero: define los DTO para la API primero y luego implementa el modelo de datos.
dto.class.comment.help.tooltip=<html>Variable <b>ENTITYFQN</b> - Nombre completo de la entidad en la que se crea el DTO.</html>
dto.comment.description=<html>Las expresiones regulares del link en el comentario permite que JPA Buddy relacione DTO con sus entidades JPA. Para especificar un placeholder para el FQN de la entidad de destino en el comentario, utilice el patrón <b>(?lt;entidadgt;.*)</b>.<br><br>Por lo tanto, si la expresión regular se define como <b>Un DTO para la entidad {@link (?.*)}.</b>, se resolverá en el siguiente comentario: <i>//Un DTO para la entidad {@link io.jpabuddy.demo.entities.Project}.</i>.<br><br>Esta funcionalidad se deshabilitará cuando el campo esté vacío.</html>
dto.comment.regexp=Regex de vinculación de comentarios
dto.name.pattern.description=<html>Si está utilizando fuertes convenciones de nomenclatura entre sus entidades JPA y sus DTOs, puede declararlas aquí. Esto le permite a JPA Buddy asociar DTOs con sus entidades JPA.<br><br>Para especificar un marcador de posición para un nombre de clase simple de la entidad JPA objetivo, use el patrón <b>(?lt;entitygt;.*)</b>. Por ejemplo, (?.*)Dto significa que la clase MyEntityDto se considerará un DTO de MyEntity.<br><br>Esta función se deshabilitará si el campo está vacío.</html>
dto.name.pattern.regexp=Expresión regular de nombre de clase
duplicate.method.name=El método con el nombre ''{0}'' ya está definido en el repositorio
edit=editar
editor.toolbar=Barra de herramientas del editor
editorMode=Modo del editor
editorMode.enable=Habilitar modo minimalista
enable.completion=Autocompletado inteligente
entity.attributes.from.dto=Crear propiedades de entidades desde DTO
entity.listener=Escuchador de entidades
entity.listeners=Escuchadores de entidad
feature.available.only.with.subscription=Característica disponible sólo en IntelliJ IDEA Ultimate Edition
field.exists=Ya existe un campo con este nombre
field.required=El campo ''{0}'' es requerido
fixes.createCustomEntity=Crear entidad JPA...
fixes.createMappedSuperclassEntity=Crear JPA MappedSuperclass "{0}"
fixes.createMissingAttribute=Crear atributo faltante
flyway.diff.feature.description=La generación de migraciones versionadas de Flyway es una función muy útil que puede ahorrar mucho tiempo en tareas diarias. Al utilizar esta función, puede generar automáticamente migraciones que contienen el DDL necesario para actualizar la base de datos para que concuerde con su modelo JPA. Estas migraciones de Flyway con DDL de diferencia se pueden generar comparando entidades JPA con una base de datos, dos bases de datos o incluso entidades JPA de una rama de VCS con entidades JPA de otra rama de VCS, lo que resulta muy útil cuando no tiene acceso al destino base de datos.
flyway.init.feature.description=La acción de migración de esquema inicial de Flyway ayuda al desarrollador a generar un esquema para una base de datos desde cero. Como fuente, pueden utilizarse las entidades JPA o una base de datos ya existente. Por lo tanto, se obtiene una migración de Flyway versionada que contiene el DDL necesario para la inicialización del esquema. Esta función es muy útil a la hora de integrar Flyway en una aplicación ya existente o cuando se decide generar un único script para la inicialización de la base de datos en lugar de ejecutar un montón de migraciones antiguas. Además, también puede resultar de ayuda para configurar un nuevo entorno de desarrollo o pruebas.
follow.this.link.to.watch.feature=<a href="{0}">Cómo funciona la función</a>
following.licence.options=Puede habilitar esta función con las siguientes opciones: <ol><li>Si aún no ha probado IntelliJ IDEA Ultimate, puede <a href="https://www.jetbrains.com/lp/idea-extended-trial/#:~:text=90%2Dday%20Trial%20for%20Your%20Whole%20Teamtext=Complete%20a%20short%20form%20and,a%20set%20of%20simple%20criteria">solicitar un periodo de prueba para usted o para todo su equipo</a></li><li>Si es estudiante o profesor, imparte o cursa un curso o desarrolla proyectos de código abierto, puede <a href="https://www.jetbrains.com/idea/buy/?section=discountsbilling=yearly">obtener IntelliJ IDEA Ultimate gratis</a></li><li><a href="https://www.jetbrains.com/idea/buy/?section=commercialbilling=yearly">Compre IntelliJ IDEA Ultimate</a></li></ol>
from.db=desde DB
from.dto=desde el DTO
generate.ddl.by.entities=La acción 'Generar DDL por entidades' permite a los desarrolladores convertir entidades en sentencias DDL con tan solo unos clics. Puede generar secuencias de comandos de inicialización para crear un esquema de base de datos desde cero, o bien DDL de diferencias para actualizar una base de datos existente según las entidades JPA y dejarla en estado válido. Además, esta función es muy útil para reemplazar la propiedad 'spring.jpa.hibernate.ddl-auto' que puede generar errores. Al usar la acción JPA Buddy, podrá controlar totalmente el DDL antes de su ejecución, configurar la asignación correcta de tipos Java a tipos de bases de datos, utilizar convertidores de características y asignar campos a tipos Hibernate, generar sentencias 'drop', entre otras funciones.
generate.ddl.from.run.console.feature.description=Esta excepción ocurre cuando tus entidades JPA no pueden mapearse correctamente a las tablas y campos de la base de datos. ¡JPA Buddy ofrece una función muy útil que puede resolver fácilmente este problema! ¡Genera DDL directamente desde el seguimiento de pila para completar las diferencias entre las entidades JPA y la base de datos! ¡Luego, inspecciona el script generado, ejecútalo y vuelve a iniciar la aplicación! Configurar las propiedades ddl-auto o hbm2ddl para regenerar o actualizar la base de datos también puede resolver el mismo problema. Sin embargo, esta solución tiene algunas limitaciones importantes. Mira el video a continuación para conocer estas limitaciones y la mejor solución que propone JPA Buddy.
generate.equals.and.hashcode.empty.fields=La entidad no tiene propiedades para incluir en equals() y hashCode()
generate.equals.and.hashcode.empty.fields.title=Campos no encontrados
generateEntity.resolveAttributeInfo=Resolver información de atributos
go.to.reference.element=Ir a elemento de referencia
group.com.intellij.jpb.group.otherNewGroup.text=Otro
group.com.intellij.jpb.structure.toolbar.new.flyway.text=Todas las nuevas acciones
group.com.intellij.jpb.structure.toolbar.new.text=Todas las nuevas acciones
hsql.unsupported.rename.sequence=HSQL no soporta renombrar secuencia
hsql.unsupported.rename.view=HSQL no admite el cambio de nombre de la vista
ide=IDE
inspection.ConverterSpecifiedIncorrectlyInspection=El tipo de convertidor no coincide con el tipo de propiedad
inspection.ConverterSpecifiedIncorrectlyInspectionExt=El tipo del convertidor {0} no coincide con el tipo de propiedad {1}
inspection.LombokDataInspection=No se recomienda usar @Data en entidades JPA. Puede ocasionar problemas graves de rendimiento y consumo de memoria.
inspection.LombokEqualsInspection=No se recomienda utilizar @EqualsAndHashCode para entidades JPA. Puede provocar problemas graves de rendimiento y consumo de memoria.
inspection.LombokToStringIncludeInspection=Este campo está lazy-loaded pero se incluye en @ToString. Puede causar problemas de rendimiento y consumo de memoria.
inspection.LombokToStringInspection=@ToString incluye campos de carga diferida y/o asociaciones. Esto puede causar problemas de rendimiento y consumo de memoria.
inspection.NoArgsConstructorInspection=La entidad debe tener un constructor público o protegido sin parámetros
inspection.SpringDataModifyingAnnotationMissing=Las consultas de Actualización / Eliminación deben estar anotadas con @Modifying, de lo contrario, se arrojará InvalidDataAccessApiUsageException.
inspection.cantFindHibernateCustomType=No se puede encontrar el tipo personalizado de Hibernate
inspection.cantFindInverseAttribute=No se encuentra el atributo inverso
inspection.cantFindRelatedAttribute=No se encuentra el atributo relacionado
inspection.compositeIdClassSerializableInspection=La clase CompositeId debe implementar Serializable
inspection.converterNotAnnotated=El conversor JPA debe estar anotado con @Converter
inspection.dataClassRequiredEqualsAndHashCode=La implementación de la clase de datos equals(), hashCode() y toString() no se recomienda para entidades JPA. Pueden generar graves problemas de rendimiento y consumo de memoria.
inspection.dataClassRequiredEqualsAndHashCode.key=Las clases de datos no se recomiendan para entidades JPA.
inspection.entityIdMissing=Entidad sin clave principal
inspection.entityIdMissing.fix.createEntityId=Añadir atributo ID
inspection.group.key.jpbCommon=JPA Buddy
inspection.incompatibleTableAnnotation=@La anotación `@Table` no debería usarse con la estrategia de herencia `SINGLETABLE`
inspection.message.unknown.column=Columna desconocida {0}
inspection.missingConverter=Las propiedades con tipos no soportados deberían ser @Transient or tener una declaración de tipo personalizada o convertidor
inspection.serializable.annotator.message=La clase ''{0}'' debe implementar ''Serializable''
inspection.toManyVersionAnnotations=Sólo se puede utilizar una propiedad o un campo Version por clase
inspector=Inspector
inspector.tool.window=Ventana de herramientas de inspección
intention.create.dto.confirmation.message=Esta entidad no tiene un DTO relacionado. ¿Desea crear uno nuevo?
intention.create.dto.confirmation.title=No se encuentra DTO
intention.showInspector=Mostrar ventana emergente de inspector
invalid.method.name=El nombre del método es inválido
jpa.buddy.generation=Buddy JPA
jpa.entity.from.pojo=Generar entidad JPA desde POJO
jpa.structure=Explorador de JPA
jpa.structure.updated=Se actualizó el árbol del explorador JPA
jpaBuddy.title=JPA Buddy
label.index=Índice
label.migrate.entity.projection.type.repositoryMethodTo=Migrar entidad/tipo proyección de método de repositorio {0} "{1}" a
label.named.query=Consulta nombrada
liquibase.diff.feature.description=Diff La generación de cambios en el registro de Liquibase es una característica muy útil que puede ahorrar mucho tiempo en el trabajo diario. Al utilizar esta función, puede generar automáticamente un registro de cambios de Liquibase que contiene todo el código necesario para actualizar la base de datos para que coincida con su modelo JPA. El registro de cambios de diferencias se puede generar comparando entidades JPA con una base de datos, dos bases de datos o incluso entidades JPA en una rama de VCS con entidades JPA en otra rama de VCS, lo que resulta muy útil cuando no tiene acceso a la base de datos de destino.
liquibase.diff.in.existing.file.feature.description=La generación de registros de cambios de Liquibase es una función muy útil que puede ahorrar mucho tiempo en el trabajo diario. Al usar esta función, puedes generar automáticamente un registro de cambios de Liquibase que contenga todo el código necesario para actualizar la base de datos para que cumpla con tu modelo JPA. Los registros de cambios de diferencia se pueden generar comparando entidades JPA con una base de datos, dos bases de datos o incluso entidades JPA en una rama de VCS con entidades JPA en otra rama de VCS, lo que resulta muy útil cuando no tienes acceso a la base de datos de destino.
liquibase.init.feature.description=La acción Init Database Schema Liquibase change log ayuda a los desarrolladores a generar el esquema de base de datos desde cero. Puede utilizar sus entidades JPA o la base de datos existente como origen. Como resultado, obtendrá un registro de cambios de Liquibase con todos los comandos necesarios para la inicialización del esquema. Esta característica es muy útil si está integrando Liquibase en una aplicación existente o si decide generar un único script para la inicialización de la base de datos en lugar de ejecutar muchos registros de cambios antiguos. Además, también puede ayudar a configurar nuevos entornos de desarrollo o prueba.
mapper.naming=Patrón de nomenclatura
mapper.naming.collection.strategy=Estrategia de nombres de colección mapeada
mapper.naming.hint=Utiliza ${ENTITYNAME} y ${DTONAME} para poner los nombres de las clases correspondientes en el nombre del método
mapper.naming.to.dto=De clase a DTO
mapper.naming.to.entity=Del DTO a la entidad
mapper.naming.update=Actualizar la entidad del DTO
mapping.methodAlreadyExists=El método con el mismo nombre y distinta firma ya existe en la clase
mysql.unsupported.sequence=Secuencia no soportada por MySQL. Utilice AUTOINCREMENT en su lugar.
new=nuevo
no=no
notification.content.attribute.must.be.embedded.type=¡El atributo debe ser de tipo insertado!
notification.content.class.not.found.or.it.not.entity=No se encontró la clase ''{0}'' o no es una entidad
notification.content.containing.file.not.found=El archivo contenedor no se ha encontrado
notification.content.entity.not.found=Entidad no encontrada
notification.content.errorMessage={0}<br/> Consulte el archivo de registro para obtener más detalles ({1})
notification.content.incorrect.property.type.for.object.editor=¡Tipo de propiedad incorrecto para el editor de objetos!
notification.content.not.implemented=¡No implementado!
notification.content.psi.file.not.found.in.jpa.palette=Archivo Psi no encontrado en la paleta JPA
ok=Aceptar
open=abrir
palette=Paletas
palette.tool.window=Ventana de herramientas de paleta
plugin.cannot.be.dynamically.uploaded=El complemento JPA Buddy no puede ser descargado dinámicamente actualmente.
popup.content.dragging.from.palette.not.available.indices=No se puede arrastrar desde la paleta cuando los índices se están actualizando.
popup.title.choose.repository.class=Seleccione clase de repositorio
popup.title.inspector=Inspector
popup.title.jpa.utilities=Utilidad JPA
popup.title.lifecycle.callback=Callback de ciclo de vida
popup.title.liquibase.item=Elemento de Liquibase
popup.title.repository.method=Método del repositorio
progress.title.create.dto.class=Creando clase DTO...
project.error.caption=Error de JPA Buddy
project.persistenceUnit.caption=Compañero JPA
project.persistenceUnit.changeSettings=Cambiar configuración
project.persistenceUnit.initialized=Unidad de persistencia por defecto inicializada
projection.class.comment.help.tooltip=<html>Variable <b>ENTITYFQN</b> - Nombre completo de la entidad en la que se basa la proyección creada.</html>
projection.comment.description=<html>La Expresión regular de link en el comentario permite que JPA Buddy relacione la proyección con su entidad JPA. Para especificar el marcador de posición de FQN de la entidad destino en el comentario, utilice el patrón <b>(?lt;entidadgt;.*)</b>.<br><br>Por lo tanto, si la expresión regular se define como <b>Una proyección para la entidad {@link (?.*)}</b>, se resolverá en los siguientes comentarios: <i>//Una proyección para la entidad {@link io.jpabuddy.demo.entities.Project}</i>.<br><br>Esta característica se desactivará cuando el campo esté vacío.</html>
projection.name.pattern.description=<html>Si utiliza una convención de nomenclatura rígida entre las entidades y proyecciones de JPA, puede declararla aquí. Esto permite que JPA Buddy relacione la proyección con su entidad JPA.<br><br>Para especificar el marcador de posición para el nombre de la clase simple de la entidad JPA de destino, use el patrón <b>(?lt;entitygt;.*)</b>. Por ejemplo, (?<.*>)Prj significa que la clase MyEntityPrj se tratará como la proyección de MyEntity.<br><br>Esta función se deshabilita cuando el campo está vacío.</html>
properties.calculation.error=Error calculando la propiedad
properties.calculation.error.message=Mensaje de excepción
properties.calculation.logForDetails=Ver detalles del log
re.columns.from.db.feature.description=Si eres de los que prefieres diseñar la base de datos primero y después codificar las entidades JPA para mapear las tablas, ¡esta funcionalidad te vendrá muy bien y te ahorrará mucho tiempo de trabajo diario! Mediante la acción Columnas desde BD podrás convertir los atributos seleccionados en campos de la entidad JPA. Además, soporta el mapeado de relaciones ManyToOne, OneToOne, OneToMany y ManyToMany. Lo mejor de todo es que no regenera la entidad entera, sino que añade los nuevos campos en la declaración de la entidad existente.
re.entities.from.db.feature.description=¡Esta característica te resultará muy útil y te ahorrará mucho tiempo en tareas diarias, si te gusta diseñar primero tu base de datos y luego codificar las entidades JPA para mapear las tablas, o si estás desarrollando una aplicación sobre una base de datos existente! Con la acción Generar entidades desde la base de datos, puedes transformar con unos pocos clics las tablas de base de datos seleccionadas y sus atributos (incluidas restricciones, índices, propiedades de columna, etc.) en entidades JPA. También se admite el mapeo de relaciones ManyToOne, OneToOne, OneToMany y ManyToMany. Lo mejor de todo es que en lugar de volver a generar la entidad completa, se agregan nuevos campos a la declaración de entidad existente.
refactoring.rename.accessors=Renombrar accesores
refactoring.rename.dto.fields=Renombrar campos DTO
regexp.should.have.one.group={0} Debe tener un grupo llamado "{1}", por ejemplo (?<{1}>.*)
remove=eliminar
repository.equality.condition.form=Formulario de condición de igualdad
repository.no.selected.item=Por favor, selecciona un elemento de {0}
repository.no.selected.item.warning=Por favor, seleccione al menos un elemento
repository.other.conditions.form=Formulario de condiciones de otro tipo
repository.verb.conditions.form=Forma condicional de verbo
save=guardar
select.columns=Seleccionar columnas
separator.class=Clase
separator.entity=Entidad
separator.item.name=Elemento divisor
separator.other=Otros
serializable.type=Tipo serializable
show.all=Mostrar todo
show.bean.injection.completion.on=Mostrar completamiento de inyección de bean:
showDiff=Mostrar diferencias
smart.bean.injection=Detección automática del tipo de inyección de Bean
smart.bean.injection.help=Autodetección del tipo de inyección de Bean en base a los Beans inyectados previamente para la clase seleccionada. Si no hay Beans inyectados, se usará la 'Estrategia por defecto de inyector de Bean'
smart.bean.injection.injectToBeanMethodSignature=Usar inyección de parámetro para el método @Bean
smart.completion.availability.disable.caption=Desactivar
smart.completion.availability.enableCreation.caption=Mostrar opciones basadas en código existente y sugerencias de código
smart.completion.availability.enableCreation.example=Por ejemplo, si corresponden a una entidad JPA existente,<br> Muestra los repositorios Spring Data JPA que no existen en la lista de finalización <a href="https://www.jetbrains.com/help/idea/jpa-buddy-coding-assistance.html#code-completion">Más información</a>
smart.completion.availability.enableExisting.caption=Mostrar opciones basadas en código existente
smart.completion.availability.enableExisting.example=Por ejemplo, el mapeo a opciones DTO de entidad y la búsqueda basada en MapStruct <br> mapper y repositorios Spring Data JPA
spring.data.repository=Repositorio Spring Data
sql.empty=La consulta SQL está vacía
start.typing.for.search=Comience a escribir para buscar
structure.mode.none=invisible
structure.mode.none.help=Ventana de herramientas "Explorador JPA" completamente oculta. No se puede acceder a ella desde ningún lugar.
structure.mode.project=Opciones de la ventana de herramientas de proyecto
structure.mode.project.help=La ventana de herramientas de explorador JPA puede utilizarse como una representación alternativa del proyecto. Para acceder a ella, abre la ventana de herramientas del proyecto y selecciona JPA Explorer en el menú desplegable.
structure.mode.separate=Ventana de herramientas independiente
structure.mode.separate.help=El explorador JPA se representa como una ventana de herramientas independiente.
structure.mode.unified=Ventana de herramientas unificada
structure.mode.unified.help=La ventana de herramientas "Explorador JPA" se muestra como una pestaña dentro de la ventana de herramientas unificada. Para acceder a ella, abra la ventana de herramientas JPA Buddy y seleccione la pestaña "Estructura".
subscription.request.license=Licencia JPA Buddy
subscription.request.licenseeEmail=Correo electrónico del licenciatario
subscription.request.link=<a href="requestLicense">Acceda al enlace para obtener la licencia.</a>
subscription.request.success=¡Gracias por su solicitud! La solicitud de la licencia de IntelliJ IDEA Ultimate se ha enviado correctamente.
subscription.request.title=Licencia de IntelliJ IDEA Ultimate
subscription.request.topLabel=Hemos notado que está utilizando IntelliJ IDEA Community Edition con una licencia activa del complemento JPA Buddy que está a punto de expirar. Como sabrá, JPA Buddy fue adquirido por JetBrains en 2023. Desde entonces, todas las funciones de pago de JPA Buddy se han transferido a IntelliJ IDEA Ultimate. Para que pueda seguir teniendo acceso a las funciones de pago de JPA Buddy, le hemos proporcionado una licencia de seis meses para IntelliJ IDEA Ultimate.
subscription.requestUltimate=Solicitud de licencia de IntelliJ IDEA Ultimate
subscription.requestUltimate.description=Es elegible para una licencia de seis meses de IntelliJ IDEA Ultimate. Haga clic a continuación para solicitar la licencia.
subscription.required=Disponible en IntelliJ IDEA Ultimate Edition
subscription.sendRequest=Solicitar licencia
suppress.LombokBuilderAllArgsInspection=Lombok @Builder requiere un constructor adecuado para esta clase
symbols=símbolos
text.comment=Comentario
toolWindow.infoDialog.text=El modo minimalista está diseñado para minimizar las molestias para el desarrollador. ¡Si te gusta tenerlo todo a mano, seguro que te encantará!<br/><ul><li>Se ocultará la ventana de herramientas de JPA Buddy; <li>JPA Explorer estará disponible en la herramienta "Proyecto" junto con otras opciones (Proyectos, Paquetes, etc.); <li>Todas las acciones de JPA Designer se pueden encontrar en el menú <b>Generar</b> (<b>{0}</b>), el menú de <b>Acciones contextuales</b> (<b>{1}</b>) y la <b>Barra de herramientas del editor</b>; <li>También puedes invocar JPA Designer haciendo clic en "Añadir atajo de teclado" o vinculando tu atajo preferido más tarde en <b>{2} -> Mapa de teclas</b>; <li>También puedes especificar<a href="#designer-settings"> ajustes de visibilidad personalizados</a> para esta ventana de herramientas;</li></ul>Consulta nuestra<a href="https://www.jetbrains.com/help/idea/jpa-buddy-minimalistic-mode.html">guía</a> sobre el modo minimalista.
tooltip.choose.class=Elegir clase
tooltip.go.to=Ir a
tooltip.hibernate.custom.type=Tipo personalizado de Hibernate
tooltip.jpa.converter=Convertidor JPA
tooltip.navigate.to=Navegar a {0}
tooltip.show.entity.attribute=Mostrar atributo de entidad
tooltip.show.usages=Mostrar Usos
tree.dto.and.projection=DTO y proyección
unresolved.reference=Referencia no resuelta: {0}
use.lombok=Usar Lombok
validation_error=Error de validación
view.mode=Modo de visualización
view.mode.custom=Personalizado
view.mode.custom.help=Selecciona qué y cómo quieres ver el contenido.
view.mode.extensive=Ampliado
view.mode.extensive.help=Muestra la ventana de herramientas JPA Buddy con todo su contenido. Es útil para quienes recién comienzan a usar JPA. Todas las opciones comunes siempre estarán frente a sus ojos, por lo que es más fácil aprender y elegir las opciones correctas para generar y modificar código.
view.mode.minimalistic=Minimalista
view.mode.minimalistic.help=No muestra la ventana de herramientas de JPA Buddy. El Explorador de JPA está disponible como una opción en la ventana de herramientas "Proyecto". Las opciones de generación de código están disponibles mediante el método abreviado de teclado de generación estándar (<b>{0}</b>) o se pueden encontrar en la barra de herramientas del "Editor". El inspector de JPA está disponible como una ventana emergente y se puede invocar como una intención o utilizando el método abreviado de teclado (<b>{1}</b>). Es útil para quienes prefieren utilizar métodos abreviados de teclado en lugar de herramientas visuales.
warning=Advertencia
yes=sí