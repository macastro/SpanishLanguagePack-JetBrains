Field.cannot.be.final.because.replaced.variable.has.lhs.usages=La variable seleccionada se usa para escritura
access.to.created.field.0.will.be.overridden.by.method.1=El acceso al campo {0} será sobrescrito por {1}
all.invocations.and.remove.the.method=Hacer inline todos los usos y eliminar el método(&A)
all.invocations.in.project=Hacer inline todos los usos en el proyecto(&A)
cannot.find.a.single.definition.to.inline.field=No hay inicializador presente para el campo
cannot.find.a.single.definition.to.inline.local.var=No se puede encontrar una única definición para hacer inline la variable local
cannot.inline.0.=No se puede hacer inline {0}
cannot.inline.reference.0=No se puede hacer inline la referencia ''{0}''
cannot.introduce.field.in.interface=No se puede introducir un campo en una interfaz
cannot.introduce.field.in.script=No hay clase en el ámbito
cannot.process.usage.in.language.{0}=No se puede procesar el uso en {0}
cannot.rename.property.0=No se puede renombrar la propiedad <bold>''{0}''</bold> que sobrescribe el método <bold>''{1}''</bold>
cannot.rename.script.class.to.0=No se puede renombrar la clase de script ''{0}'' a ''{1}''
changeSignature.no.type.for.exception=Especifique un tipo para la excepción
changeSignature.not.throwable.type=Tipo incorrecto\: ''{0}'' para excepción, debe extender java.lang.Throwable
changeSignature.wrong.type.for.exception=Tipo incorrecto\: ''{0}'' para excepción
class.does.not.exist.in.the.module=La clase no existe en el módulo. ¿Desea crearla?
class.language.is.not.groovy=El lenguaje de la clase objetivo no es Groovy
closure.uses.external.variables=El closure usa variables externas no constantes
convert.to.java.can.work.only.with.groovy=La refactorización Convertir a Java solo funciona con archivos Groovy
convert.to.java.refactoring.name=Convertir a Java
converting.files.to.java=Convirtiendo archivos a Java
converting.files.to.static=Convirtiendo archivos a @CompileStatic
declare.final.checkbox=Declarar final(&F)
error.wrong.caret.position.method.name=El cursor debe estar posicionado en el nombre del método a refactorizar.
expression.contains.errors=La expresión contiene errores
extract.method.dialog.explicit.return.checkbox=Usar declaración return e&xplícita
extract.method.title=Extraer Método
field.0.is.already.defined=El campo {0} ya está definido
field.cannot.be.initialized.in.constructor(s)=No se puede inicializar el campo en el/los constructor(es)
field.cannot.be.initialized.in.field.declaration=No se puede inicializar el campo en la declaración
field.is.not.accessible.form.context.0=El campo {0} usado en el método inline no es accesible desde el punto de llamada
files.to.be.converted=Archivos a convertir
final.field.cant.be.initialized.in.cur.method=No se puede inicializar un campo final en el método actual
implicit.getter.will.by.overridden.by.method=El getter implícito de la propiedad {0} será sobrescrito por el método {1}
implicit.setter.will.by.overridden.by.method=El setter implícito de la propiedad {0} será sobrescrito por el método {1}
initialize.in.border.title=Inicializar en
initialize.in.class.constructor.choice=&Constructor(es) de clase
initialize.in.current.method.choice=&Método actual
initialize.in.field.declaration.choice=&Declaración de campo
initialize.in.label=&Inicializar en\:
initialize.in.setup.method.choice=Método setUp
inline.local.variable.prompt.0.1=¿Hacer inline la variable local ''{0}''?
inline.method.label=Hacer inline el método ''{0}''
inplace.introduce.constant.move.checkbox=&Mover a otra clase
intention.converting.to.static=Aplicar conversión a @CompileStatic
intention.converting.to.static.family=Convertir a @CompileStatic
introduce.closure.parameter.elements.header=Agregando parámetro al closure
introduce.constant.class.label=Introducir en &clase (nombre completamente calificado)\:
introduce.variable.title=Introducir Variable
introduced.variable.conflicts.with.parameter.0=La variable introducida entrará en conflicto con el parámetro {0}
introduced.variable.conflicts.with.variable.0=La variable introducida entrará en conflicto con la variable local {0}
local.variable.is.lvalue=La variable a hacer inline aparece como lvalue en una asignación
method.duplicate=El método con firma {0} ya está definido en {1}
method.is.already.defined.in.class=El método {0} ya está definido en la clase {1}.
method.is.already.defined.in.script=El método {0} ya está definido en el script {1}.
method.is.not.accessible.form.context.0=El método {0} usado en el método inlined no es accesible desde el punto de llamada
multiple.output.values=Hay múltiples valores de salida para el fragmento de código seleccionado
name.is.wrong=El nombre ''{0}'' es incorrecto
name.label=&Nombre(&N)\:
no.occurrences.found=No se encontraron ocurrencias
only.in.groovy.files=Este refactoring solo está disponible en archivos Groovy
press.escape.to.remove.the.highlighting=Presione Escape para quitar el resaltado
ref.0.will.not.be.resolved.outside.of.current.context=La referencia ''{0}'' no se resolverá fuera del contexto actual
refactored.method.will.cover.closure.property=El método refactorizado sobrescribirá la propiedad closure ''{0}'' en {1}
refactoring.cannot.be.applied.no.sources.attached=No se puede aplicar el refactoring\: no hay fuentes adjuntas
refactoring.cannot.be.applied.to.abstract.methods=El refactoring no puede aplicarse a métodos abstract
refactoring.cannot.be.applied.to.constructors=El refactoring no puede aplicarse a constructores
refactoring.is.available.only.for.method.calls=El refactoring solo está disponible para llamadas a métodos
refactoring.is.not.supported.in.method.parameters=El refactoring no está soportado en parámetros de closure o método
refactoring.is.not.supported.in.parameter.initializers=El refactoring no está soportado en inicializadores de parámetros
refactoring.is.not.supported.in.the.current.context=El refactoring no está soportado en el contexto actual
refactoring.is.not.supported.when.return.statement.interrupts.the.execution.flow=El refactoring no está soportado cuando la sentencia return interrumpe el flujo de ejecución
reference.to.accessor.0.is.used=La referencia al accessor <bold>{0}<bold> no puede hacerse inline.
remove.parameter.0.no.longer.used=Eliminar parámetro ''{0}'' que ya no se usa
rename.groovy.property=Renombrar propiedad Groovy(&G)
rename.is.not.applicable.to.implicit.elements=Los elementos implícitos no pueden renombrarse
rename.member=Renombrar {0}
rename.property=Renombrar propiedad ''{0}''
replace.all.occurrences.checkbox=Reemplazar todas las ocurrencias(&A)
replace.getter.for.property=El getter predeterminado para la propiedad ''{0}'' será sobrescrito
replace.setter.for.property=El setter predeterminado para la propiedad ''{0}'' será sobrescrito
return.type.is.wrong=El tipo de retorno es incorrecto
selected.block.contains.invocation.of.another.class.constructor=El bloque seleccionado contiene una invocación al constructor de otra clase
selected.block.should.represent.a.statement.set=El bloque seleccionado debe representar un conjunto de sentencias o una expresión
selected.block.should.represent.an.expression=El bloque seleccionado debe representar una expresión
selected.expression.has.void.type=La expresión seleccionada tiene tipo void
selected.expression.should.not.be.lvalue=La expresión seleccionada no debe estar en el lado izquierdo de la asignación
selected.variable.is.used.for.write=La variable seleccionada se usa para escritura
signature.preview.border.title=Vista previa de la firma
specify.default.value=Especifique un valor predeterminado o inicializador para el parámetro ''{0}''
specify.type.label=Especificar tipo de retorno explícitamente(&T)
super.reference.is.used=La llamada super usada en el método inlined no será válida después del inline.
target.class.must.not.be.script=La clase objetivo no debe ser un script
there.is.no.method.or.closure=No hay método o closure contenedor
this.invocation.only.and.keep.the.method=Hacer inline solo este uso y mantener el método(&T)
type.for.parameter.is.incorrect=El tipo para el parámetro ''{0}'' es incorrecto
type.label=&Tipo(&T)\:
usage.will.be.overridden.by.method=El uso {0} será sobrescrito por el método {1}
variable.conflicts.with.field.0=El nombre elegido entrará en conflicto con el campo {0}
variable.conflicts.with.parameter.0=El nombre elegido entra en conflicto con el parámetro {0}
variable.conflicts.with.variable.0=El nombre elegido entrará en conflicto con la variable local {0}
variable.is.accessed.for.writing=Se accede a la variable ''{0}'' para escritura
visibility.border.title=Visibilidad
visibility.private.choice=Privado(&V)
visibility.property.choice=Propiedad(&R)
visibility.protected.choice=Protected(&O)
visibility.public.choice=Public(&B)
you.cannot.pass.as.parameter.0.because.you.remove.1.from.base.method=No puede pasar ''{0}'' como parámetro porque está eliminando el parámetro ''{1}'' asociado del método. Debe deseleccionar "Eliminar parámetro ''{0}'' que ya no se usa" o deseleccionar el parámetro ''{1}'' en la tabla de parámetros.