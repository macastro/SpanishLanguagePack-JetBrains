action.CreateVueSingleFileComp.description=Crea un único archivo de componente Vue
action.CreateVueSingleFileComp.text=Componente Vue
action.VueExtractComponentAction.description=Extrae la parte seleccionada de una plantilla Vue.js a un nuevo componente de un solo archivo, le pasa los datos y métodos usados con props
action.VueExtractComponentAction.text=Extraer componente Vue
nuxt.support.notification.contents=Para mejores sugerencias de autocompletado, añadir @nuxt/types a dependencias del proyecto
nuxt.support.notification.title=Soporte de Nuxt.js
options.indent.label.top-level.caption=Identar hijos de la etiqueta de nivel superior:
options.indent.radio.block-specific.caption=Específico al lenguaje en el bloque
options.indent.radio.block-specific.tooltip=Las sangrías en los bloques <template>, <script> y <style> se establecerán de acuerdo con la configuración de estilo de código para el lenguaje utilizado. Por ejemplo, <style lang='scss'> utilizará las sangrías establecidas en SCSS
options.indent.radio.uniform.caption=Uniforme en todo el archivo
vue.command.name.auto-import-external-symbols=Autoimportar símbolos externos
vue.command.name.auto-import-vue-components=Auto-importación de componentes de Vue
vue.configurable.service.auto=Automático
vue.configurable.service.auto.help=Selecciona esta opción para habilitar Vue Language Server (en modo de adquisición) cuando sea posible. Se seguirán utilizando las inspecciones internas de IDE.
vue.configurable.service.disabled=Desactivado
vue.configurable.service.disabled.help=Selecciona esta opción para desactivar ambos servicios de lenguaje. Solo se usarán las inspecciones internas del IDE.
vue.configurable.service.group=Servicio Vue
vue.configurable.service.languageServerPackage=Servidor de lenguaje de Vue:
vue.configurable.service.ts=Servicio TypeScript clásico
vue.configurable.service.ts.help=Selecciona esta opción para habilitar forzosamente la integración clásica con el servicio TypeScript para los archivos Vue. Como no funciona para la versión 5.0 o superior de TypeScript, en estos casos, se utilizarán las inspecciones internas del IDE.
vue.configurable.service.volar.package=Vue Language Server:
vue.configurable.title=Vue
vue.create.single.file.component.action.dialog.title=Nuevo {0}
vue.create.single.file.component.action.name=Crear archivo de componente Vue ''{0}''
vue.create.single.file.component.template.class.api=API de la clase
vue.create.single.file.component.template.composition.api=API de composición
vue.create.single.file.component.template.options.api=API de opciones
vue.documentation.section.argument=Argumento:
vue.documentation.section.default=Por defecto:
vue.documentation.section.library=Librería:
vue.documentation.section.pattern=Patrón:
vue.documentation.section.required=Obligatorio
vue.documentation.section.slot.scope=Ámbito
vue.documentation.type.component=Componente
vue.documentation.type.component.computed.property=Propiedad calculada del componente
vue.documentation.type.component.data.property=Propiedad de datos del componente
vue.documentation.type.component.event=Evento del componente
vue.documentation.type.component.method=método del componente
vue.documentation.type.component.property=Propiedad de componente
vue.documentation.type.directive=directiva
vue.documentation.type.directive.argument=argumento de directiva
vue.documentation.type.directive.modifier=Modificador de directiva
vue.documentation.type.filter=filtro
vue.documentation.type.functional.component=componente funcional
vue.documentation.type.slot=ranura
vue.documentation.vue=Vue
vue.inspection.display.name.data.function=Función de datos
vue.inspection.display.name.deprecated.symbol=Símbolo obsoleto
vue.inspection.display.name.duplicate.tag=Etiqueta duplicada de template/script
vue.inspection.display.name.missing.component.import=Falta la importación del componente
vue.inspection.display.name.unrecognized.directive=Directiva no reconocida
vue.inspection.display.name.unrecognized.slot=Ranura no reconocida
vue.inspection.group.name=Vue
vue.inspection.message.attribute.does.not.accept.value={0} no acepta ningún valor
vue.inspection.message.data.property.should.be.function=La propiedad de datos debería ser una función
vue.inspection.message.duplicate.tag=Etiqueta de nivel superior duplicada {0}
vue.inspection.message.filter.function.with.no.args=La función de filtro debería aceptar al menos un argumento
vue.inspection.message.filter.invalid.number.of.arguments=Número de argumentos de filtro inválido, esperados {0}
vue.inspection.message.missing.component.import=El componente {0} no está importado
vue.inspection.message.unresolved.filter=No se ha podido resolver el filtro {0}
vue.live.template.context.component=Componente Vue
vue.live.template.context.script.tag=Etiqueta de script de Vue
vue.live.template.context.template=Plantilla Vue
vue.live.template.context.template.tag.element=Elemento de una etiqueta de plantilla de Vue
vue.live.template.context.top.level=Elemento de nivel superior de Vue
vue.param.hints.show.names.for.filters=Mostrar nombres para los filtros
vue.parser.message.expected.comma.or.end.of.expression=Se espera coma o fin de expresión
vue.parser.message.expected.end.of.expression=Se esperaba el final de la expresión
vue.parser.message.expected.identifier.or.string=Identificador o cadena esperados
vue.parser.message.expected.in.or.of='en' o 'de' esperado
vue.parser.message.expected.lparen.pipe.or.end.of.expression=Se esperaba (, | o el fin de la expresión
vue.parser.message.expected.pipe.or.end.of.expression=Se esperaba | o final de la expresión
vue.parser.message.generic.component.parameters.only.with.typescript=Los parámetros de los componentes genéricos se aceptan solamente con el lenguaje TypeScript.
vue.parser.message.statements.not.allowed=No se permiten sentencias en las expresiones de Vue
vue.parser.message.unterminated.interpolation=Interpolación no terminada
vue.progress.title.auto-importing-external-symbols-on-paste=Importando automáticamente símbolos externos al pegar...
vue.progress.title.auto-importing-vue-components-on-paste=Auto-importando componentes Vue en pegar...
vue.project.generator.description=Crea un nuevo proyecto <a href='https://vuejs.org'>Vue.js</a> usando <a href='https://cli.vuejs.org'>Vue CLI</a>.
vue.project.generator.name=Vue.js
vue.project.generator.nuxt.description=Crear un nuevo proyecto de <a href='https://nuxt.com/'>Nuxt</a> usando <a href='https://nuxt.com/docs/api/commands/init'>nuxi</a>.
vue.project.generator.nuxt.name=Nuxt
vue.project.generator.nuxt.presentable.package.name=Nuxt CLI(&C)
vue.project.generator.presentable.package.name=Vue CLI(&C)
vue.project.generator.use.default.project.setup=Utilizar configuración de proyecto por defecto
vue.quickfix.import.component.family=Importar componente
vue.quickfix.import.component.name=Importar ''{0}'' component
vue.quickfix.wrap.with.function.family=Envolver el objeto con la familia de funciones
vue.quickfix.wrap.with.function.text=Envolver objeto de datos en función
vue.search.scope.template.name=plantilla
vue.service.name=Servidor de lenguaje Vue
vue.service.prefix=Vue
vue.symbol.presentation=Vue {0} {1}
vue.template.intention.extract.component.command.name=Extraer Vue Componente
vue.template.intention.extract.component.continue=Continuar editar
vue.template.intention.extract.component.error.component.exists=El componente {0} ya existe
vue.template.intention.extract.component.error.component.name=Nombre de componente no válido: {0}
vue.template.intention.extract.component.error.file.exists=Ya existe el archivo {0}
vue.template.intention.extract.component.family.name=Extraer componente Vue
vue.template.intention.import.component.family.name=Importar local el componente
vue.template.intention.v-model.expand.command.name=Expandir v-modelo
vue.template.intention.v-model.expand.family.name=Expandir v-modelo
vuex.inspection.message.unresolved.action=No se puede resolver la acción Vuex {0}
vuex.inspection.message.unresolved.getter=No se puede resolver el getter de Vuex {0}
vuex.inspection.message.unresolved.mutation=No se puede resolver la mutación Vuex {0}
vuex.inspection.message.unresolved.namespace=Espacio de nombres del módulo Vuex desconocido: {0}
vuex.inspection.message.unresolved.state=No se puede resolver el estado Vuex {0}
vuex.inspection.message.unresolved.symbol=No se puede resolver el símbolo Vuex {0}