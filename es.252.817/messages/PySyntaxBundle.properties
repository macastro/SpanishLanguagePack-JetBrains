configurable.PyLanguageCodeStyleSettingsProvider.display.name=Python
formatter.after.hash=posterior a '#'
formatter.after.local.imports=Después de importaciones locales:
formatter.align.when.multiline=Alinear al ser multilínea
formatter.around.eq.in.keyword.argument=alrededor del = en argumento de palabra clave
formatter.around.eq.in.named.parameter=Alrededor = en parámetro nombrado
formatter.around.multiplicative.operators=Operadores multiplicativos (*, @, /, %)
formatter.around.power.operator=Operador de potencia (**)
formatter.around.top.level.classes.and.function=Alrededor de clases y funciones de nivel superior:
formatter.around.top.level.imports=Después de las importaciones de nivel superior:
formatter.before.backslash=Antes de ''
formatter.before.first.method=Antes del primer método:
formatter.before.hash=Antes de '#'
formatter.braces=Llaves
formatter.collections.and.comprehensions=Colecciones y Comprensiones
formatter.dictionary.literals=Literales de diccionario
formatter.force.new.line.after.colon=Forzar nueva línea después de los dos puntos
formatter.force.trailing.comma.if.multiline=Forzar coma final si es multilínea
formatter.from.import.statements="From" Declaraciones de importación
formatter.from.import.statements.force.comma.if.multline=Forzar coma al final si hay varias líneas
formatter.from.import.statements.force.parentheses.if.multiline=Forzar paréntesis si hay varias líneas
formatter.hang.closing.brackets=Cierre de corchetes colgantes
formatter.imports.panel.from.imports.always.split=Siempre dividir importaciones
formatter.imports.panel.from.imports.join.with.same.source=Unir importaciones que comparten el mismo origen
formatter.imports.panel.from.imports.leave.as.is=Dejar como está
formatter.imports.panel.from.imports.structure.title=Estructura de las importaciones "from"
formatter.imports.panel.optimize.imports=Optimizar importaciones
formatter.imports.panel.sort.by.type=Ordenar importaciones simples e importaciones "from" por separado dentro de un grupo
formatter.imports.panel.sort.case.insensitively=Ordenar sin distinción entre mayúsculas y minúsculas
formatter.imports.panel.sort.imports=Ordenar sentencias import
formatter.imports.panel.sort.names.in.from.imports=Ordenar los nombres importados en "from" importaciones
formatter.imports.panel.title=Importar
formatter.left.bracket=Corchete izquierdo
formatter.list.literals=Literales de lista
formatter.multi.clause.statements=Sentencias con múltiples cláusulas
formatter.panel.add.trailing.line.feed=Agrega un salto de línea al final del archivo
formatter.panel.dict.alignment.label=Alineación del dict:
formatter.panel.format.injected.fragments=Formatear fragmentos inyectados
formatter.panel.injected.fragments=Fragmentos inyectados:
formatter.panel.injected.fragments.use.continuation.indent=Añadir sangría
formatter.panel.use.continuation.indent.for.arguments=Argumentos de llamada de método
formatter.panel.use.continuation.indent.for.collection.literals=Colecciones y comprensiones
formatter.panel.use.continuation.indent.for.parameters=Parámetros de la declaración de métodos
formatter.panel.use.continuation.indent.for.title=Utilizar sangría de continuación para
formatter.parenthesized.tuples=Expresiones de tupla entre paréntesis
formatter.set.literals=Establecer literales
formatter.single.clause.statements=Sentencias de una sola cláusula
python.colors.braces.and.operators.braces=Llaves y operadores//Llaves
python.colors.braces.and.operators.brackets=Llaves y operadores//Corchetes
python.colors.braces.and.operators.comma=Llaves y operadores//Coma
python.colors.braces.and.operators.dot=Llaves y operadores//Punto
python.colors.braces.and.operators.operation.sign=Llaves y operadores//Signo de operación
python.colors.braces.and.operators.parentheses=Corchetes y operadores//Paréntesis
python.colors.built.in.name=Nombre incorporado
python.colors.class.definition=Definición de clase
python.colors.decorator=Decorador
python.colors.docstring.tag=Docstring//Etiqueta
python.colors.docstring.text=Docstring//Texto
python.colors.functions.function.call=Funciones//Llamada a función
python.colors.functions.function.definition=Funciones//Definición de función
python.colors.functions.method.call=Funciones//Llamada a método
python.colors.functions.nested.function.definition=Funciones//Definición de función anidada
python.colors.keyword=Palabra clave
python.colors.keyword.argument=Argumento de palabra clave
python.colors.line.comment=Comentario de línea
python.colors.local.variables=variables locales
python.colors.number=Número
python.colors.parameters.parameter=Parámetro//Parámetro
python.colors.parameters.self.parameter=Parámetros//parámetro 'self'
python.colors.python=Python
python.colors.special.names.definition=Nombres especiales//Definición
python.colors.special.names.usage=Nombres especiales//Uso
python.colors.string.binary.bytes=Cadena//Binario (bytes)
python.colors.string.escape.sequence.invalid=Cadena//Secuencia de escape//No válida
python.colors.string.escape.sequence.valid=Cadena//Secuencia de escape//Válida
python.colors.string.f.string.expression.braces=Cadena//f-string//Llaves de expresión
python.colors.string.f.string.format.specifier.start=Cadena//f-string//Inicio de especificador de formato
python.colors.string.f.string.type.conversion=Cadena//f-string//Conversión de tipo
python.colors.string.text.unicode=Cadena//Texto (unicode)
python.colors.type.annotation=Anotación de tipo
python.colors.type.parameters=Parámetros de tipo