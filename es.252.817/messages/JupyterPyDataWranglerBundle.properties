JupyterStringTransformationCondition.capitalize.first.character=Poner la primera letra en mayúscula
JupyterStringTransformationCondition.convert.to.lower.case=Convertir a minúsculas
JupyterStringTransformationCondition.convert.to.upper.case=Convertir a mayúsculas
RoundType.ceil=Redondear hacia arriba
RoundType.floor=Redondear a la baja
RoundType.round=Redondeo
SkewedTransformationType.logarithmic=Logarítmico
SkewedTransformationType.square.root=raíz cuadrada
action.DataWrangler.Jupyter.Cell.Export.description=Exportar el código generado a una celda
action.DataWrangler.Jupyter.Cell.Export.text=Nueva celda de DW en {0}
action.DataWrangler.Jupyter.Code.Export.description=Exportar código generado a una celda
action.DataWrangler.Jupyter.Code.Export.text=Nueva celda en {0}
action.DataWrangler.Jupyter.Notebook.Export.description=Exportar código generado al nuevo notebook
action.DataWrangler.Jupyter.Notebook.Export.text=Exportar código a nuevo Notebook
action.DataWrangler.Jupyter.Python.Script.Export.description=Exportar el código generado a un nuevo archivo de Python
action.DataWrangler.Jupyter.Python.Script.Export.text=Nuevo script de Python...
action.DataWrangler.Jupyter.Show.description=Editar tabla en el Data Wrangler
action.DataWrangler.Jupyter.Show.text=Editar en Data Wrangler
action.DataWrangler.TableFile.Show.description=Editar tabla en el Data Wrangler
action.DataWrangler.TableFile.Show.text=Editar en Data Wrangler
action.DataWranglerPyTablePanel.Show.description=Editar tabla en Data Wrangler
action.DataWranglerPyTablePanel.Show.text=Editar en Data Wrangler
action.JupyterAddDataWranglerCellAction.description=Insertar celda de Data Wrangler abajo
action.JupyterAddDataWranglerCellAction.text=Agregar celda Data Wrangler
action.JupyterConvertDataWranglerToCodeAction.description=Convertir celda a celda de código
action.JupyterConvertDataWranglerToCodeAction.text=_Convertir celda a código
action.JupyterDataWranglerInputNamePopup.text.before.variable=Transformar datos de la variable
action.JupyterDataWranglerOutputNamePopup.text.before.variable=Guardar en variable
data.wrangler.jupyter.cell.empty.action.link=Agregar transformaciones
data.wrangler.jupyter.cell.link.text=Editar en Data Wrangler
data.wrangler.jupyter.command.changeType.description=Modifica un tipo de columna
data.wrangler.jupyter.command.changeType.description.hint.text=Cambia el tipo de datos de la columna. Garantiza la representación de datos correcta para el análisis.
data.wrangler.jupyter.command.changeType.label=Cambiar el tipo de la columna {0} a {1}
data.wrangler.jupyter.command.changeType.name=Cambiar un tipo de columna
data.wrangler.jupyter.command.drop.description=Eliminar la columna {0} del dataframe
data.wrangler.jupyter.command.drop.description.full=Elimina la columna especificada del dataframe
data.wrangler.jupyter.command.drop.description.hint.text=Elimina permanentemente una columna de tu DataFrame. Úsalo cuando ciertas características ya no sean necesarias.
data.wrangler.jupyter.command.drop.label=Eliminar columna: {0}
data.wrangler.jupyter.command.drop.name=Eliminar columna
data.wrangler.jupyter.command.dropRows.description=Eliminar un rango de filas
data.wrangler.jupyter.command.dropRows.description.hint.text=Elimina filas específicas por su número de índice. Útil para eliminar observaciones no deseadas.
data.wrangler.jupyter.command.dropRows.label=Eliminar filas de {0} a {1}
data.wrangler.jupyter.command.dropRows.name=Eliminar filas
data.wrangler.jupyter.command.duplicates.description=Eliminar filas duplicadas en las columnas
data.wrangler.jupyter.command.duplicates.description.full=Eliminar filas duplicadas basándose en una columna especificada en un contexto Python de Jupyter-notebook
data.wrangler.jupyter.command.duplicates.description.hint.text=Elimina las filas que tienen valores idénticos en las columnas especificadas. Ayuda a limpiar los datos redundantes.
data.wrangler.jupyter.command.duplicates.label={0} en la columna {1}
data.wrangler.jupyter.command.duplicates.name=Eliminar duplicados
data.wrangler.jupyter.command.encoding.description=Codificación one-hot de la columna {0}
data.wrangler.jupyter.command.encoding.description.hint.text=Convierte las variables categóricas en columnas binarias. Esencial para preparar datos categóricos para el aprendizaje automático.
data.wrangler.jupyter.command.encoding.label=Codificación one-hot: {0}
data.wrangler.jupyter.command.encoding.name=Codificación one-hot de variables categóricas
data.wrangler.jupyter.command.fillMissing.description=Rellenar valores faltantes
data.wrangler.jupyter.command.fillMissing.description.hint.text=Reemplaza los valores ausentes con valores especificados. Ayuda a mantener la integridad de los datos sin eliminar filas.
data.wrangler.jupyter.command.fillMissing.label=Llenar valores faltantes en la columna {0} con {1}
data.wrangler.jupyter.command.fillMissing.name=Rellenar valores ausentes
data.wrangler.jupyter.command.filter.condition.equal=igual a
data.wrangler.jupyter.command.filter.condition.greater=mayor que
data.wrangler.jupyter.command.filter.condition.greaterOrEqual=mayor o igual que
data.wrangler.jupyter.command.filter.condition.less=menor que
data.wrangler.jupyter.command.filter.condition.lessOrEqual=menor o igual que
data.wrangler.jupyter.command.filter.condition.notEqual=distinto de
data.wrangler.jupyter.command.filter.description=Con condición: {0} {1}
data.wrangler.jupyter.command.filter.description.full=Este comando filtra filas en una columna seleccionada de una tabla en función de una condición y un valor especificados en un entorno de Jupyter Notebook usando Python
data.wrangler.jupyter.command.filter.description.hint.text=Filtra los datos en función de condiciones como igual a, mayor que o menor que. Ayuda a centrarse en subconjuntos de datos específicos.
data.wrangler.jupyter.command.filter.label={0} {1} columna
data.wrangler.jupyter.command.filter.name=Filtro
data.wrangler.jupyter.command.handleOutliersWithED.description=Eliminar valores atípicos según la distancia de cada punto de datos al centro (media o mediana)
data.wrangler.jupyter.command.handleOutliersWithED.description.hint.text=Encuentra valores atípicos usando la distancia euclidiana desde el centro. Útil para detectar patrones inusuales en los datos.
data.wrangler.jupyter.command.handleOutliersWithED.label=Eliminar valores atípicos con ED con umbral {0} en {1}
data.wrangler.jupyter.command.handleOutliersWithED.name=Detección de valores atípicos con distancia euclidiana
data.wrangler.jupyter.command.handleOutliersWithIQR.description=Eliminar valores atípicos usando el rango intercuartílico
data.wrangler.jupyter.command.handleOutliersWithIQR.description.hint.text=Detecta y elimina valores atípicos mediante el método del rango intercuartílico. Ayuda a identificar puntos de datos inusuales.
data.wrangler.jupyter.command.handleOutliersWithIQR.label=Eliminar valores atípicos con IQR con multiplicador {0} en {1}
data.wrangler.jupyter.command.handleOutliersWithIQR.name=Detección de valores atípicos con RIC
data.wrangler.jupyter.command.handleOutliersWithMAD.description=Eliminar valores atípicos usando la mediana
data.wrangler.jupyter.command.handleOutliersWithMAD.description.hint.text=Identifica valores atípicos mediante la desviación absoluta de la mediana. Es más robusto frente a valores extremos que la desviación estándar.
data.wrangler.jupyter.command.handleOutliersWithMAD.label=Eliminar valores atípicos con MAD con umbral {0} en {1}
data.wrangler.jupyter.command.handleOutliersWithMAD.name=Detección de valores atípicos con MAD
data.wrangler.jupyter.command.handleSkewed.description=Transformación que reduce la asimetría
data.wrangler.jupyter.command.handleSkewed.description.hint.text=Aplica transformaciones para reducir el sesgo de los datos. Ayuda a normalizar la distribución de los datos.
data.wrangler.jupyter.command.handleSkewed.label={0} transformación en la columna {1}
data.wrangler.jupyter.command.handleSkewed.name=Reducir asimetría
data.wrangler.jupyter.command.init.description=Crear una nueva variable DataFrame
data.wrangler.jupyter.command.init.label=Copiar variable Python DataFrame
data.wrangler.jupyter.command.init.name=Copiar dataframe
data.wrangler.jupyter.command.minMax.description=Normalización con Min-Max
data.wrangler.jupyter.command.minMax.description.hint.text=Escala los valores numéricos a un rango entre 0 y 1. Esencial para el preprocesamiento de aprendizaje automático.
data.wrangler.jupyter.command.minMax.label=Normalizar columna {0} con min={1} y max={2}
data.wrangler.jupyter.command.minMax.name=Escalado Min-Max
data.wrangler.jupyter.command.miss.description=Eliminar filas con datos faltantes en la columna
data.wrangler.jupyter.command.miss.description.full=Eliminar filas con valores faltantes en una columna especificada usando Jupyter y Python
data.wrangler.jupyter.command.miss.description.hint.text=Elimina las filas que contienen valores ausentes (NaN, None) en la columna especificada.
data.wrangler.jupyter.command.miss.label={0} en la columna {1}
data.wrangler.jupyter.command.miss.name=Eliminar valores faltantes
data.wrangler.jupyter.command.remove.description=Elimina las filas faltantes
data.wrangler.jupyter.command.remove.description.full=Elimina filas de una tabla en notebooks de Jupyter que contienen valores vacíos
data.wrangler.jupyter.command.remove.description.hint.text=Elimina todas las filas que contienen valores NaN. Es una forma rápida de obtener datos limpios y completos.
data.wrangler.jupyter.command.remove.label=Eliminar Na
data.wrangler.jupyter.command.remove.name=Eliminar filas con valores NaN
data.wrangler.jupyter.command.removeCols.description=Eliminar varias columnas
data.wrangler.jupyter.command.removeCols.description.hint.text=Elimina varias columnas a la vez. Agiliza el proceso de limpieza de características no utilizadas.
data.wrangler.jupyter.command.removeCols.label=Eliminar columnas
data.wrangler.jupyter.command.removeCols.name=Eliminar varias columnas
data.wrangler.jupyter.command.replace.description=De {0} a {1}
data.wrangler.jupyter.command.replace.description.full=Operación de reemplazo dinámico de cadena que se puede ajustar con parámetros como coincidencia exacta, distinción entre mayúsculas y minúsculas, y soporte de expresiones regulares, lo que permite operaciones avanzadas en un pandas DataFrame
data.wrangler.jupyter.command.replace.description.hint.text=Busca y reemplaza valores o patrones específicos en sus datos. Admite coincidencias exactas y expresiones regulares.
data.wrangler.jupyter.command.replace.label={0} en la columna {1}
data.wrangler.jupyter.command.replace.name=Buscar y reemplazar
data.wrangler.jupyter.command.round.description=Redondear, a {0} decimales, los valores de la columna {1}
data.wrangler.jupyter.command.round.description.hint.text=Redondea los valores numéricos a un número de decimales especificado. Mejora la legibilidad cuando es necesario.
data.wrangler.jupyter.command.round.label=Redondear valores numéricos en la columna {0}
data.wrangler.jupyter.command.round.name=Redondear numérico
data.wrangler.jupyter.command.split.description=Dividir columna por delimitador
data.wrangler.jupyter.command.split.description.hint.text=Divide una columna en varias columnas según un delimitador. Resulta útil para desglosar campos de texto complejos.
data.wrangler.jupyter.command.split.label=Dividir columna {0} por delimitador {1}
data.wrangler.jupyter.command.split.name=Dividir columna
data.wrangler.jupyter.command.standardization.description=Transformar los datos para que tengan una media de 0 y una desviación estándar de 1
data.wrangler.jupyter.command.standardization.description.hint.text=Normaliza los datos para que tengan media cero y varianza unitaria. Se utiliza en el análisis estadístico y el aprendizaje automático.
data.wrangler.jupyter.command.standardization.label=Normalización Z-Score para la columna {0}
data.wrangler.jupyter.command.standardization.name=Normalización Z
data.wrangler.jupyter.command.string.transform.description=En {0}, de {0} a {1}
data.wrangler.jupyter.command.string.transform.description.full=Transformaciones simples en cadenas de texto, como la modificación de mayúsculas y minúsculas.
data.wrangler.jupyter.command.string.transform.description.hint.text=Aplica transformaciones de texto como minúsculas, mayúsculas o mayúsculas iniciales. Estandariza el formato de los datos de texto.
data.wrangler.jupyter.command.string.transform.label=Transformar cadena desde: {0}
data.wrangler.jupyter.command.string.transform.name=Transformar columna con cadena
data.wrangler.py.local.file.init.description=Crear la nueva variable DataFrame
data.wrangler.py.local.file.init.label=Exportar datos de la tabla a la variable DataFrame
data.wrangler.py.local.file.init.name=Crear DataFrame
unknown.command.0=Comando desconocido {0}