class.both.ejb.and.interceptor=La clase ''{0}'' no debería definirse como EJB e interceptor simultáneamente
class.is.not.RMI.IIOP.compatible=La clase ''{0}'' no es compatible con RMI/IIOP
class.should.be.both.abstract.and.not.abstract=La clase ''{0}'' debería ser abstracta y no abstracta debido a conflictos EJB
class.should.extend=La clase ''{0}'' debería extender ''{1}''
class.should.implement=La clase ''{0}'' debería implementar ''{1}''
class.should.not.extend=La clase ''{0}'' no debería extender ''{1}''
class.should.not.implement=La clase ''{0}'' no debería implementar ''{1}''
cmp.field.getter.is.not.defined=El getter del campo CMP ''{0}'' no está definido
cmp.field.setter.is.not.defined=El setter del campo CMP ''{0}'' no está definido
cmp1.entity.beans.not.authorized.to.define.method=Los Entity Beans CMP 1.1 no están autorizados a definir el método ''{0}''
cmr.field.getter.is.not.defined=El getter del campo CMR ''{0}'' no está definido
cmr.field.setter.is.not.defined=El setter del campo CMR ''{0}'' no está definido
cmr.field.setter.should.have.parameter=El setter del campo CMR debería tener un parámetro de tipo ''{0}''
ejb.class.should.implement.interface.methods=La clase EJB Bean ''{0}'' debería implementar ''{1}''
ejb.class.should.not.be.exposed=La clase EJB ''{0}'' no debería exponerse a través de la interfaz ''{1}''
ejb.class.should.not.define.method=La clase EJB no debería definir el método ''{0}''
ejb.enterprise.java.beans=EJB\: Enterprise Java Beans
ejb.field.popup.tooltip.navigate.to.field.declaration=Navegar a la declaración del campo en XML
ejb.interfaces.should.not.be.exposed=La interfaz EJB ''{0}'' no debería exponerse a través de la interfaz endpoint ''{1}''
ejb.label.name=<ejb-name>(&N)\:
ejb.library.not.linked=La clase ''{0}'' no está disponible. El desarrollo EJB no es posible.
ejb.local.interfaces.should.not.be.exposed=La interfaz EJB local ''{0}'' no debería exponerse a través de la interfaz ''{1}''
ejb.reference.bad.beanname=EJB ''{0}'' referenciado por ''{1}''
ejb.reference.beaninterface.parameter.should.be.specified=Referencia EJB ambigua, se debe especificar 'beanName' o un 'beanInterface' más específico
ejb.reference.ejb.interface.not.found=EJB ''{0}'' no tiene la interfaz ''{1}''
ejb.reference.no.interface.view.wrong.type=La vista sin interfaz solo puede usarse para Session Beans
ejb.reference.no.interface.view.wrong.version=La vista sin interfaz no está disponible en la versión {0}
ejb.reference.not.found=No se encontró EJB ''{0}'' con interfaz de componente ''{1}''
ejb.references.popup.title.choose.ejb.class=Elegir clase EJB
ejb.references.popup.title.choose.query=Elegir consulta
ejb.references.popup.title.choose.resource=Elegir recurso
error.message.cmp.field.lowercase=Los nombres de campos CMP en Entity Beans CMP 2.x deben comenzar con minúscula
error.message.cmr.field.lowercase=Los nombres de campos CMR deben comenzar con minúscula
error.text.duplicate.query.method=Ya existe una consulta definida para este método
error.text.ejb.does.not.have.component.interface=EJB ''{0}'' no tiene la interfaz de componente ''{1}''
error.text.no.cmp.fields.for.bmp.bean=Un BMP Bean no debería tener campos CMP
error.text.no.cmp.version.for.bmp.bean=Un BMP Bean no debería tener versión CMP
error.text.no.primkey.for.bmp.bean=Se debe definir una clase de clave primaria para BMP Bean
error.text.no.primkeyfield.defined=Se debe definir un campo de clave primaria
error.text.no.primkeyfield.or.primkeyclass.defined=Se debe definir un campo de clave primaria o una clase de clave primaria para la entidad CMP
error.text.primary.key.field.type.should.be.equal.to.primary.key.class=El tipo del campo de clave primaria debe ser igual a la clase de clave primaria
field.should.have.modifier=El campo ''{0}'' debería ser {1}
field.should.not.have.modifier=El campo ''{0}'' no debería ser {1}
finder.recursive.panel.unknown=<desconocido>
home.interface.should.define.create.method=La interfaz ''{0}'' debería definir al menos un método create.
home.interface.should.define.findbyprimarykey.method=La interfaz ''{0}'' debería definir exactamente un método ''findByPrimaryKey''.
injected.property.invalid.type=El tipo de recurso inyectado ''{0}'' no es válido
injected.property.method.should.be.setter=El objetivo de inyección ''{0}'' debería ser un campo o método setter
inspection.name.ejb.class=Comprobaciones básicas de clase EJB
inspection.name.ejb.class.entity=Comprobaciones de clase Entity EJB
inspection.name.ejb.class.warnings=Advertencias de clase EJB
inspection.name.entity.home.interface=Comprobaciones de interfaz home de entidad
inspection.name.entity.interface=Comprobaciones de interfaz Entity EJB
inspection.name.environment.problems=Comprobaciones de entorno EJB
inspection.name.interceptor=Comprobaciones de interceptor EJB
inspection.name.interceptor.warnings=Comprobaciones de nombres de métodos interceptores
inspection.name.interface.method.signature=Comprobaciones de métodos de interfaz EJB
inspection.name.interface.signature=Comprobaciones de firma de interfaz EJB
inspection.name.prohibited.package.usage=Comprobaciones de uso de paquetes prohibidos
inspection.name.remote.requirements=Comprobaciones de requisitos de distribución RMI
inspection.name.session.home.interface=Comprobaciones de interfaz home de sesión
inspection.name.static.access=Comprobaciones de acceso static
inspection.name.this.reference=Comprobaciones de uso de 'this'
intention.family.ejb.reference.type.fix=Corregir interfaz de referencia EJB
intention.family.ejb.reference.type.fix.0=Generar interfaz de referencia EJB ''{0}''
intention.family.generate.interceptor.methods=Generar métodos interceptores
intention.family.remove.dependency.injection.settings=Eliminar configuración de inyección de dependencias
intention.family.remove.interceptor.method.metadata=Eliminar configuración de método interceptor
interceptor.class.has.no.annotated.methods=La clase listener ''{0}'' no tiene métodos listener
interceptor.method.name.should.be.standard=El método interceptor ''{0}'' debería llamarse ''{1}''
interface.should.extend=La interfaz ''{0}'' debería extender ''{1}''
interface.should.not.extend=La interfaz ''{0}'' no debería extender ''{1}''
method.name.conflict=El nombre del método ''{0}'' no debería entrar en conflicto con nombres definidos por el framework EJB
method.parameter.of.type.expected=El método ''{0}'' debería tener solo un parámetro de tipo ''{1}'' aquí
method.should.be.both.abstract.and.not.abstract=El método ''{0}'' debería ser abstract y no abstract debido a conflictos EJB
method.should.have.modifier=El método ''{0}'' debería ser {1}
method.should.not.be.final.or.static=Métodos final o static no están permitidos aquí
method.should.not.have.modifier=El método ''{0}'' no debería ser {1}
method.should.not.throw=El método ''{0}'' no debería lanzar ''{1}''
method.should.return=El método ''{0}'' debería retornar {1}
method.should.return.one.of=El método ''{0}'' debería retornar uno de {1}
method.should.throw=El método ''{0}'' debería lanzar ''{1}''
method.too.many.parameters=El método ''{0}'' debería tener solo {1} parámetros
more.than.one.dependency.injection.configured.for.field=Más de una inyección de dependencia configurada para el campo ''{0}''
more.than.one.dependency.injection.configured.for.method=Más de una inyección de dependencia configurada para el método ''{0}''
more.than.one.method.defined.for.interceptor.method.type=El método interceptor ''{0}'' ya está definido en la clase ''{1}''
prohibited.package.usage=El uso de ''{0}'' no está permitido en EJB
prohibited.static.field.access=EJB no debería escribir en el campo static ''{0}''
public.no.args.constructor.required=La clase EJB debe proporcionar un constructor público sin argumentos
service.endpoint.interface.cannot.have.fields=La interfaz endpoint EJB no puede tener declaraciones de constantes
session.home.should.not.define.finder.methods=No se permiten métodos finder en la interfaz home de Session Bean
several.ranged.variable.declarations.are.not.supported=No se admiten múltiples declaraciones de variables con rango. Use una declaración de miembro de colección (por ejemplo, 'IN(o.lineItems) l').
stateless.session.bean.class.should.define.exactly.one.ejbcreate.method=La clase Stateless Session Bean debería definir exactamente un método ejbCreate().
stateless.session.bean.home.interface.should.define.exactly.one.create.method=La interfaz home de Stateless Session Bean debería definir exactamente un método create().
static.fields.only.recommended=Solo se recomiendan campos static final
text.queries=Consultas
text.references=Referencias
text.remove.0=Eliminar ''{0}''
there.should.be.no.method.params.for.*.method=El método * no debería tener {0}
this.escaped.passed='this' no debería pasarse como argumento de método en EJB
this.escaped.returned='this' no debería retornarse como resultado de método en EJB
warning.text.abstract.schema.name.should.not.be.empty=El nombre de esquema abstracto no debería estar vacío
warning.text.cmp.field.list.for.cmp.bean.should.not.be.empty=La lista de campos CMP para Entity EJB CMP no debería estar vacía
warning.text.primary.key.class.is.not.rmi.iiop.compatible=La clase de clave primaria no es compatible con RMI/IIOP