associated.contexts.key=contextos asociados
associated.dependent.contexts.key=Usado desde
db.provider.generate.entity.by.table=Generar entidad de persistencia
db.provider.prompt.generate.entity.class.corresponding.to.table=Debes generar una clase de entidad persistente de Jakarta EE para la tabla de la base de datos '{{'{0}'}}'
directives.you.must.consider=Debes considerar
directives.you.must.use=Debe utilizar
domains.llm.function.controller.description=Devuelve el controlador por su nombre
domains.llm.function.entity.description=Devuelve la entidad por nombre
domains.llm.function.repository.description=Devuelve el repositorio por nombre
domains.llm.function.service.description=Devuelve un servicio por nombre
domains.llm.function.table.description=Regresa la tabla por su nombre
entity.provider.generate.database.table.init.script.from.entity.class=Generar secuencia de comandos de inicialización de tabla de base de datos
entity.provider.generate.repository.by.entity=Generar repositorio de datos de Spring
entity.provider.prompt.generate.init.sql.script=Hace falta generar un script SQL de inicialización para la entidad ''{0}'' con el tipo de ID ''{1}''
entity.provider.prompt.generate.spring.data.repository.for.entity=Se debe generar un repositorio Spring Data para la entidad '{{'{0}'}}' con el tipo de ID '{{'{1}'}}'. Este repositorio debe tener métodos para buscar por atributos de la entidad. Generar en el paquete '{{'{2}'}}'.
repositories.provider.generate.controller.by.repository=Generación de controlador Spring por repositorio
repositories.provider.generate.spring.service.from.repository=Generar Spring Service
repositories.provider.prompt.crud.spring.service.for.repository.0.class.and.1.as.entity=Se Debe generar un CRUD Spring Service para la clase de repositorio '{{'{0}'}}' y la entidad '{{'{1}'}}'
repositories.provider.prompt.generate.controller.for.repository=Debe generar el Controlador CRUD de Spring para la clase del repositorio '{{'{0}'}}' y la clase de entidad '{{'{1}'}}'. Generar en el paquete '{{'{2}'}}'.