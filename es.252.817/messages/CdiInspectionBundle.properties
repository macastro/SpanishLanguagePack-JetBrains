CdiDecoratorInspection.annotation.not.allowed.for.decorator=''{0}'' anotación no permitida para clase decoradora
CdiDecoratorInspection.cannot.find.decorates=El decorador debe tener un atributo de delegado anotado con @Delegate
CdiDecoratorInspection.class.cannot.be.final=La clase decorador no puede ser final
CdiDecoratorInspection.class.must.be.decorator=La clase Bean que no es un decorador no puede tener un punto de inyección anotado con @Delegate
CdiDecoratorInspection.decorates.type.must.implements.all.decorator.interfaces=El tipo delegado de un decorador debe implementar o extender cada tipo decorado. No compatible: {0}
CdiDecoratorInspection.delegate.injection.point.expected=@Delegate campo debe ser anotado con @Injected
CdiDecoratorInspection.injection.point.must.be.constructor.or.initializer=El método con el parámetro @Delegate debe ser un constructor o un método inicializador (@Injected)
CdiDecoratorInspection.too.many.decorates.in.decorator=El decorador debe tener exactamente un atributo delegate anotado con @Delegate
CdiDisposerMethodInspection.non.abstract.disposer.method=El método disposer no puede ser abstracto
CdiDisposerMethodInspection.too.many.dispose.parameters=El método no puede tener más de un parámetro anotado con @Disposes
CdiDomBeansInspection.add.annotation=Agregar @{0}
CdiDomBeansInspection.add.annotation.family=Añadir anotación
CdiDomBeansInspection.class.must.be=Se esperaba una clase {0} aquí
CdiDomBeansInspection.duplicated.alternative.classes=La clase ya está definida en <alternatives>
CdiDomBeansInspection.duplicated.stereotype.classes=El estereotipo ya está definido en <alternatives>
CdiInjectInspection.field.cannot.be.annotated.produces=El campo inyectado no se puede anotar con @Produces
CdiInjectInspection.field.should.not.be.initialized=El campo de inyección no debe inicializarse
CdiInjectInspection.injected.method.cannot.be.abstract=@Inject el método no puede ser abstracto
CdiInjectInspection.injected.method.cannot.be.static=Método @Inject no puede ser static
CdiInjectInspection.injected.with.disposes.parameters=@Inject no admite métodos con parámetros anotados con ''{0}''
CdiInjectInspection.more.than.one.injected.constructor=El Managed Bean solo debe tener un constructor anotado con @Inject
CdiInjectInspection.wrong.injected.method.annotation=@Inject no puede anotarse con ''{0}''
CdiInjectionInspection.field.cannot.be.final=La anotación @Inject no está permitida en campos finales
CdiInjectionInspection.field.cannot.be.static=La anotación @Inject no está permitida en campos estáticos
CdiInspectionPointsInspection.ambiguous.dependency=Dependencia ambigua: hay múltiples beans que coinciden con el punto de inyección
CdiInspectionPointsInspection.new.annotation.with.other.qualifiers=@New no se puede combinar con otros calificadores
CdiInspectionPointsInspection.unsatisfied.dependency=Dependencia no satisfecha: ningún bean coincide con el punto de inyección
CdiInterceptorInspection.no.binding.type=@Interceptor debe especificar al menos un enlace de interceptor
CdiManagedBeanInconsistencyInspection.no.appropriate.constructor=El bean administrado debe tener un constructor sin parámetros o un constructor anotado con @Inject
CdiManagedBeanInconsistencyInspection.not.concrete.class=El bean administrado debe ser concreta clase o @Decorator
CdiManagedBeanInconsistencyInspection.parameterized.class=Los Managed Beans no deben ser clases parametrizadas
CdiManagedBeanInconsistencyInspection.static.inner.class=El bean gestionado no debe ser una clase anidada no estática
CdiManagedBeanInconsistencyInspection.unallowed.ancestor=El bean gestionado no debe heredar ''{0}''
CdiNormalScopeInspection.public.field.in.normal.scoped.beans=El bean con un alcance no predeterminado no debe tener campos públicos
CdiObservesInspection.multiple.observes.parameters.not.allowed=El método debe tener solo un parámetro @Observes
CdiObservesInspection.observer.method.with.wrong.parameters=El método observador no puede tener parámetros anotados con ''{0}''
CdiObservesInspection.wrong.observe.method.annotation=El método Observador no puede anotarse con ''{0}''
CdiScopeInspection.session.stateless.bean.incorrect.scopes=El bean de sesión sin estado debe tener ámbito @Dependent
CdiScopeInspection.singleton.bean.incorrect.scopes=El bean Singleton debe ser @ApplicationScoped o @Dependent
CdiSpecializesInspection.specialized.class.has.duplicated.named.anno=La anotación @Named no se puede utilizar en clases especializadas
CdiSpecializesInspection.specialized.class.has.multiple.specializes=Más de una clase se especializa en la misma superclase: {0}
CdiSpecializesInspection.specialized.class.not.defined=El bean especializado debe ampliar otro bean
CdiSpecializesInspection.specializes.method.must.be.non.static=El método especializado no puede ser estático
CdiSpecializesInspection.specializes.method.must.be.producer=El método de especialización debe ser anotado con @Produces
CdiSpecializesInspection.specializes.method.must.override.producer.of.superclass=El método de especialización debe sobrescribir un método @Produces de la superclase directa
CdiStereotypeInspection.non.empty.named.annotations.not.allowed=No se permiten anotaciones @Named no vacías para estereotipos
CdiStereotypeInspection.not.allowed.for.stereotypes=No se permite para estereotipos
CdiStereotypeInspection.qualified.annotations.not.allowed=Las anotaciones de calificadores no están permitidas para estereotipos
CdiStereotypeRestrictionsInspection.different.scopes.in.stereotypes=Todos los estereotipos deben especificar el mismo ámbito O un ámbito debe ser especificado en el bean
CdiTypedAnnotationInspection.incorrect.bean.type=El tipo de Bean no corresponde a los tipos de la anotación @Typed.
CdiTypedAnnotationInspection.non.producer=Debe aplicarse a productores
CdiUnknownProducersForDisposerMethodInspection.cannot.find.corresponding.producers=No se encuentran los productores correspondientes
CdiUnproxyableBeanTypesInspection.injected.in.passivating.scoped.bean.must.be.serializable=No se puede inyectar un bean de tipo no serializable a un bean de un ámbito pasivante
CdiUnproxyableBeanTypesInspection.passivating.scoped.bean.must.be.serializable=El bean administrado que declara un ámbito pasivo debe ser java.io.Serializable
CdiUnproxyableBeanTypesInspection.unproxyable.type.detected=Bean con ámbito normal inyectado no es proxyable
alternative.bean.should.not.be.vetoed=El bean alternativo no debe ser vetado
inspection.name.alternative.errors=Bean de @Alternative vetada
inspection.name.ambiguous.dependencies=Punto de inyección con dependencias ambiguas
inspection.name.bean.normal.scope.inconsistency=El bean con alcance no predeterminado declara campos públicos
inspection.name.bean.scope.inconsistency=Ámbito de bean incorrecto
inspection.name.beans.configuration.errors=Configuraciones de bean incorrectas en beans.xml
inspection.name.decorator.errors=Clase @Decorator incorrecta
inspection.name.disposer.method.errors=Método disposed incorrecto
inspection.name.disposer.method.to.produces.errors=Parámetro del método del eliminador sin productores
inspection.name.injected.errors=Inyección de dependencia incorrecta
inspection.name.interceptor.errors=@Interceptor sin types de enlace
inspection.name.managed.bean.inconsistency.errors=Definición incorrecta del managed bean
inspection.name.observer.method.errors=Método observador incorrecto
inspection.name.specialize.errors=Uso incorrecto de @Specializes
inspection.name.stereotype.errors=Clase de anotación @Stereotype incorrecta
inspection.name.stereotype.restriction.errors=Colisión de ámbito en los estereotipos de Bean
inspection.name.typed.annotation=Uso incorrecto de la anotación @Typed
inspection.name.unproxyable.bean.types.inconsistency.errors=Uso de tipo bean incorrecto no apto para proxys
model.inspection.group.name=CDI (Contextos e inyección de dependencias)