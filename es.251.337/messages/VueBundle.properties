action.CreateVueSingleFileComp.description=Crea archivo de componente Vue
action.CreateVueSingleFileComp.text=Componente Vue
action.VueExtractComponentAction.description=Extrae la parte seleccionada de una plantilla Vue.js a un nuevo componente de archivo único, pasa los datos y métodos utilizados mediante props
action.VueExtractComponentAction.text=Extraer componente Vue
nuxt.support.notification.contents=Para mejores sugerencias de autocompletado, agregue @nuxt/types a las dependencias del proyecto
nuxt.support.notification.title=Soporte Nuxt.js
options.indent.label.top-level.caption=Indentar hijos de la etiqueta de nivel superior\:
options.indent.radio.block-specific.caption=Específico para el lenguaje en el bloque
options.indent.radio.block-specific.tooltip=Las indentaciones en los bloques <template>, <script> y <style> se establecerán según la configuración de estilo de código del lenguaje utilizado. Por ejemplo, <style lang\='scss'> usará las indentaciones establecidas en SCSS
options.indent.radio.uniform.caption=Igual en todo el archivo
vue.command.name.auto-import-external-symbols=Auto-importar símbolos externos
vue.command.name.auto-import-vue-components=Auto-importar componentes Vue
vue.configurable.service.auto=Auto
vue.configurable.service.auto.help=Seleccione esta opción para habilitar Vue Language Server (en modo Takeover) cuando sea posible. Las inspecciones internas del IDE seguirán utilizándose.
vue.configurable.service.disabled=Deshabilitado
vue.configurable.service.disabled.help=Seleccione esta opción para desactivar ambos servicios de lenguaje. Solo se utilizarán las inspecciones internas del IDE.
vue.configurable.service.group=Servicio Vue
vue.configurable.service.languageServerPackage=Vue Language Server\:
vue.configurable.service.ts=Servicio TypeScript clásico
vue.configurable.service.ts.help=Seleccione esta opción para habilitar forzosamente la integración clásica con el servicio TypeScript para archivos Vue. Debido a que no funciona para TypeScript versión 5.0 y posteriores, en tales casos se utilizarán las inspecciones internas del IDE.
vue.configurable.title=Vue
vue.create.single.file.component.action.dialog.title=Nuevo {0}
vue.create.single.file.component.action.name=Crear archivo de componente Vue ''{0}''
vue.create.single.file.component.template.class.api=Class API
vue.create.single.file.component.template.composition.api=Composition API
vue.create.single.file.component.template.options.api=Options API
vue.documentation.section.argument=Argumento\:
vue.documentation.section.default=Predeterminado\:
vue.documentation.section.library=Biblioteca\:
vue.documentation.section.pattern=Patrón\:
vue.documentation.section.required=Requerido
vue.documentation.section.slot.scope=Scope
vue.documentation.type.component=componente
vue.documentation.type.component.computed.property=propiedad computada de componente
vue.documentation.type.component.data.property=propiedad de datos de componente
vue.documentation.type.component.event=evento de componente
vue.documentation.type.component.method=método de componente
vue.documentation.type.component.property=propiedad de componente
vue.documentation.type.directive=directiva
vue.documentation.type.directive.argument=argumento de directiva
vue.documentation.type.directive.modifier=modificador de directiva
vue.documentation.type.filter=filtro
vue.documentation.type.functional.component=componente funcional
vue.documentation.type.slot=slot
vue.documentation.vue=Vue
vue.inspection.display.name.data.function=Función data
vue.inspection.display.name.deprecated.symbol=Símbolo obsoleto
vue.inspection.display.name.duplicate.tag=Etiqueta template/script duplicada
vue.inspection.display.name.missing.component.import=Falta importación de componente
vue.inspection.display.name.unrecognized.directive=Directiva no reconocida
vue.inspection.display.name.unrecognized.slot=Slot no reconocido
vue.inspection.group.name=Vue
vue.inspection.message.attribute.does.not.accept.value={0} no acepta ningún valor
vue.inspection.message.data.property.should.be.function=La propiedad data debe ser una función
vue.inspection.message.duplicate.tag=Etiqueta de nivel superior {0} duplicada
vue.inspection.message.filter.function.with.no.args=La función de filtro debe aceptar al menos un argumento
vue.inspection.message.filter.invalid.number.of.arguments=Número inválido de argumentos del filtro, se esperaba {0}
vue.inspection.message.missing.component.import=El componente {0} no está importado
vue.inspection.message.unresolved.filter=Filtro no resuelto {0}
vue.live.template.context.component=Componente Vue
vue.live.template.context.script.tag=Contenido de etiqueta script Vue
vue.live.template.context.template=Template Vue
vue.live.template.context.template.tag.element=Elemento de etiqueta template Vue
vue.live.template.context.top.level=Elemento de nivel superior Vue
vue.param.hints.show.names.for.filters=Argumentos del filtro
vue.parser.message.expected.comma.or.end.of.expression=Se esperaba coma o fin de expresión
vue.parser.message.expected.end.of.expression=Se esperaba fin de expresión
vue.parser.message.expected.identifier.or.string=Se esperaba identificador o string
vue.parser.message.expected.in.or.of=Se esperaba 'in' u 'of'
vue.parser.message.expected.lparen.pipe.or.end.of.expression=Se esperaba (, | o fin de expresión
vue.parser.message.expected.pipe.or.end.of.expression=Se esperaba | o fin de expresión
vue.parser.message.generic.component.parameters.only.with.typescript=Los parámetros de componentes genéricos solo son compatibles con TypeScript.
vue.parser.message.statements.not.allowed=No se permiten statements en expresiones Vue
vue.parser.message.unterminated.interpolation=Interpolación sin terminar
vue.progress.title.auto-importing-external-symbols-on-paste=Importando automáticamente símbolos externos al pegar...
vue.progress.title.auto-importing-vue-components-on-paste=Importando automáticamente componentes Vue al pegar...
vue.project.generator.description=Crear un nuevo proyecto <a href\='https\://vuejs.org'>Vue.js</a> usando <a href\='https\://cli.vuejs.org'>Vue CLI</a>.
vue.project.generator.name=Vue.js
vue.project.generator.presentable.package.name=Vue CLI(&C)
vue.project.generator.use.default.project.setup=Usar la configuración predeterminada del proyecto(&D)
vue.quickfix.import.component.family=Importar componente
vue.quickfix.import.component.name=Importar componente ''{0}''
vue.quickfix.wrap.with.function.family=Envolver objeto
vue.quickfix.wrap.with.function.text=Envolver objeto data en función
vue.search.scope.template.name=template
vue.service.name=Servidor de Lenguaje Vue
vue.service.prefix=Vue
vue.symbol.presentation=Vue {0} {1}
vue.template.intention.extract.component.command.name=Extraer Componente Vue
vue.template.intention.extract.component.continue=Continuar editando
vue.template.intention.extract.component.error.component.exists=El componente {0} ya existe
vue.template.intention.extract.component.error.component.name=Nombre de componente inválido\: {0}
vue.template.intention.extract.component.error.file.exists=El archivo {0} ya existe
vue.template.intention.extract.component.family.name=Extraer componente Vue
vue.template.intention.import.component.family.name=Importar componente localmente
vue.template.intention.v-model.expand.command.name=Expandir v-model
vue.template.intention.v-model.expand.family.name=Expandir v-model
vuex.inspection.message.unresolved.action=No se puede resolver la action Vuex {0}
vuex.inspection.message.unresolved.getter=No se puede resolver el getter Vuex {0}
vuex.inspection.message.unresolved.mutation=No se puede resolver la mutation Vuex {0}
vuex.inspection.message.unresolved.namespace=Namespace de módulo Vuex desconocido {0}
vuex.inspection.message.unresolved.state=No se puede resolver el state Vuex {0}
vuex.inspection.message.unresolved.symbol=No se puede resolver el símbolo Vuex {0}