spring.cloud.stream.gutter.bound.message.handlers.empty.title=No se han encontrado controladores de mensajes enlazados
spring.cloud.stream.gutter.bound.message.handlers.goto.group=Mensajes encuadernados del gestor
spring.cloud.stream.gutter.bound.message.handlers.title=Seleccionar el controlador de mensajes
spring.cloud.stream.gutter.bound.message.handlers.tooltip=Navegar hacia el manejador de mensajes enlazado
spring.cloud.stream.gutter.name=Encuadernaciones de Spring Cloud Stream
spring.cloud.stream.inconsistency.inspection.ambiguous.method.arguments=Argumentos de método ambiguos
spring.cloud.stream.inconsistency.inspection.condition.on.declarative.method=No es posible establecer una condición al usar @StreamListener en modo declarativo
spring.cloud.stream.inconsistency.inspection.condition.on.non.void.method=No se puede establecer una condición para métodos que devuelven un valor
spring.cloud.stream.inconsistency.inspection.input.at.stream.listener=Un método anotado con @StreamListener/@StreamEmitter no puede estar anotado con @Input
spring.cloud.stream.inconsistency.inspection.invalid.declarative.params=Un método anotado con @StreamListener solo puede usar anotaciones @Input o @Output en modo declarativo y para parámetros que son objetivos de enlace o convertibles desde objetivos de enlace.
spring.cloud.stream.inconsistency.inspection.invalid.input.value.with.output.method.param=No se pueden establecer los siguientes parámetros @StreamListener value y @Output annotaton en el método
spring.cloud.stream.inconsistency.inspection.invalid.input.values=No se pueden establecer el valor de @StreamListener y la anotación @Input como parámetro del método
spring.cloud.stream.inconsistency.inspection.invalid.output.values=No se puede establecer tanto el valor de la anotación del método (@Output/@SendTo) como la anotación @Output como parámetro de método
spring.cloud.stream.inconsistency.inspection.multiple.destinations=No se pueden especificar destinos múltiples
spring.cloud.stream.inconsistency.inspection.multiple.outputs=Un método anotado con @StreamListener que tiene un tipo de retorno debe tener un objetivo de salida especificado solamente
spring.cloud.stream.inconsistency.inspection.name=Error en el método manejador de Stream
spring.cloud.stream.inconsistency.inspection.no.input.destination=No se ha configurado ningún destino de entrada
spring.cloud.stream.inconsistency.inspection.no.output.destination=No se ha configurado ningún destino de salida
spring.cloud.stream.inconsistency.inspection.no.output.on.non.void.method=Se debe especificar un canal de salida para un método que puede retornar un valor
spring.cloud.stream.inconsistency.inspection.no.output.on.void.method.param=Un método anotado con @StreamEmitter y sin tipo de retorno vacío requiere que el parámetro de método tenga @Output
spring.cloud.stream.inconsistency.inspection.no.output.value=Se debe especificar al menos un output
spring.cloud.stream.inconsistency.inspection.output.on.void.method=No se puede especificar un canal de salida para un método que no devuelve un valor
spring.cloud.stream.inspection.group.name=Spring Cloud Stream
spring.cloud.stream.message.channel.inspection.bean.must.be.message.channel=El Bean debe ser del tipo 'org.springframework.messaging.MessageChannel'
spring.cloud.stream.message.channel.inspection.cannot.find.channel=No se puede encontrar el canal
spring.cloud.stream.message.channel.inspection.name=Canal de mensajes sin resolver