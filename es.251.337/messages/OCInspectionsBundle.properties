checkbox.simplify.condition.true=Simplificar "condition \=\= true"
checkbox.simplify.condition1.true.condition2=Simplificar "condition1 ? true \: condition2"
checkbox.simplify.if.condition1.return.true.return.condition2=Simplificar "if (condition1) return true; return condition2;"
checkbox.simplify.if.true.while.false=Simplificar "if (true)", "while (false)"
clang.based.inspection.api.notes.issue=Problema de notas de API
clang.based.inspection.arc.and.properties=ARC y @properties
clang.based.inspection.concepts.issue=Problema de conceptos
clang.based.inspection.coroutines.issue=Problema de corrutinas
clang.based.inspection.dependency.directive.source.minimization.issue=Problema de minimización de fuente de directiva de dependencia
clang.based.inspection.lexical.or.preprocessor.issue=Problema léxico o de preprocesador
clang.based.inspection.openmp.issue=Problema de OpenMP
clang.based.inspection.vtable.issue=Problema de ABI de VTable
configurable.naming.convention.header.guard.style=Estilo de protección de encabezado\:
configurable.naming.convention.several.rules.hint=Si hay varias reglas para un tipo de entidad, se usará la última de la lista.
dfa.batch.action.subject=Análisis
dfa.batch.action.title=Analizar flujo de datos global
dfa.message.preparing=Preparando {0}...
inspection.accessors.were.overridden=Accessors sobrescritos
inspection.arc.issues=Problemas de ARC
inspection.array.index.out.of.bounds.display.name=Índice de array fuera de límites
inspection.assign.in.condition='\=' en expresión condicional
inspection.assign.in.condition.with.self='\=' en expresión condicional con 'self'
inspection.clangd.general=Errores y advertencias de Clangd
inspection.constant.conditions=Condición constante
inspection.constant.function.result.display.name=Resultado de función constante
inspection.constant.parameter.display.name=Parámetro constante
inspection.context.sensitive.analysis=Análisis sensible al contexto
inspection.dangling.pointer.display.name=Puntero colgante
inspection.deprecated.api=Uso de API obsoleta
inspection.dfa.group.display.name=Análisis de flujo de datos
inspection.display.name.simplifiable.statement=Sentencia simplificable
inspection.endless.loop.display.name=Bucle infinito
inspection.functions.group.display.name=Funciones
inspection.global.unused.analysis=Análisis global de elementos no utilizados
inspection.group.name.general=General
inspection.hides.class.scope=Ámbito de clase oculto
inspection.hiding.non.virtual.function=Ocultando función no virtual
inspection.inconsistent.naming=Nomenclatura inconsistente
inspection.infinite.recursion.display.name=Recursión infinita
inspection.kr.unspecified.parameters=Pasando argumentos a función con sintaxis de parámetros no especificados K&R
inspection.local.value.escapes.scope.display.name=Valor local escapa del ámbito
inspection.loop.condition.is.not.updated=La condición del bucle no se actualiza dentro del bucle
inspection.memory.leak.display.name=Fuga de memoria
inspection.message.address.local.object.may.escape.function=La dirección del objeto temporal local puede escapar de la función
inspection.message.address.local.variable.may.escape.function=La dirección del {0} puede escapar de la función
inspection.message.allocated.memory.leaked=La memoria asignada tiene fugas
inspection.message.calls.unreachable=Todas las llamadas a {0} son inalcanzables
inspection.message.condition.always.false=La condición es siempre false
inspection.message.condition.always.false.when.reached=La condición es siempre false cuando se alcanza
inspection.message.condition.always.true=La condición es siempre true
inspection.message.condition.always.true.when.reached=La condición es siempre true cuando se alcanza
inspection.message.endless.loop=Bucle infinito
inspection.message.error.after.macro.substitution=Error después de sustitución de macro\: 
inspection.message.expression.can.be.simplified.to=La expresión puede simplificarse a ''{0}''
inspection.message.file.too.complex.to.perform.data.flow.analysis=El archivo es demasiado complejo para realizar el análisis de flujo de datos
inspection.message.hides.non.virtual.function={0} oculta una función no virtual de {1}
inspection.message.if.statement.has.identical.branches=La sentencia 'if' tiene ramas idénticas
inspection.message.infinite.recursion=Recursión infinita
inspection.message.invalid.suffix.on.raw.string=Sufijo inválido en cadena raw
inspection.message.is.never.used={0} nunca se usa
inspection.message.may.point.to.deallocated.memory={0} puede apuntar a memoria desasignada
inspection.message.may.point.to.invalidated.memory={0} puede apuntar a memoria invalidada
inspection.message.may.point.to.out.of.scope.memory={0} puede apuntar a memoria fuera de alcance
inspection.message.memory.leak=Fuga de memoria asignada en la función ''{0}''
inspection.message.modern.syntax.can.be.used=Se puede usar sintaxis moderna
inspection.message.never.used={0}{1, choice, 0\# está asignado pero nunca se accede|1\# nunca se usa}
inspection.message.non.localized.string=Cadena no localizada\: {0}
inspection.message.not.initialized.field.usage=Uso de {0} no inicializado
inspection.message.not.released.in.dealloc.method={0} no se libera en el método ''dealloc''
inspection.message.not.updated.in.loop={0} usado en la condición del bucle no se actualiza en el bucle
inspection.message.only.assigned.but.never.accessed={0} solo está asignado pero nunca se accede
inspection.message.reference.may.be.choice.null=El puntero puede ser null
inspection.message.statement.can.be.simplified=La sentencia puede simplificarse
inspection.message.unreachable.code=Código inalcanzable
inspection.message.unterminated.string.literal=Literal de cadena sin terminar
inspection.message.value.never.used=El valor nunca se usa
inspection.message.was.not.declared.in={0} no fue declarado en {1}
inspection.method.is.later.in.the.scope=La declaración del método está más adelante en el ámbito
inspection.missing.return.display.name=Falta return
inspection.modern.syntax=Se puede usar sintaxis moderna
inspection.name.unconstrained.variable.type=Tipo de variable sin restricciones
inspection.naming.convention.edit.settings.link=Editar configuración de estilo de código
inspection.naming.convention.rename.fix=Renombrar a {0}
inspection.naming.convention.rename.header.guard.fix=Renombrar protección de encabezado a {0}
inspection.non.localized.string=Cadena no localizada
inspection.not.implemented.functions.display.name=Funciones no implementadas
inspection.not.implements.protocol=Protocolo no implementado
inspection.not.in.hierarchy.message=No está en un mensaje de jerarquía
inspection.not.initialized.field.display.name=Campo no inicializado
inspection.not.initialized.variable.display.name=Variable no inicializada
inspection.not.released.var=Release debe estar en 'dealloc' o en sus llamadas
inspection.null.dereference.display.name=Dereferencia Null
inspection.replace.enable_if.with.require=Reemplazar enable_if con requirement
inspection.sending.dealloc='dealloc' enviado directamente
inspection.simplifiable.statement=Sentencia simplificable
inspection.simplify=Simplificar {0}
inspection.simplify.condition=Simplificar "condition \=\= true"
inspection.simplify.ternary=Simplificar "condition1 ? true \: condition2"
inspection.unreachable.calls.display.name=Llamadas inalcanzables a función
inspection.unreachable.code.display.name=Código inalcanzable
inspection.unused.class.display.name=Clase No Utilizada
inspection.unused.concept.display.name=Concepto No Utilizado
inspection.unused.directive.display.name=Directiva Include No Utilizada
inspection.unused.expression.result.display.name=Resultado de Expresión No Utilizado
inspection.unused.global.declaration.display.name=Declaración Global No Utilizada
inspection.unused.import.statement.display.name=Sentencia Import No Utilizada
inspection.unused.include.directive.completely.not.directly=Detectar no usado directamente
inspection.unused.include.directive.completely.not.required=Detectar no requerido
inspection.unused.include.directive.completely.unused=Detectar completamente sin usar
inspection.unused.instance.variable.display.name=Variable de Instancia No Utilizada
inspection.unused.local.variable.display.name=Variable Local No Utilizada
inspection.unused.localization.display.name=Localización No Utilizada
inspection.unused.macro.display.name=Macro No Utilizada
inspection.unused.method.display.name=Método No Utilizado
inspection.unused.parameter.display.name=Parámetro No Utilizado
inspection.unused.property.display.name=Propiedad No Utilizada
inspection.unused.struct.display.name=Struct No Utilizada
inspection.unused.template.parameter.display.name=Parámetro de Template No Utilizado
inspection.unused.type.alias.display.name=Alias de Tipo No Utilizado
inspection.unused.value.display.name=Valor No Utilizado
inspection.usage.of.api.unavailable=Usando API no disponible
intention.dialog.message.change.type.as.well=¿Desea cambiar también el tipo de {0}?
intention.dialog.message.existing.default.values.removed=Los valores por defecto existentes para los parámetros de {0} serán eliminados. ¿Continuar?
intention.family.name.add.bridge.cast=Agregar bridge cast
intention.family.name.add.call.to.super.dealloc=Agregar una llamada a [super dealloc]
intention.family.name.add.return.statement=Agregar sentencia return
intention.family.name.change.to.nil=Cambiar a 'nil'
intention.family.name.change.type.to.auto=Cambiar tipo ''{0}'' a ''auto''
intention.family.name.convert.literal.type=Convertir tipo literal\: agregar '@'
intention.family.name.delete.method=Eliminar método
intention.family.name.extract.assignment=Extraer asignación
intention.family.name.inline.parameter=Inlinear parámetro
intention.family.name.leave.initializer={0} y mantener inicializador
intention.family.name.make.default=Hacer {0} por defecto
intention.family.name.remove=Eliminar {0}
intention.family.name.remove.declaration=Eliminar {1, choice, 0\#{0}|1\#declaración de|2\#nombre de}
intention.family.name.remove.directive=Eliminar directiva
intention.family.name.remove.extra.initializers=Eliminar inicializadores extra
intention.family.name.remove.initializer=Eliminar inicializador
intention.family.name.remove.statement=Eliminar sentencia
intention.family.name.safe.delete=Eliminación segura
intention.family.name.send.message=Enviar mensaje ''{0}''
intention.family.name.simplify=Simplificar {0}
intention.family.name.simplify.choice=Simplificar {1, choice, 0\#expresión|1\#{0}}
intention.family.name.simplify.condition=Simplificar condición a ''{0}''
intention.family.name.simplify.expression=Simplificar expresión
intention.family.name.use.enum.constant=Usar constante enum
intention.import.command.name=Importar {0}
intention.import.popup.title=Símbolo a Importar
intention.name.add=Agregar "{0}"
intention.name.add.call.to.base.constructor=Agregar llamada al constructor base de ''{0}''
intention.name.add.constructor.initializer=Agregar inicializador de constructor para {0}
intention.name.add.last.parameter=Agregar último parámetro ''{0}'' a {1}
intention.name.add.parameters=Agregar parámetros a {0}
intention.name.add.suffix=Agregar sufijo
intention.name.add.type.modifier=Hacer {0} {1}
intention.name.call=Llamar {0}
intention.name.cast.expression.to=Convertir expresión a ''{0}''
intention.name.change.format.specifier=Cambiar especificador de formato a ''{0}''
intention.name.change.signature=Cambiar firma de {0} a ''{1}''
intention.name.change.superclass=Cambiar superclase de {0} de ''{1}'' a ''{2}''
intention.name.change.type=Cambiar tipo {0, choice, 0\#de retorno |1\#}de {1} a ''{2}''{3}
intention.name.change.visibility=Hacer {0} {1}
intention.name.choice.enable.disable={0, choice, 0\#Habilitar ''|1\#Deshabilitar ''}{1}'' para {2}
intention.name.choice.superclass={1, choice, 0\#{0} |1\#}superclase de {2}
intention.name.class=clase
intention.name.cpp.class=Clase C++
intention.name.create.new=Crear nuevo {0}
intention.name.create.new.category=Crear nueva categoría en {0} con {1}
intention.name.delete=Eliminar {0}
intention.name.import=Importar {0}
intention.name.import.from=desde {0}
intention.name.import.which={0, choice, 0\#cuál|1\#símbolo} ''{1}''
intention.name.initialize=Inicializar {0}
intention.name.inline=Inlinear {0}
intention.name.leave.initializer={0} y mantener inicializador
intention.name.make=Hacer {0} {1}
intention.name.make.class.method.instance.method=Hacer ''{0}{1, choice, 0\#'' método de clase|1\#'' método de instancia}
intention.name.make.function.const=Hacer {0}{1, choice, 0\# const|1\# no-const}
intention.name.make.function.virtual=Hacer {0}\:\:{1}{2, choice, 0\# virtual puro|1\# virtual}
intention.name.make.function.volatile=Hacer {0}{1, choice, 0\# volatile|1\# no-volatile}
intention.name.move.declaration=Mover declaración de {0}{1}
intention.name.predeclare.protocol.class=Predeclarar {0, choice, 0\#protocolo ''|1\#clase ''|2\#struct ''}{1}''
intention.name.remove=Eliminar {0}
intention.name.remove.last.parameter=Eliminar último parámetro ''{0}'' de {1}
intention.name.remove.type.modifier=Hacer {0} no-{1}
intention.name.rename=Renombrar {0}
intention.name.rename.reference=Renombrar Referencia
intention.name.reuse.previous.declaration=Reutilizar la declaración anterior de {0}
intention.name.safe.delete=Eliminación segura de {0}
intention.name.set.superclass=Establecer ''{0}'' como {1}
intention.name.simplify=Simplificar {0}
intention.name.static=static
intention.name.use.constant=Usar constante ''{0}''
intention.suffix.called.from=\ cuando se llama desde la función ''{0}''
intention.suffix.called.from.global.scope=\ cuando se llama desde el ámbito global
intentions.add.braces.statement=Agregar llaves a la sentencia ''{0}''
intentions.add.braces.statement.family=Agregar llaves a la sentencia
intentions.add.constructor.initializer.for.field=Agregar inicializador de constructor para el campo
intentions.add.initializer=Agregar inicializadores
intentions.add.modifier=Agregar ''{0}''
intentions.add.parameter.initWith=Agregar como parámetro a 'initWith...'
intentions.add.parameters.to.constructor=Agregar ''{0}'' como parámetro al constructor
intentions.add.parameters.to.constructor.family=Agregar campo como parámetro al constructor
intentions.add.super.constructor.call=Agregar llamadas faltantes al constructor base
intentions.add.super.protocol.by.class=Adoptar protocolo por la clase
intentions.add.super.protocol.by.private.category=Adoptar protocolo por la categoría privada
intentions.cast.expression=Convertir expresión
intentions.change.function.const.action=Cambiar calificador const
intentions.change.function.signature=Cambiar firma de función
intentions.change.function.volatile.action=Cambiar calificador volatile
intentions.change.gcc.attribute.action=Cambiar atributo ''{0}''
intentions.change.method.signature.add.parameters=Agregar parámetros
intentions.change.property.attribute.action=Cambiar atributo de propiedad
intentions.change.superclass=Cambiar superclase
intentions.change.type=Cambiar tipo
intentions.change.type.capitalized=Cambiar Tipo
intentions.change.visibility=Cambiar visibilidad
intentions.check.raw.string=Verificar la cadena raw
intentions.convert.id.to.instance=Reemplazar tipo de retorno 'id' por 'instancetype'
intentions.convert.objc.literal=Cambiar a literal de Objective-C
intentions.convert.to.instance.variable=Convertir a variable de instancia
intentions.convert.to.property=Convertir a propiedad
intentions.convert.type=Convertir tipo
intentions.create.implementation=Crear implementación de {0}
intentions.create.interface=Crear interfaz para {0}
intentions.create.matching.constructor=Crear constructor que coincida con la(s) clase(s) base
intentions.create.matching.constructor.in=Crear constructor por defecto en {0}
intentions.create.missing.default.switch.case=Crear case default faltante
intentions.create.missing.switch.cases=Crear cases de switch faltantes
intentions.create.new.constructor=Crear nuevo constructor ''{0}()''
intentions.create.new.matching.constructor=Crear nuevo constructor en {0} que coincida con la(s) clase(s) base
intentions.deMorgan.law=Ley de DeMorgan
intentions.declare.member.in=Declarar en\: 
intentions.declare.method.in=Declarar método en {0}
intentions.declare.method.in.interface=Declarar método en la interfaz
intentions.declare.method.in.private.category=Declarar método en categoría privada
intentions.declare.property.as.readwrite=Declarar propiedad como 'readwrite' en categoría privada
intentions.extract.category=Extraer categoría de esta clase
intentions.extract.if=Extraer 'if'
intentions.extract.if.with.text=Extraer ''if ({0})''
intentions.extract.private.category=Extraer categoría privada de esta clase
intentions.extract.protocol=Extraer protocolo de esta clase
intentions.extract.super.class=Extraer superclase
intentions.extract.super.protocol=Extraer Protocolo Superior
intentions.flip.binary.operation=Invertir operación binaria
intentions.flip.operator=Invertir {0}
intentions.flip.operator.to=Invertir {0} a {1}
intentions.generate.property=Generar propiedad
intentions.group=C y C++
intentions.group.control.flow=C y C++/Control de flujo
intentions.group.declarations=C y C++/Declaraciones
intentions.group.definition=C y C++/Definiciones
intentions.group.objc=Objective-C
intentions.group.operators=C y C++/Operadores
intentions.implement.accessor.methods=Implementar métodos accesores
intentions.implement.accessor.methods.for=Implementar métodos accesores para {0}
intentions.implement.method=Implementar {0}
intentions.implement.required.methods=Implementar métodos requeridos de la interfaz ''{0}''
intentions.import.predeclare.symbol=Importar/predeclarar símbolo
intentions.insert.cast.use.modern=Usar operadores de cast de C++
intentions.introduce.typedef=Introducir typedef
intentions.introduce.typedef.for.type=Introducir typedef para el tipo {0}
intentions.invert.if.condition=Invertir condición 'if'
intentions.merge.if.else=Fusionar 'if else'
intentions.merge.nested.ifs=Fusionar 'if's anidados
intentions.move.instance.variables=Mover variables de instancia a la implementación
intentions.move.to.interface=Mover a interfaz
intentions.move.to.private.category=Mover a categoría privada
intentions.predeclare.function=Predeclarar {0}
intentions.release.variables=Liberar variables
intentions.remove.braces.statement=Eliminar llaves de la declaración ''{0}''
intentions.remove.braces.statement.family=Eliminar llaves de la declaración
intentions.remove.private.category.message=¿Eliminar categoría privada vacía?
intentions.remove.private.category.title=Eliminar Categoría Privada
intentions.remove.subj=Eliminar ''{0}''
intentions.remove.suppression=Eliminar supresión
intentions.remove.unnecessary.parentheses=Eliminar paréntesis innecesarios
intentions.rename.reference=Renombrar referencia
intentions.rename.symbol=Renombrar símbolo
intentions.replace.and.with.or=Reemplazar '\\&\\&' con '||'
intentions.replace.if.else.with.ternary=Reemplazar 'if else' con '?\:'
intentions.replace.or.with.and=Reemplazar '||' con '\\&\\&'
intentions.replace.ternary.with.if.else=Reemplazar '?\:' con 'if else'
intentions.replace.type.with.auto=Reemplazar el tipo con 'auto'
intentions.reuse.declaration=Reutilizar declaración
intentions.split.declaration=Dividir en declaración y asignación
intentions.split.function=Dividir función en declaración y definición
intentions.split.function.progress.text=Determinando ubicación de la definición…
intentions.split.into.separate.declarations=Dividir en declaraciones separadas
intentions.suppress.all.for.file=Suprimir todos los diagnósticos {0} para el archivo
intentions.suppress.for=Suprimir para {0}
intentions.suppress.for.file=Suprimir para archivo
intentions.suppress.for.method=Suprimir para método/función
intentions.suppress.for.statement=Suprimir para declaración
intentions.suppress.option.for=Suprimir "{0}" para {1}
intentions.surround.with.if.responds=Envolver con "if ([ respondsToSelector\: ])"
intentions.switch.property.dot.method=Alternar entre notación '.' y método
intentions.switch.to.dot.notation=Cambiar a notación '.'
intentions.switch.to.getter.notation=Cambiar a notación de método getter
intentions.switch.to.setter.notation=Cambiar a notación de método setter
intentions.synthesize.property=Sintetizar propiedad
intentions.wrap.with.stringFormat=Envolver con 'stringWithFormat'
no.suggestions.for.members=No hay sugerencias para los miembros de {0}
no.suggestions.for.properties.of.class=No hay sugerencias para las propiedades de la clase {0}
progress.text.evaluating.unused.symbols=Evaluando símbolos sin usar
quick.fix.add_return_statement=Agregar declaración return
quick.fix.append.nil.argument=Agregar argumento "nil"
quick.fix.change.format.specifier=Cambiar especificador de formato
quick.fix.change.pure.specifier=Cambiar especificador pure a '\= 0'
quick.fix.copy.superclass.from.interface=Copiar superclase desde interface
quick.fix.copy.superclass.to.interface=Copiar superclase a interface
quick.fix.insert.keyword=Insertar ''{0}''
quick.fix.make_default=Hacer {0} por defecto
quick.fix.optimize.imports=Optimizar imports
quick.fix.optimize.includes=Optimizar includes
quick.fix.place.parentheses.around=Colocar paréntesis alrededor
quick.fix.remove.accessor=Eliminar accessor
quick.fix.remove.arguments=Eliminar argumento(s)
quick.fix.remove.attribute=Eliminar atributo
quick.fix.remove.declaration=Eliminar declaración
quick.fix.remove.extra.declarators=Eliminar declaradores extra
quick.fix.remove.from.base.classes.list=Eliminar ''{0}'' de la lista de clases base
quick.fix.remove.initializer=Eliminar inicializador
quick.fix.remove.instance.variable.list=Eliminar lista de variables de instancia
quick.fix.remove.method.body=Eliminar cuerpo del método
quick.fix.remove.property=Eliminar propiedad
quick.fix.remove.protocols.list=Eliminar lista de protocolos
quick.fix.remove.pure.specifier=Eliminar especificador pure
quick.fix.remove.redundant.cast=Eliminar cast redundante
quick.fix.remove.statement=Eliminar declaración
quick.fix.remove.superclass=Eliminar superclase
quick.fix.remove.superclass.reference=Eliminar referencia a superclase
quick.fix.remove.synthesize.dynamic.statement=Eliminar declaración '@synthesize'/'@dynamic'
quick.fix.remove.synthesize.statement=Eliminar declaración '@synthesize'
quick.fix.remove.useless.import=Eliminar import innecesario
quick.fix.remove.useless.include=Eliminar include innecesario
quick.fix.remove.user.defined.getter.method=Eliminar método getter definido por el usuario
quick.fix.remove.user.defined.setter.method=Eliminar método setter definido por el usuario
quick.fix.send.release.message.instead.dealloc=Enviar mensaje "release" en lugar de "dealloc"
unused.inspection.run.in.headers=Ejecutar inspección en archivos de encabezado