CdiDecoratorInspection.annotation.not.allowed.for.decorator=La anotación ''{0}'' no está permitida para la clase decorator
CdiDecoratorInspection.cannot.find.decorates=El decorator debe tener un atributo delegado anotado con @Delegate
CdiDecoratorInspection.class.cannot.be.final=La clase decorator no puede ser final
CdiDecoratorInspection.class.must.be.decorator=Una clase bean que no es un decorator no puede tener un punto de inyección anotado con @Delegate
CdiDecoratorInspection.decorates.type.must.implements.all.decorator.interfaces=El tipo delegado de un decorator debe implementar o extender cada tipo decorado. No soportado\: {0}
CdiDecoratorInspection.delegate.injection.point.expected=El campo @Delegate debe estar anotado con @Injected
CdiDecoratorInspection.injection.point.must.be.constructor.or.initializer=El método con parámetro @Delegate debe ser un constructor o un método inicializador (@Injected)
CdiDecoratorInspection.too.many.decorates.in.decorator=El decorator debe tener exactamente un atributo delegado anotado con @Delegate
CdiDisposerMethodInspection.non.abstract.disposer.method=El método disposer no puede ser abstract
CdiDisposerMethodInspection.too.many.dispose.parameters=El método no puede tener más de un parámetro anotado con @Disposes
CdiDomBeansInspection.add.annotation=Agregar @{0}
CdiDomBeansInspection.add.annotation.family=Agregar anotación
CdiDomBeansInspection.class.must.be=Se espera una clase {0} aquí
CdiDomBeansInspection.duplicated.alternative.classes=La clase ya está definida en <alternatives>
CdiDomBeansInspection.duplicated.stereotype.classes=El estereotipo ya está definido en <alternatives>
CdiInjectInspection.field.cannot.be.annotated.produces=El campo inyectado no puede estar anotado con @Produces
CdiInjectInspection.field.should.not.be.initialized=El campo inyectado no debe ser inicializado
CdiInjectInspection.injected.method.cannot.be.abstract=El método @Inject no puede ser abstract
CdiInjectInspection.injected.method.cannot.be.static=El método @Inject no puede ser static
CdiInjectInspection.injected.with.disposes.parameters=El método @Inject no puede tener parámetros anotados con ''{0}''
CdiInjectInspection.more.than.one.injected.constructor=El bean gestionado debe tener solo un constructor anotado con @Inject
CdiInjectInspection.wrong.injected.method.annotation=El método @Inject no puede estar anotado con ''{0}''
CdiInjectionInspection.field.cannot.be.final=No se permite la anotación @Inject en campos final
CdiInjectionInspection.field.cannot.be.static=No se permite la anotación @Inject en campos static
CdiInspectionPointsInspection.ambiguous.dependency=Dependencia ambigua\: hay múltiples beans que coinciden con el punto de inyección
CdiInspectionPointsInspection.new.annotation.with.other.qualifiers=@New no puede combinarse con otros calificadores
CdiInspectionPointsInspection.unsatisfied.dependency=Dependencia insatisfecha\: ningún bean coincide con el punto de inyección
CdiInterceptorInspection.no.binding.type=@Interceptor debe especificar al menos una vinculación de interceptor
CdiManagedBeanInconsistencyInspection.no.appropriate.constructor=El bean gestionado debe tener un constructor sin parámetros o un constructor anotado con @Inject
CdiManagedBeanInconsistencyInspection.not.concrete.class=El bean gestionado debe ser una clase concreta o @Decorator
CdiManagedBeanInconsistencyInspection.parameterized.class=El bean gestionado no debe ser un tipo parametrizado
CdiManagedBeanInconsistencyInspection.static.inner.class=El bean gestionado no debe ser una clase interna no static
CdiManagedBeanInconsistencyInspection.unallowed.ancestor=El bean gestionado no debe heredar ''{0}''
CdiNormalScopeInspection.public.field.in.normal.scoped.beans=El bean con ámbito no predeterminado no debe tener campos public
CdiObservesInspection.multiple.observes.parameters.not.allowed=El método debe tener solo un parámetro @Observes
CdiObservesInspection.observer.method.with.wrong.parameters=El método observer no puede tener parámetros anotados con ''{0}''
CdiObservesInspection.wrong.observe.method.annotation=El método observer no puede estar anotado con ''{0}''
CdiScopeInspection.session.stateless.bean.incorrect.scopes=El bean sin estado de sesión debe tener ámbito @Dependent
CdiScopeInspection.singleton.bean.incorrect.scopes=El bean singleton debe ser @ApplicationScoped o @Dependent
CdiSpecializesInspection.specialized.class.has.duplicated.named.anno=La anotación @Named no puede usarse en la clase especializante y especializada
CdiSpecializesInspection.specialized.class.has.multiple.specializes=Más de una clase que especializa la misma superclase\: {0}
CdiSpecializesInspection.specialized.class.not.defined=El bean especializante debe extender otro bean
CdiSpecializesInspection.specializes.method.must.be.non.static=El método especializante no puede ser static
CdiSpecializesInspection.specializes.method.must.be.producer=El método especializante debe estar anotado con @Produces
CdiSpecializesInspection.specializes.method.must.override.producer.of.superclass=El método especializante debe sobrescribir un método @Produces en la superclase directa
CdiStereotypeInspection.non.empty.named.annotations.not.allowed=La anotación @Named no vacía no está permitida para estereotipos
CdiStereotypeInspection.not.allowed.for.stereotypes=No permitido para estereotipos
CdiStereotypeInspection.qualified.annotations.not.allowed=Las anotaciones calificadoras no están permitidas para estereotipos
CdiStereotypeRestrictionsInspection.different.scopes.in.stereotypes=Todos los estereotipos deben especificar el mismo ámbito O se debe especificar un ámbito en el bean
CdiTypedAnnotationInspection.incorrect.bean.type=El tipo de bean no corresponde a los tipos de la anotación @Typed
CdiTypedAnnotationInspection.non.producer=Debe aplicarse a productores
CdiUnknownProducersForDisposerMethodInspection.cannot.find.corresponding.producers=No se pueden encontrar los productores correspondientes
CdiUnproxyableBeanTypesInspection.injected.in.passivating.scoped.bean.must.be.serializable=No se puede inyectar un bean de tipo no serializable en un bean de ámbito pasivante
CdiUnproxyableBeanTypesInspection.passivating.scoped.bean.must.be.serializable=El bean gestionado que declara un ámbito pasivante debe ser java.io.Serializable
CdiUnproxyableBeanTypesInspection.unproxyable.type.detected=El bean inyectado de ámbito normal no es proxy-able
alternative.bean.should.not.be.vetoed=El bean alternativo no debe ser vetado
inspection.name.alternative.errors=Bean @Alternative vetado
inspection.name.ambiguous.dependencies=Punto de inyección con dependencias ambiguas
inspection.name.bean.normal.scope.inconsistency=Bean con ámbito no predeterminado declara campos public
inspection.name.bean.scope.inconsistency=Ámbito de bean incorrecto
inspection.name.beans.configuration.errors=Definiciones incorrectas de beans en beans.xml
inspection.name.decorator.errors=Clase @Decorator incorrecta
inspection.name.disposer.method.errors=Método disposer incorrecto
inspection.name.disposer.method.to.produces.errors=Parámetro de método disposer sin productores
inspection.name.injected.errors=Lugar incorrecto de inyección de dependencia
inspection.name.interceptor.errors=Clase @Interceptor sin tipos de vinculación
inspection.name.managed.bean.inconsistency.errors=Definición incorrecta de bean gestionado
inspection.name.observer.method.errors=Método observer incorrecto
inspection.name.specialize.errors=Uso incorrecto de @Specializes
inspection.name.stereotype.errors=Clase de anotación @Stereotype incorrecta
inspection.name.stereotype.restriction.errors=El Bean tiene colisión de ámbito en estereotipos
inspection.name.typed.annotation=Uso incorrecto de anotación @Typed
inspection.name.unproxyable.bean.types.inconsistency.errors=Uso incorrecto de tipo de bean que no puede ser proxy
model.inspection.group.name=CDI (Contextos e Inyección de Dependencias)