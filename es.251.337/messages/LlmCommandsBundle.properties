associated.contexts.key=Contextos asociados
associated.dependent.contexts.key=Consumidores
db.provider.generate.entity.by.table=Generar entidad persistente
db.provider.prompt.generate.entity.class.corresponding.to.table=Debe generar una clase de entidad persistente Jakarta EE para la tabla de base de datos '{{'{0}'}}'.
directives.you.must.consider=Debe considerar
directives.you.must.use=Debe usar
domains.llm.function.controller.description=Devolver controlador por nombre
domains.llm.function.entity.description=Devolver entidad por nombre
domains.llm.function.repository.description=Devolver repositorio por nombre
domains.llm.function.service.description=Devolver servicio por nombre
domains.llm.function.table.description=Devolver tabla por nombre
entity.provider.generate.database.table.init.script.from.entity.class=Generar script de inicialización de tabla de base de datos
entity.provider.generate.repository.by.entity=Generar repositorio Spring Data
entity.provider.prompt.generate.init.sql.script=Debe generar script SQL inicial para la entidad ''{0}'' con tipo de ID ''{1}''
entity.provider.prompt.generate.spring.data.repository.for.entity=Debe generar un repositorio Spring Data para la entidad '{{'{0}'}}' con tipo de ID '{{'{1}'}}'.El repositorio debe tener métodos de búsqueda por atributos de entidad. Generar en el paquete '{{'{2}}}'.
repositories.provider.generate.controller.by.repository=Generar controlador Spring
repositories.provider.generate.spring.service.from.repository=Generar servicio Spring
repositories.provider.prompt.crud.spring.service.for.repository.0.class.and.1.as.entity=Debe generar un servicio Spring CRUD para la clase de repositorio '{{'{0}'}}' y la entidad '{{'{1}'}}'
repositories.provider.prompt.generate.controller.for.repository=Debe generar un controlador Spring CRUD para la clase de repositorio '{{'{0}'}}' y la clase de entidad '{{'{1}'}}'.Generar en el paquete '{{'{2}}}'.