ActionGroupDropDown.label=Acciones
AttribitePanel.validation=Validación
AttributeTipInfo.Severity.LEAST_EFFICIENT=Menos eficiente
AttributeTipInfo.Severity.MORE_EFFICIENT=Más eficiente
AttributeTipInfo.Severity.MOST_EFFICIENT=Más eficiente
ColumnRenderer.inDb.prefix=En base de datos\:
ColumnValueCellRenderer.usedBy=Usado por {0}
ConfirmDialog.title=Confirmar
ConstraintCheckDigitIndexItem.name=Índice de dígito de verificación
ConstraintCurrencyItem.name=Moneda
ConstraintFractionItem.name=Fracción
ConstraintHostItem.name=Host
ConstraintIgnoreNonDigitCharactersItem.name=Ignorar caracteres no numéricos
ConstraintInclusiveItem.name=Inclusivo
ConstraintIntegerItem.name=Entero
ConstraintMaxItem.name=Máximo
ConstraintMaxLongItem.name=Máximo
ConstraintMessageItem.name=Mensaje
ConstraintMinItem.name=Mínimo
ConstraintMinLongItem.name=Mínimo
ConstraintPortItem.name=Puerto
ConstraintProtocolItem.name=Protocolo
ConstraintRegexpItem.name=Expresión regular
ConverterAttributeItem.name=Converter
CreateIndexDialog.label.name=Nombre
CreateIndexDialog.label.unique=Único
DaysDurationItem.days=días
DaysDurationItem.hours=horas
DaysDurationItem.millis=milisegundos
DaysDurationItem.minutes=minutos
DaysDurationItem.nanos=nanosegundos
DaysDurationItem.seconds=segundos
DisplayName.codingAssistance=Asistencia de código
DisplayName.dbDrivers=Drivers de base de datos
DisplayName.dtoDeclaration=Declaración DTO
DisplayName.entityDeclaration=Declaración de entidad JPA
DisplayName.hibernateEnvers=Hibernate Envers
DisplayName.mapperDeclaration=Declaración Mapper
DisplayName.projectionDeclaration=Declaración de proyección
DisplayName.repository=Repositorio Spring Data
DomainEntityType.JPA=Entidad JPA
DomainEntityType.MONGODB=Documento MongoDB
DtoAttributePanel.mappingWillBeHandledImplicitly=El mapping será manejado implícitamente
DtoAttributePanel.unsetName=<desasignar nombre>
EndIndexItem.name=Índice final
EntityFromPojoAttributeType.EXISTING_CLASS=Seleccionar clase de entidad existente
EntityFromPojoAttributeType.NEW_CLASS=Crear nueva clase de entidad
EntityFromPojoAttributeType.TRANSIENT=Transient
EntityToDtoMapperDialog.fromDto=Mapear {0} desde...
EntityToDtoMapperDialog.toDto=Mapear {0} a...
EntityViewCreateDialog.title=Nuevo {0}
EnvironmentVariablesDialog.message.illegalNameEnvironmentVariable=Nombre de variable de entorno ilegal\: {0}
EnvironmentVariablesDialog.message.illegalValueEnvironmentVariable=Valor ilegal para variable de entorno ''{0}''\: ''{1}''
ExtractJpqlQueryIntention.error=Error {0}
GenerateEntityAttributeAction.TypeField.radio.element.collection=Colección de elementos
GenerateEntityAttributeAction.TypeField.radio.id=ID
GenerateEntityAttributeAction.TypeField.radio.persist=Persistente
GenerateEntityAttributeAction.TypeField.radio.transient=Transient
GenerateEntityAttributeAction.popup.title.enterAttributeType=Ingresar tipo de atributo
InheritanceField.default=Por defecto({0})
InjectionInsertHandler.hint.text.canNotPerformCompletion.canNotFindInjectingClass=No se puede completar\: clase de inyección no encontrada.
InjectionInsertHandler.hint.text.canNotPerformCompletion.targetClassNotFound=No se puede completar\: clase objetivo no encontrada.
Item.notImplemented.text=Esta funcionalidad aún no está implementada. Planeamos implementarla en futuras actualizaciones.
JpaAttributePropertiesPanel.action.createItem=Crear atributo inverso...
JpaAttributePropertiesPanel.notification.unableToDefineEntityId=No se puede definir el tipo de ID para la entidad ''{0}''
JpaColumnNamesEditor.validation.columnMustNotBeEmpty=La lista de columnas no puede estar vacía
JpaToolWindowManager.designer=Diseñador
JpaToolWindowManager.jpaDesignerTitle=Diseñador JPA
JpaToolWindowManager.structure=Estructura
JpaToolWindowManager.toolWindowId=JPA Buddy
MapperMethodCreationDialog.single=Individual
MapperMethodCreationDialog.title.from.dto.to.entity=De DTO a Entidad
MapperMethodCreationDialog.title.from.entity.to.dto=De Entidad a DTO
MessageDialog.no.thanks=No, gracias
MessageDialog.request.ultimate.trial=Probar IntelliJ IDEA Ultimate
MethodType.COUNT=Count
MethodType.DELETE=Delete
MethodType.EXISTS=Exists
MethodType.FIND_COLLECTION=Buscar colección
MethodType.FIND_INSTANCE=Buscar instancia
MethodType.QUERY_COUNT=Count
MethodType.QUERY_DELETE=Delete
MethodType.QUERY_EXISTS=Exists
MethodType.QUERY_FIND_COLLECTION=Buscar colección
MethodType.QUERY_FIND_INSTANCE=Buscar instancia
MethodType.QUERY_UPDATE=Update
NewType.INDEX=Índice
NewType.UNIQUE_CONSTRAINT=Restricción única
NotImplemented.title=Próximamente
PTableGroup.association=Asociación
PTableGroup.basic=Básico
PTableGroup.column=Columna
PTableGroup.format=Formato
PTableGroup.general=General
PTableGroup.hibernate.envers=Hibernate Envers
PTableGroup.id=ID
PTableGroup.inheritance=Herencia
PTableGroup.jpa.buddy=JPA Buddy
PTableGroup.lombok=Lombok
PTableGroup.table=Tabla
PTableGroup.validation=Validación
Palette.category.attributes=Atributos
Palette.category.audit=Auditoría
Palette.category.indexes=Índices
Palette.category.lifecycleCallbacks=Callbacks de ciclo de vida
Palette.category.liquibase.add=Agregar
Palette.category.liquibase.create=Crear
Palette.category.liquibase.drop=Eliminar
Palette.category.liquibase.filter=Archivo Liquibase
Palette.category.liquibase.rename=Renombrar
Palette.category.method=Método
Palette.category.namedGraph=Named Graph
Palette.category.namedGraphs=Named Graphs
Palette.category.namedQuery=Named Query
Palette.category.other=Otros
Palette.category.query=Query
Palette.category.reverseEngineering=Ingeniería inversa
Palette.category.utils=Utilidades
QueryType.COUNT=Count
QueryType.DELETE=Delete
QueryType.EXISTS=Exists
QueryType.FIND=Find
QueryType.UPDATE=Update
RepositoryCreationDialog.mode.bulk=Masivo
RepositoryCreationDialog.mode.single=Individual
RepositoryCreationDialog.title=Nuevo Repositorio Spring Data
RepositoryGraphEditor.radio.fetch=Fetch
RepositoryGraphEditor.radio.load=Load
RepositoryMethodDialog.changeSettings=Cambiar configuración
RepositoryMethodDialog.is=(Is)
RevisionListenerRenderer.newClass=Nueva clase
SpringAuditItem.name=Auditoría Spring
StartIndexItem.name=Índice inicial
TabularPropertiesEditor.propertiesNotFound=Propiedades no encontradas
TabularPropertiesEditor.validation.number=Número inválido
ToStringType.ALL=Todos
ToStringType.NONE=Ninguno
ToStringType.ONLY_EXPLICITLY_INCLUDED=Solo explícitamente incluidos
TypeInject.CONSTRUCTOR_OR_AUTOWIRED=Constructor/@Autowired
TypeInject.LOOKUP=Método lookup
TypeInject.OBJECT_FACTORY=Object Factory
action.CreateLiquibaseChangeLog.text=Changelog Liquibase vacío
action.CreateLiquibaseChangeLogItem.description=Crear cambio Liquibase
action.CreateLiquibaseChangeLogItem.text=Cambio Liquibase
action.CreateReverseEngineeringItem.description=Generar atributos de entidad JPA desde columnas de base de datos
action.CreateReverseEngineeringItem.text=Generar atributos de entidad desde base de datos...
action.JpbAddAttributesFromPojo.text=Agregar atributos desde DTO
action.JpbAddAttributesToDTO.text=Agregar atributos a DTO
action.JpbAddMapperMethods.description=Agregar métodos Mapper
action.JpbAddMapperMethods.text=Métodos Mapper...
action.JpbConfigureToolWindow.description=Configurar barra de herramientas del editor y ventana de herramientas
action.JpbConfigureToolWindow.text=Configurar barra de herramientas del editor y ventana de herramientas
action.JpbCreateCustomDs.text=Conexión a base de datos...
action.JpbCreateCustomType.text=Tipo personalizado Hibernate
action.JpbCreateDto.text=Crear DTO
action.JpbCreateEntity.text=Entidad JPA
action.JpbCreateEntityActionWithRelationFrom.text=Entidad referenciada...
action.JpbCreateEntityActionWithRelationTo.text=Entidad referenciada
action.JpbCreateEntityFromPojo.text=Generar entidad JPA desde POJO
action.JpbCreateEntityView.text=Vista de entidad Blaze Persistence
action.JpbCreateHibernateEvent.text=Crear evento Hibernate
action.JpbCreateIndex.description=Crear índice
action.JpbCreateIndex.text=Índice/Restricción...
action.JpbCreateJpaConverter.text=Converter JPA
action.JpbCreateJpaDto.text=DTO
action.JpbCreateJpaRepository.text=Repositorio Spring Data JPA
action.JpbCreateMapper.text=Interfaz MapStruct
action.JpbCreatePersistenceUnit.text=Unidad de persistencia
action.JpbCreateRelatedEntityPopup.description=Agregar atributo con entidad referenciada
action.JpbCreateRelatedEntityPopup.text=Crear entidad referenciada
action.JpbCreateRepositoryMethod.description=Crear método de repositorio
action.JpbCreateRepositoryMethod.text=Método de repositorio...
action.JpbCreateRevisionEntity.text=Entidad de revisión
action.JpbCreateSpringDataSource.description=Generar propiedades de datasource
action.JpbCreateSpringDataSource.text=Datasource
action.JpbCreateSpringProjection.text=Proyección Spring Data
action.JpbDeleteDataStore.text=Eliminar...
action.JpbDeletePersistenceUnit.text=Eliminar unidad de persistencia
action.JpbDetectDataSource.text=Detectar conexión...
action.JpbEditCustomDataSource.text=Editar conexión a base de datos
action.JpbEditPersistenceUnit.text=Editar unidad de persistencia
action.JpbExtractMappedSuperClass.text=Extraer a MappedSuperclass
action.JpbFlywayAddDdlChange.text=Agregar sentencia DDL/SQL
action.JpbFlywayCreateSqlChange.description=Crear sentencia DDL
action.JpbFlywayCreateSqlChange.text=Sentencia DDL/SQL
action.JpbFlywayGenerateDiffDdlChanges.text=Generar sentencias DDL diff
action.JpbGenerateEntityAttribute.description=Agregar atributo de entidad
action.JpbGenerateEntityAttribute.text=Atributo de entidad...
action.JpbGenerateLifecycleCallback.description=Agregar callback de ciclo de vida JPA
action.JpbGenerateLifecycleCallback.text=Callback de ciclo de vida...
action.JpbGenerateNamedQuery.description=Agregar Named Query
action.JpbGenerateNamedQuery.text=Named Query...
action.JpbGenerateUtilities.description=Utilidades JPA
action.JpbGenerateUtilities.text=Utilidades JPA...
action.JpbLiquibaseDeleteTag.text=Eliminar tag
action.JpbMapperCreation.text=Crear interfaz MapStruct
action.JpbReEntityAttributeFromDb.text=Generar atributos de entidad desde base de datos
action.JpbReferencesTreeNotification.text=Referencias
action.JpbRefreshJpaStructure.text=Actualizar árbol del explorador JPA
action.JpbSafeDeleteAttribute.description=Eliminación segura de atributo
action.JpbSafeDeleteAttribute.text=Eliminar de forma segura…
action.JpbSafeDeleteClass.text=Eliminar clase de forma segura
action.JpbSafeDeleteMethod.description=Eliminar método de forma segura
action.JpbSafeDeleteMethod.text=Eliminar de forma segura…
action.JpbSearchInLibraries.text=Buscar en librerías
action.JpbSelectInStructureView.text=Seleccionar en el Explorador JPA
action.JpbSelectOpenedFileNotificationProvider.text=Seleccionar en el Explorador JPA
action.JpbShowEntityDdl.text=Mostrar DDL
action.JpbShowInspectorPopup.description=Mostrar popup del inspector
action.JpbShowInspectorPopup.text=Mostrar popup del inspector
action.JpbShowJpaSettings.text=Configuración de JPA Buddy
action.JpbSyncDtoWithEntity.text=Agregar atributos desde entidad
action.JpbSyncEntityWithDto.text=Generar atributos de entidad desde DTO
action.actions.text=Acciones
action.add.text=Agregar
action.add.to.source.text=Agregar a fuente
action.browse.text=Explorar
action.create.dto.text=Crear DTO
action.create.jpa.converter.text=Crear Converter JPA
action.create.projection.text=Crear Projection
action.delete.tag.text=Eliminar tag
action.delete.text=Eliminar…
action.description.create.projection=Crear projection…
action.description.migration=Migración de tipo…
action.description.smart.refactoring=Refactorización inteligente
action.documentation.text=Documentación
action.edit.lowercase=editar
action.extract.lowercase=extraer…
action.navigate.lowercase=navegar
action.new.text=Nuevo
action.select.item.text=Seleccionar ítem
add=Agregar
add.attribute.dto=Agregar atributo al DTO
add.attributes.from.dto.to.entity=Agregar atributos desde DTO a {0}
add.attributes.to.entity=Agregar atributos a la entidad
addShortCut=Agregar atajo de teclado
additional.db.drivers=Drivers de base de datos adicionales
apply=Aplicar
attributeItem.readModel=Leer modelo de atributo
bean.injection.symbols.comment=El autocompletado de inyección de Bean no se mostrará si el número de símbolos ingresados es menor que el especificado.
border.title.autowiring.code.style=Estilo de código de autowiring
cancel=Cancelar
category.all.results=Todos los resultados
changes.please.enter.a.valid.regex=Por favor ingrese un {0} válido
checkbox.update.entity.from.dto=Actualizar entidad desde DTO
choose.table.columns=Elegir columnas de tabla
class.comment=Comentario de clase
class.name.postfix=Postfijo del nombre de clase
column.name.attribute=Atributo
column.name.column=Columna
column.name.condition=Condición
column.name.direction=Dirección
column.name.entity=Entidad
column.name.ignoreCase=Ignorar mayúsculas/minúsculas
column.name.name=Nombre
column.name.nullability=Nulabilidad
column.name.nullable=Nullable
column.name.operator=Operador
column.name.repository=Repository
column.name.unique=Único
columns=Columnas
command.name.add.lifecycle.callback=Agregar callback de ciclo de vida ''{0}''
command.name.append.changes.to.sql.file=Anexar cambios al archivo SQL
command.name.change.repository.method.nullability=Cambiar nulabilidad del método del repository
command.name.create=Crear {0}
command.name.create.changeset=Crear ChangeSet
command.name.create.tag=Crear tag {0}
command.name.generate.repository.method=Generar método del repository
command.name.override.repository.method=Sobreescribir método del repository
configurable.group.jpa.buddy.tools.settings.description=<html><body>JPA Buddy es una herramienta de desarrollo diseñada para automatizar el trabajo diario relacionado con el modelado de datos en aplicaciones Java y Kotlin.
configurable.group.jpa.buddy.tools.settings.display.name=JPA Buddy
configure.editor.header.and.tool.windows=Configurar barra de herramientas del editor y ventanas de herramientas
continue=Continuar
copy=Copiar
could.not.parse.repository.method.name=No se pudo analizar el nombre del método del repository.\nPor favor verifique si "{0}" sigue la convención de nombres de Spring Data.
create=Crear
create.db.connection=Crear conexión de base de datos
db.connection.0.has.been.created=La conexión de base de datos "{0}" ha sido creada
db.driver.version=Versión del driver
ddl.generate.in.existing.file.feature.description=Con esta funcionalidad, puede generar sentencias DDL para sus entidades JPA con unos pocos clics. Puede generar scripts de inicialización para crear un esquema de base de datos desde cero o generar DDL diferencial para actualizar una base de datos existente a un estado válido según las entidades JPA. Además, esta funcionalidad es útil como alternativa a la propensa a errores propiedad spring.jpa.hibernate.ddl-auto. Al usar las acciones de JPA Buddy, tendrá control total sobre el DDL antes de ejecutarlo, establecer el mapeo correcto de tipos Java -> DB, usar campos con convertidores de atributos y mapeos de tipos Hibernate, generar sentencias drop, etc.
default.beans.inject.strategy=Estrategia de inyección de Beans por defecto
default.beans.inject.strategy.constructor=Crear campos de referencia final a Bean e inicializar a través del constructor de clase
default.beans.inject.strategy.field=Crear campos de referencia a Bean usando la anotación @Autowired
default.beans.inject.strategy.setter=Crear campos de referencia a Bean y métodos setter usando la anotación @Autowired
default.repository.name.suffix=Sufijo por defecto del nombre del repository
delete=Eliminar
delete.db.persistenceUnit=¿Eliminar unidad de persistencia "{0}"?
designer.settings=Configuración del diseñador
designers=Diseñadores
designers.changelog=Changelog de Liquibase
designers.entity=Entidad JPA
designers.repository=Repository Spring Data
designers.sql=Tipo de archivo SQL
detect.dataSource.not.found=<html>JPA Buddy no encontró ninguna configuración de fuente de datos en los archivos de propiedades. Recuerde que JPA Buddy solo puede detectar conexiones para <a href\="https\://www.jetbrains.com/help/idea/jpa-buddy-database-connections.html" target\="_blank">bases de datos soportadas</a>.</html>
detected.data.sources=Fuentes de datos detectadas
dialog.message.entity.projectionTypeInvalid=¡Tipo de entidad/projection inválido\!
dialog.message.this.not.valid.length=Esta no es una longitud válida
dialog.message.validation.attributeOverridesHaveEmptyValues=Los attribute overrides tienen valores vacíos
dialog.message.validation.columnHaventSpecified=Columna no especificada
dialog.message.value.length.must.be.between.symbols=La longitud del valor debe estar entre 1 y {0} caracteres
dialog.title.attribute.overrides=Attribute Overrides
dialog.title.choose.attributes.to.concatenate=Elegir atributos para concatenar
dialog.title.choose.attributes.to.include=Elegir atributos para incluir
dialog.title.create.choice.constraint.index=Crear {0, choice, 0\#constraint|1\#índice}
dialog.title.delete=Eliminar
dialog.title.entity.projection.type.migration=Migración de tipo entidad/projection
dialog.title.new.spring.projection=Nueva Spring Projection
dialog.title.spring.auditing=Spring Auditing
discard=Descartar
done=Cambios guardados
driver.class=Clase del driver
dto.and.mapper.feature.description=Los DTOs son cruciales para las aplicaciones web, pero su implementación trae código repetitivo. Decenas de clases que casi copian sus entidades, cada una con un mapper. Con la funcionalidad de <b>Generación de DTO</b> puede ahorrar tiempo en el trabajo diario. Puede crear DTOs y mappers MapStruct basados en definiciones de entidades JPA, ¡pero eso no es todo\! Con el tiempo, las entidades pueden cambiar y necesitará modificar los DTOs en consecuencia. JPA Buddy también resuelve esto. Le permite <b>sincronizar entidades con sus DTOs</b> y viceversa. Además, JPA Buddy proporciona la operación <b>Generar entidad JPA desde POJO</b> que ayuda a generar entidades JPA desde cualquier clase java/kotlin. Esta funcionalidad puede ser útil si desarrolla su aplicación con un enfoque API-first\: primero define DTOs para su API y luego implementa el modelo de datos.
dto.class.comment.help.tooltip=<html>Variable <b>ENTITY_FQN</b> - nombre completamente calificado de la entidad en base a la cual se crea el DTO.</html>
dto.comment.description=<html>La expresión regular de enlace de comentarios permite a JPA Buddy asociar DTOs con sus entidades JPA. Para especificar un marcador de posición para el FQN de la entidad objetivo en el comentario, use el patrón <b>(?\\&lt;entity\\&gt;.*)</b>.<br><br>Por lo tanto, si la expresión regular se define como <b>A DTO for the {@link (?.*)} entity.</b>, se analizará en el siguiente comentario\: <i>//A DTO for the {@link io.jpabuddy.demo.entities.Project} entity.</i>.<br><br>La funcionalidad se deshabilitará cuando el campo esté vacío.</html>
dto.comment.regexp=Expresión regular de enlace de comentarios
dto.name.pattern.description=<html>Si usa una convención de nombres estricta entre entidades JPA y DTOs, puede declararla aquí. Esto permite a JPA Buddy asociar DTOs con sus entidades JPA.<br><br>Para especificar un marcador de posición para el nombre de clase simple de la entidad JPA objetivo, use el patrón <b>(?\\&lt;entity\\&gt;.*)</b>. Por ejemplo, (?.*)Dto significa que la clase MyEntityDto será tratada como DTO para MyEntity.<br><br>La funcionalidad se deshabilitará cuando el campo esté vacío.</html>
dto.name.pattern.regexp=Expresión regular del nombre de clase
duplicate.method.name=Ya existe un método con nombre ''{0}'' definido en el repository
edit=Editar
editor.toolbar=Barra de herramientas del editor
editorMode=Modo editor
editorMode.enable=Habilitar modo minimalista
enable.completion=Autocompletado inteligente
entity.attributes.from.dto=Generar atributos de entidad desde DTO
entity.listener=Entity Listener
entity.listeners=Entity Listeners
feature.available.only.with.subscription=Esta funcionalidad solo está disponible en IntelliJ IDEA Ultimate Edition
field.exists=Ya existe un campo con este nombre
field.required=El campo ''{0}'' es requerido
fixes.createCustomEntity=Crear entidad JPA…
fixes.createMappedSuperclassEntity=Crear JPA MappedSuperclass "{0}"
fixes.createMissingAttribute=Crear atributo faltante
flyway.diff.feature.description=La generación de migraciones versionadas de Flyway es una funcionalidad muy útil que puede ahorrar mucho tiempo en el trabajo diario. Usando esta funcionalidad, puede generar automáticamente migraciones que contienen el DDL necesario para actualizar su base de datos para que coincida con su modelo JPA. Dicha migración Flyway con DDL diferencial se puede generar comparando entidades JPA con una base de datos, dos bases de datos o incluso entidades JPA de una rama VCS con entidades JPA de otra rama VCS, lo cual es útil cuando no tiene acceso a la base de datos de destino.
flyway.init.feature.description=La operación de migración de inicialización de esquema Flyway ayuda a los desarrolladores a generar un esquema de base de datos desde cero. Puede usar sus entidades JPA o una base de datos existente como fuente. Como resultado, obtendrá una migración versionada de Flyway que contiene el DDL necesario para inicializar el esquema. Esta funcionalidad es útil si está integrando Flyway en una aplicación existente o decide generar un solo script para la inicialización de la base de datos en lugar de ejecutar muchas migraciones antiguas. Además, puede ayudar a configurar nuevos entornos de desarrollo o prueba.
follow.this.link.to.watch.feature=<a href\="{0}">Vea este breve video</a> para ver la funcionalidad en acción.
following.licence.options=Puede habilitar esta funcionalidad con las siguientes opciones\: <ol><li>Si aún no ha probado IntelliJ IDEA Ultimate, puede <a href\="https\://www.jetbrains.com/lp/idea-extended-trial/\#\:~\:text\=90%2Dday%20Trial%20for%20Your%20Whole%20Team&text\=Complete%20a%20short%20form%20and,a%20set%20of%20simple%20criteria">solicitar una prueba ahora para usted o incluso para todo su equipo</a></li><li>Si es estudiante o profesor, enseña o aprende cursos o desarrolla proyectos de código abierto, puede <a href\="https\://www.jetbrains.com/idea/buy/?section\=discounts&billing\=yearly">obtener IntelliJ IDEA Ultimate gratis</a></li><li><a href\="https\://www.jetbrains.com/idea/buy/?section\=commercial&billing\=yearly">Comprar IntelliJ IDEA Ultimate</a></li></ol>
from.db=Desde base de datos
from.dto=Desde DTO
generate.ddl.by.entities=Con la operación "Generar DDL por entidades", los desarrolladores pueden convertir entidades a sentencias DDL con unos pocos clics. Puede generar scripts de inicialización para crear un esquema de base de datos desde cero o generar DDL diferencial para actualizar una base de datos existente a un estado válido según las entidades JPA. Además, esta funcionalidad es útil como alternativa a la propensa a errores propiedad spring.jpa.hibernate.ddl-auto. Al usar las acciones de JPA Buddy, tendrá control total sobre el DDL antes de ejecutarlo, establecer el mapeo correcto de tipos Java -> DB, usar campos con convertidores de atributos y mapeos de tipos Hibernate, generar sentencias drop, etc.
generate.ddl.from.run.console.feature.description=Esta excepción ocurre cuando sus entidades JPA no se mapean correctamente a tablas y campos de base de datos. JPA Buddy proporciona una funcionalidad muy útil para resolver este problema fácilmente. ¡Genere DDL directamente desde el stack trace para cubrir las diferencias entre las entidades JPA y la base de datos\! Luego, revise el script generado, ejecútelo y vuelva a iniciar la aplicación. El mismo problema se puede resolver regenerando o actualizando la base de datos configurando las propiedades ddl-auto o hbm2ddl. Sin embargo, esta solución tiene grandes limitaciones. Vea el video a continuación para conocer estas limitaciones y la mejor solución propuesta por JPA Buddy.
generate.equals.and.hashcode.empty.fields=La entidad no tiene atributos para incluir en equals() y hashCode()
generate.equals.and.hashcode.empty.fields.title=No se encontraron campos
generateEntity.resolveAttributeInfo=Resolver información del atributo
go.to.reference.element=Ir al elemento referenciado
group.com.intellij.jpb.group.otherNewGroup.text=Otros
group.com.intellij.jpb.structure.toolbar.new.flyway.text=Todas las nuevas acciones
group.com.intellij.jpb.structure.toolbar.new.text=Todas las nuevas acciones
hsql.unsupported.rename.sequence=HSQL no soporta renombrar secuencias
hsql.unsupported.rename.view=HSQL no soporta renombrar vistas
ide=IDE
inspection.ConverterSpecifiedIncorrectlyInspection=El tipo del converter no coincide con el tipo del atributo
inspection.ConverterSpecifiedIncorrectlyInspectionExt=El tipo del converter {0} no coincide con el tipo del atributo {1}
inspection.LombokDataInspection=No se recomienda usar @Data en entidades JPA. Puede causar serios problemas de rendimiento y consumo de memoria.
inspection.LombokEqualsInspection=No se recomienda usar @EqualsAndHashCode en entidades JPA. Puede causar serios problemas de rendimiento y consumo de memoria.
inspection.LombokToStringIncludeInspection=Este campo es lazy loaded pero está incluido en @ToString. Puede causar problemas de rendimiento y consumo de memoria.
inspection.LombokToStringInspection=@ToString incluye campos y/o asociaciones lazy loaded. Esto puede causar problemas de rendimiento y consumo de memoria.
inspection.NoArgsConstructorInspection=La entidad debe tener un constructor sin argumentos public o protected
inspection.cantFindHibernateCustomType=No se puede encontrar el tipo personalizado de Hibernate
inspection.cantFindInverseAttribute=No se puede encontrar el atributo inverso
inspection.cantFindRelatedAttribute=No se puede encontrar el atributo relacionado
inspection.compositeIdClassSerializableInspection=La clase ID compuesta debe implementar Serializable
inspection.converterNotAnnotated=El converter JPA debe estar anotado con @Converter
inspection.dataClassRequiredEqualsAndHashCode=No se recomienda la implementación de equals(), hashCode() y toString() de data class para entidades JPA. Pueden causar serios problemas de rendimiento y consumo de memoria.
inspection.dataClassRequiredEqualsAndHashCode.key=No se recomienda usar data class para entidades JPA.
inspection.entityIdMissing=La entidad no tiene clave primaria
inspection.entityIdMissing.fix.createEntityId=Agregar atributo ID
inspection.group.key.jpbCommon=JPA Buddy
inspection.incompatibleTableAnnotation=La anotación @Table no debe usarse con la estrategia de herencia SINGLE_TABLE.
inspection.message.unknown.column=Columna desconocida {0}
inspection.missingConverter=Los atributos con tipos no soportados deben ser @Transient o tener una declaración de tipo personalizado o converter
inspection.serializable.annotator.message=La clase ''{0}'' debe implementar ''Serializable''
inspection.toManyVersionAnnotations=Solo se puede usar una propiedad o campo Version por clase
inspector=Inspector
inspector.tool.window=Ventana de herramientas del inspector
intention.create.dto.confirmation.message=Esta entidad no tiene un DTO asociado. ¿Desea crear uno nuevo?
intention.create.dto.confirmation.title=No se encontró DTO
intention.showInspector=Mostrar popup del inspector
invalid.method.name=Nombre de método inválido
jpa.buddy.generation=JPA Buddy
jpa.entity.from.pojo=Generar entidad JPA desde POJO
jpa.structure=Explorador JPA
jpa.structure.updated=Árbol del Explorador JPA actualizado
jpaBuddy.title=JPA Buddy
label.index=Índice
label.migrate.entity.projection.type.repositoryMethodTo=Migrar tipo de entidad/projection del método del repository {0} "{1}" a
label.named.query=Named Query
liquibase.diff.feature.description=La generación de changelog diferencial de Liquibase es una funcionalidad muy útil que puede ahorrar mucho tiempo en el trabajo diario. Usando esta funcionalidad, puede generar automáticamente un changelog de Liquibase que contiene todo el código necesario para actualizar su base de datos para que coincida con su modelo JPA. El changelog diferencial se puede generar comparando entidades JPA con una base de datos, dos bases de datos o incluso entidades JPA de una rama VCS con entidades JPA de otra rama VCS, lo cual es útil cuando no tiene acceso a la base de datos de destino.
liquibase.diff.in.existing.file.feature.description=La generación de changelog diferencial de Liquibase es una funcionalidad muy útil que puede ahorrar mucho tiempo en el trabajo diario. Usando esta funcionalidad, puede generar automáticamente un changelog de Liquibase que contiene todo el código necesario para actualizar su base de datos para que coincida con su modelo JPA. El changelog diferencial se puede generar comparando entidades JPA con una base de datos, dos bases de datos o incluso entidades JPA de una rama VCS con entidades JPA de otra rama VCS, lo cual es útil cuando no tiene acceso a la base de datos de destino.
liquibase.init.feature.description=La operación de changelog de inicialización de esquema Liquibase ayuda a los desarrolladores a generar un esquema de base de datos desde cero. Puede usar sus entidades JPA o una base de datos existente como fuente. Como resultado, obtendrá un changelog de Liquibase que contiene todos los comandos necesarios para inicializar el esquema. Esta funcionalidad es útil si está integrando Liquibase en una aplicación existente o decide generar un solo script para la inicialización de la base de datos en lugar de ejecutar muchos changelogs antiguos. Además, puede ayudar a configurar nuevos entornos de desarrollo o prueba.
mapper.naming=Patrón de nombres
mapper.naming.collection.strategy=Estrategia de nombres de mapeo para colecciones
mapper.naming.hint=Use ${ENTITY_NAME} y ${DTO_NAME} para poner los nombres de clase correspondientes en el nombre del método
mapper.naming.to.dto=De entidad a DTO
mapper.naming.to.entity=De DTO a entidad
mapper.naming.update=Actualizar entidad desde DTO
mapping.methodAlreadyExists=Ya existe un método con el mismo nombre y diferente firma en la clase
mysql.unsupported.sequence=Secuencia no soportada por MySQL. Use AUTO_INCREMENT en su lugar.
new=Nuevo
no=No
notification.content.attribute.must.be.embedded.type=¡El atributo debe ser de tipo embebido\!
notification.content.class.not.found.or.it.not.entity=No se encuentra la clase ''{0}'' o no es una entidad
notification.content.containing.file.not.found=No se encuentra el archivo contenedor
notification.content.entity.not.found=No se encuentra la entidad
notification.content.errorMessage={0}<br/> Para más detalles, consulte el archivo de registro ({1})
notification.content.incorrect.property.type.for.object.editor=¡Tipo de propiedad incorrecto para el editor de objetos\!
notification.content.not.implemented=¡No implementado\!
notification.content.psi.file.not.found.in.jpa.palette=Archivo Psi no encontrado en el panel JPA
ok=Aceptar
open=Abrir
palette=Panel
palette.tool.window=Ventana de herramientas del panel
popup.content.dragging.from.palette.not.available.indices=No se puede arrastrar desde el panel mientras se actualizan los índices.
popup.title.choose.repository.class=Elegir clase de repositorio
popup.title.inspector=Inspector
popup.title.jpa.utilities=Utilidades JPA
popup.title.lifecycle.callback=Callback de ciclo de vida
popup.title.liquibase.item=Elemento Liquibase
popup.title.repository.method=Método de repositorio
progress.title.create.dto.class=Creando clase DTO...
project.error.caption=Error de JPA Buddy
project.persistenceUnit.caption=JPA Buddy
project.persistenceUnit.changeSettings=Cambiar configuración
project.persistenceUnit.initialized=Unidad de persistencia predeterminada inicializada
projection.class.comment.help.tooltip=<html>Variable <b>ENTITY_FQN</b> - nombre completo calificado de la entidad en la que se basa la proyección.</html>
projection.comment.description=<html>La expresión regular del comentario de enlace permite a JPA Buddy asociar proyecciones con sus entidades JPA. Para especificar un marcador para el FQN de la entidad objetivo en el comentario, use el patrón <b>(?\\&lt;entity\\&gt;.*)</b>.<br><br>Por lo tanto, si la expresión regular se define como <b>A Projection for the {@link (?.*)} entity.</b>, se analizará en el siguiente comentario\: <i>//A Projection for the {@link io.jpabuddy.demo.entities.Project} entity.</i>.<br><br>La función se desactiva cuando el campo está vacío.</html>
projection.name.pattern.description=<html>Si usa una convención de nombres estricta entre entidades JPA y proyecciones, puede declararla aquí. Permite a JPA Buddy asociar proyecciones con sus entidades JPA.<br><br>Para especificar un marcador para el nombre simple de clase de la entidad JPA objetivo, use el patrón <b>(?\\&lt;entity\\&gt;.*)</b>. Por ejemplo, (?.*)Prj significa que la clase MyEntityPrj será tratada como una proyección de MyEntity.<br><br>La función se desactiva cuando el campo está vacío.</html>
properties.calculation.error=Error de cálculo de propiedades
properties.calculation.error.message=Mensaje de excepción
properties.calculation.logForDetails=Consulte el registro para más detalles
re.columns.from.db.feature.description=¡Si prefiere diseñar primero la base de datos y luego escribir entidades JPA para mapear las tablas, esta función será muy conveniente y le ahorrará mucho tiempo en su trabajo diario\! Con la operación "Columnas desde BD", podrá convertir las características seleccionadas en campos dentro de entidades JPA. También admite el mapeo de asociaciones ManyToOne, OneToOne, OneToMany y ManyToMany. Lo mejor es que no regenera toda la entidad, sino que agrega nuevos campos a la declaración de entidad existente.
re.entities.from.db.feature.description=¡Si prefiere diseñar primero la base de datos y luego escribir entidades JPA para mapear las tablas, o si está desarrollando una aplicación sobre una base de datos existente, esta función será muy conveniente y le ahorrará mucho tiempo en su trabajo diario\! Con la operación "Generar entidades desde BD", puede convertir las tablas de base de datos seleccionadas y sus características en entidades JPA con solo unos pocos clics, incluidas restricciones, índices, propiedades de columnas, etc. También admite el mapeo de asociaciones ManyToOne, OneToOne, OneToMany y ManyToMany. Lo mejor es que no regenera toda la entidad, sino que agrega nuevos campos a la declaración de entidad existente.
refactoring.rename.accessors=Renombrar accessors
refactoring.rename.dto.fields=Renombrar campos DTO
regexp.should.have.one.group={0} debe tener un grupo llamado "{1}", por ejemplo (?<{1}>.*)
remove=Eliminar
repository.equality.condition.form=Forma de condición de igualdad
repository.no.selected.item=Por favor seleccione al menos un elemento de {0}
repository.no.selected.item.warning=Por favor seleccione al menos un elemento
repository.other.conditions.form=Forma de otras condiciones
repository.verb.conditions.form=Forma de condiciones verbales
save=Guardar
select.columns=Seleccionar columnas
separator.class=Clase
separator.entity=Entidad
separator.item.name=Elemento separador
separator.other=Otro
serializable.type=Tipo Serializable
show.all=Mostrar todo
show.bean.injection.completion.on=Mostrar autocompletado de inyección de Bean en\:
showDiff=Mostrar cambios
smart.bean.injection=Detectar automáticamente tipo de inyección de Bean
smart.bean.injection.help=Detecta automáticamente el tipo de inyección de Bean basado en Beans previamente inyectados para la clase seleccionada. Si no hay Beans inyectados, se usará la "Estrategia predeterminada de inyector de Bean"
smart.bean.injection.injectToBeanMethodSignature=Usar inyección de parámetros de método para métodos @Bean
smart.completion.availability.disable.caption=Deshabilitar
smart.completion.availability.enableCreation.caption=Mostrar opciones basadas en código existente y sugerido
smart.completion.availability.enableCreation.example=Por ejemplo, mostrar repositorios Spring Data JPA inexistentes en la lista de autocompletado<br>si corresponden a entidades JPA existentes <a href\="https\://www.jetbrains.com/help/idea/jpa-buddy-coding-assistance.html\#code-completion">Más información</a>
smart.completion.availability.enableExisting.caption=Mostrar opciones basadas en código existente
smart.completion.availability.enableExisting.example=Por ejemplo, opciones de DTO mapeadas a entidades y opciones de búsqueda basadas en<br>mappers MapStruct existentes y repositorios Spring Data JPA
spring.data.repository=Repositorio Spring Data
sql.empty=SQL generado está vacío
start.typing.for.search=Empiece a escribir para buscar
structure.mode.none=No visible
structure.mode.none.help=La ventana de herramientas "Explorador JPA" está completamente oculta. No puede acceder a ella desde ningún lugar.
structure.mode.project=Opción en ventana de proyecto
structure.mode.project.help=La ventana de herramientas "Explorador JPA" está disponible como una vista alternativa del proyecto. Para acceder, abra la ventana de herramientas "Proyecto" y seleccione "Explorador JPA" del menú desplegable.
structure.mode.separate=Ventana de herramientas separada
structure.mode.separate.help=El Explorador JPA se presenta como una ventana de herramientas separada.
structure.mode.unified=Ventana de herramientas unificada
structure.mode.unified.help=La ventana de herramientas "Explorador JPA" se muestra como una pestaña dentro de la ventana de herramientas unificada. Para acceder, abra la ventana de herramientas JPA Buddy y seleccione la pestaña "Estructura".
subscription.request.license=Licencia JPA Buddy
subscription.request.licenseeEmail=Email del licenciatario
subscription.request.link=<a href\="requestLicense">Visite el enlace para obtener una licencia.</a>
subscription.request.success=¡Gracias por su solicitud\! La solicitud de licencia de IntelliJ IDEA Ultimate se ha enviado correctamente.
subscription.request.title=Licencia IntelliJ IDEA Ultimate
subscription.request.topLabel=Hemos notado que está usando IntelliJ IDEA Community Edition con una licencia válida de JPA Buddy que está por expirar. Como sabe, JPA Buddy fue adquirido por JetBrains en 2023. Desde entonces, todas las funciones de pago de JPA Buddy se han trasladado a IntelliJ IDEA Ultimate. Para permitirle continuar accediendo a las funciones de pago de JPA Buddy, le ofrecemos una licencia de IntelliJ IDEA Ultimate por seis meses.
subscription.requestUltimate=Solicitud de licencia IntelliJ IDEA Ultimate
subscription.requestUltimate.description=Es elegible para una licencia de IntelliJ IDEA Ultimate por seis meses. Por favor haga clic abajo para solicitar su licencia.
subscription.required=Disponible en IntelliJ IDEA Ultimate Edition
subscription.sendRequest=Solicitar licencia
suppress.LombokBuilderAllArgsInspection=Lombok @Builder requiere un constructor apropiado para esta clase
symbols=Símbolos
text.comment=Comentario
toolWindow.infoDialog.text=El modo minimalista está diseñado para minimizar las distracciones del desarrollador. ¡Si le gusta tener todo al alcance, le encantará\!<br/><ul><li>La ventana de herramientas JPA Buddy estará oculta;<li>El Explorador JPA estará disponible en la ventana de herramientas "Proyecto" junto con otras opciones (Proyecto, Paquetes, etc.);<li>Todas las operaciones del Diseñador JPA se pueden encontrar en el menú <b>Generar</b> (<b>{0}</b>), menú <b>Acciones Contextuales</b> (<b>{1}</b>) y <b>Barra de herramientas del editor</b>;<li>Además, puede invocar el Diseñador JPA haciendo clic en "Agregar atajo de teclado" o vinculando sus atajos favoritos más tarde en <b>{2} -> Mapeo de teclas</b>.<li>También puede especificar <a href\="\#designer-settings">configuración de visibilidad personalizada</a> para la ventana de herramientas;</li></ul>Consulte nuestra <a href\="https\://www.jetbrains.com/help/idea/jpa-buddy-minimalistic-mode.html">guía</a> sobre el modo minimalista.
tooltip.choose.class=Elegir clase
tooltip.go.to=Ir a
tooltip.hibernate.custom.type=Tipo personalizado Hibernate
tooltip.jpa.converter=Convertidor JPA
tooltip.navigate.to=Navegar a {0}
tooltip.show.entity.attribute=Mostrar atributo de entidad
tooltip.show.usages=Mostrar usos
tree.dto.and.projection=DTOs y proyecciones
unresolved.reference=Referencia no resuelta\: {0}
use.lombok=Usar Lombok
validation_error=Error de validación
view.mode=Modo de vista
view.mode.custom=Personalizado
view.mode.custom.help=Seleccione qué y cómo desea ver.
view.mode.extensive=Extensivo
view.mode.extensive.help=Muestra la ventana de herramientas JPA Buddy y todo su contenido. Útil para aquellos que están comenzando con JPA. Todas las opciones populares estarán siempre a la vista, por lo que es más fácil aprender y elegir las opciones correctas para generar y modificar código.
view.mode.minimalistic=Minimalista
view.mode.minimalistic.help=No muestra la ventana de herramientas JPA Buddy. El Explorador JPA está disponible como una opción en la ventana de herramientas "Proyecto". Las opciones de generación de código se pueden encontrar usando el atajo de generación estándar (<b>{0}</b>) o en la barra de herramientas del Editor. El Inspector JPA está disponible como ventana emergente y se puede invocar por intención o usando un atajo (<b>{1}</b>). Útil para aquellos que prefieren usar atajos en lugar de herramientas visuales.
warning=Advertencia
yes=Sí