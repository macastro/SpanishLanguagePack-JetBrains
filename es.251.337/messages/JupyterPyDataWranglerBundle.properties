action.DataWrangler.Jupyter.Code.Export.description=Exportar código generado al notebook
action.DataWrangler.Jupyter.Code.Export.text=Exportar código al Notebook
action.DataWrangler.Jupyter.Show.description=Abrir Data Wrangler en una pestaña separada
action.DataWrangler.Jupyter.Show.text=Abrir Data Wrangler
data.wrangler.jupyter.command.changeType.description=Modifica el tipo de una columna
data.wrangler.jupyter.command.changeType.label=Cambiar el tipo de la columna {0} a {1}
data.wrangler.jupyter.command.changeType.name=Cambiar tipo de columna
data.wrangler.jupyter.command.drop.description.full=Elimina la columna especificada del dataframe en su lugar
data.wrangler.jupyter.command.drop.name=Eliminar columna
data.wrangler.jupyter.command.dropRows.description=Eliminar un rango de filas
data.wrangler.jupyter.command.dropRows.label=Eliminar filas desde {0} hasta {1}
data.wrangler.jupyter.command.dropRows.name=Eliminar filas
data.wrangler.jupyter.command.duplicates.description=Eliminar filas duplicadas en las columnas
data.wrangler.jupyter.command.duplicates.description.full=Eliminar filas duplicadas basándose en una columna específica en un contexto Python de Jupyter-notebook
data.wrangler.jupyter.command.duplicates.label={0} en la columna {1}
data.wrangler.jupyter.command.duplicates.name=Eliminar duplicados
data.wrangler.jupyter.command.encoding.description=Codificación one-hot de la columna {0}
data.wrangler.jupyter.command.encoding.name=Codificación one-hot de variables categóricas
data.wrangler.jupyter.command.fillMissing.description=Rellenar valores faltantes
data.wrangler.jupyter.command.fillMissing.label=Rellenar valores faltantes en la columna {0} con {1}
data.wrangler.jupyter.command.fillMissing.name=Rellenar faltantes
data.wrangler.jupyter.command.filter.condition.equal=igual a
data.wrangler.jupyter.command.filter.condition.greater=mayor que
data.wrangler.jupyter.command.filter.condition.greaterOrEqual=mayor o igual a
data.wrangler.jupyter.command.filter.condition.less=menor que
data.wrangler.jupyter.command.filter.condition.lessOrEqual=menor o igual a
data.wrangler.jupyter.command.filter.condition.notEqual=no igual a
data.wrangler.jupyter.command.filter.description=Con condición\: {0} {1}
data.wrangler.jupyter.command.filter.description.full=Este comando filtra filas en una columna seleccionada de una tabla basándose en una condición y valor específicos en un entorno Jupyter Notebook usando Python
data.wrangler.jupyter.command.filter.label={0} columna {1}
data.wrangler.jupyter.command.filter.name=Filtrar
data.wrangler.jupyter.command.handleOutliersWithED.description=Eliminar outliers según la distancia de cada punto de datos desde el centro (media o mediana)
data.wrangler.jupyter.command.handleOutliersWithED.label=Eliminar outliers con ED con umbral {0} en {1}
data.wrangler.jupyter.command.handleOutliersWithED.name=Detección de outliers con Distancia Euclidiana
data.wrangler.jupyter.command.handleOutliersWithIQR.description=Eliminar outliers usando rango intercuartil
data.wrangler.jupyter.command.handleOutliersWithIQR.label=Eliminar outliers con IQR con multiplicador {0} en {1}
data.wrangler.jupyter.command.handleOutliersWithIQR.name=Detección de outliers con IQR
data.wrangler.jupyter.command.handleOutliersWithMAD.description=Eliminar outliers usando la mediana
data.wrangler.jupyter.command.handleOutliersWithMAD.label=Eliminar outliers con MAD con umbral {0} en {1}
data.wrangler.jupyter.command.handleOutliersWithMAD.name=Detección de outliers con MAD
data.wrangler.jupyter.command.handleSkewed.description=Transformación que reduce la asimetría
data.wrangler.jupyter.command.handleSkewed.label=Transformación {0} en columna {1}
data.wrangler.jupyter.command.handleSkewed.name=Reducir asimetría
data.wrangler.jupyter.command.minMax.description=Normalización con Min-Max
data.wrangler.jupyter.command.minMax.label=Normalizar columna {0} con min\={1} y max\={2}
data.wrangler.jupyter.command.minMax.name=Escalado Min-Max
data.wrangler.jupyter.command.miss.description=Eliminar filas con datos faltantes en la columna
data.wrangler.jupyter.command.miss.description.full=Eliminar filas con valores faltantes en una columna específica usando Jupyter y Python
data.wrangler.jupyter.command.miss.label={0} en la columna {1}
data.wrangler.jupyter.command.miss.name=Eliminar valores faltantes
data.wrangler.jupyter.command.name=Exportar código al Notebook
data.wrangler.jupyter.command.remove.description.full=Elimina filas de una tabla en Jupyter notebooks que contengan valores vacíos
data.wrangler.jupyter.command.remove.name=Eliminar filas con valores NaN
data.wrangler.jupyter.command.removeCols.description=Eliminar múltiples columnas
data.wrangler.jupyter.command.removeCols.label=Eliminar columnas
data.wrangler.jupyter.command.removeCols.name=Eliminar múltiples columnas
data.wrangler.jupyter.command.replace.description=De {0} a {1}
data.wrangler.jupyter.command.replace.description.full=Operación de reemplazo de cadenas dinámica que puede ajustarse con parámetros como coincidencia exacta, sensibilidad a mayúsculas y soporte de regex, permitiendo operaciones avanzadas en un DataFrame de pandas
data.wrangler.jupyter.command.replace.label={0} en la columna {1}
data.wrangler.jupyter.command.replace.name=Buscar y reemplazar
data.wrangler.jupyter.command.round.description=Redondear a {0} decimales los valores en la columna {1}
data.wrangler.jupyter.command.round.label=Redondear valores numéricos en la columna {0}
data.wrangler.jupyter.command.round.name=Redondear numéricos
data.wrangler.jupyter.command.split.description=Dividir columna por delimitador
data.wrangler.jupyter.command.split.label=Dividir columna {0} por delimitador {1}
data.wrangler.jupyter.command.split.name=Dividir columna
data.wrangler.jupyter.command.standardization.description=Transformar los datos para que tengan una media de 0 y una desviación estándar de 1
data.wrangler.jupyter.command.standardization.label=Normalización Z-Score para la columna {0}
data.wrangler.jupyter.command.standardization.name=Normalización Z-Score
data.wrangler.jupyter.command.string.transform.description.full=Transformaciones simples en cadenas como modificación de mayúsculas/minúsculas
data.wrangler.jupyter.command.string.transform.name=Transformar columna con cadena