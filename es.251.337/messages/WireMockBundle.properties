action.Swagger.GenerateWireMockStubs.text=Generar stubs de WireMock
action.WireMock.GenerateStub.text=Generar stub WireMock
action.WireMock.RunThisFile.text=Iniciar el servidor WireMock
action.WireMock.ToggleHandlebars.description=Habilita las plantillas Handlebars para los atributos `body` y `bodyFileName` de la respuesta
action.WireMock.ToggleHandlebars.text=Usar plantilla Handlebars
action.WireMock.ToggleHandlebars.text.requires.plugin=Usar plantilla Handlebars (Requiere plugin Handlebars)
advanced.setting.wiremock.schema.detection.enabled=Detección del esquema JSON de archivos de códigos auxiliares de WireMock
dialog.title.generating.stubs=Generando stubs de WireMock...
generate.stubs.command.action=Generar stubs para WireMock
run.configuration.codegen.validation.0.is.not.a.file=El archivo especificado "{0}" no es un archivo
run.configuration.codegen.validation.file.does.not.exist=El archivo especificado "{0}" no existe
run.configuration.codegen.validation.no.jdk=No se ha encontrado JRE
run.configuration.codegen.validation.unspecified.0.property=No se ha especificado "{0}"
run.configuration.jre.default=Por defecto
run.configuration.jre.path=JRE
run.configuration.mappings.path=Archivo stub
run.configuration.mappings.path.dialog=Archivo Stub
run.configuration.options.title=WireMock
run.configuration.server.port=Puerto del servidor
run.configuration.templatingEnabled=Habilitar plantillas Handlebars
run.configuration.templatingEnabled.description=Renderizar respuestas utilizando plantillas Handlebars
run.configuration.verbose=salida detallada
wiremock.configurable=WireMock (es)
wiremock.configurable.handlebars.enabled=Usar plantillas Handlebars en el editor
wiremock.model.request=Objeto de solicitud
wiremock.model.request.baseUrl=URL hasta el inicio de la ruta (p. ej., https://my.example.com:8080)
wiremock.model.request.body=Texto del cuerpo de la solicitud (evitar cuerpos no textuales)
wiremock.model.request.bodyAsBase64=Representación Base64 del cuerpo de la solicitud (a partir de WireMock 3.8.0).
wiremock.model.request.cookies=Mapa de cookies
wiremock.model.request.headers=Mapa de encabezados
wiremock.model.request.host=Parte del nombre de host de la URL (ej.: my.example.com) 
wiremock.model.request.id=ID único de cada solicitud
wiremock.model.request.method=Método de la petición
wiremock.model.request.multipart=Si la solicitud es multiparte (booleano)
wiremock.model.request.parts=Las partes individuales de una solicitud multiparte se exponen a través del modelo de plantilla
wiremock.model.request.path=Ruta URL
wiremock.model.request.pathSegments=Segmentos de la ruta URL (índice desde cero)
wiremock.model.request.port=Número de puerto
wiremock.model.request.query=Parámetros de consulta
wiremock.model.request.scheme=Parte del protocolo de la URL (ej.: https) 
wiremock.model.request.url=Ruta URL y consulta
wiremock.run.description=Servidor para la prueba de mocks de API
wiremock.run.title=WireMock
wiremock.schema.detection.description=Asigna automáticamente un esquema JSON a los archivos que definen los mappings de stub de WireMock para proveer completado de propiedades
wiremock.settings.group=WireMock
wiremock.stubs.scratch.root=Raíz de WireMock stub