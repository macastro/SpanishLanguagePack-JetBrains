action.rbs.cli.ancestors.description=Mostrar los ancestros de la clase o módulo dado.
action.rbs.cli.ancestors.text=Ejecutar RBS Ancestors
action.rbs.cli.ast.description=Imprimir el AST JSON del entorno cargado. Puede especificar patrones para filtrar las declaraciones con nombres de archivo
action.rbs.cli.ast.text=Ejecutar RBS Ast
action.rbs.cli.constant.description=Resolver la constante dada dentro de RBS
action.rbs.cli.constant.text=Ejecutar RBS Constant
action.rbs.cli.list.description=Listar todas las clases, módulos e interfaces con definiciones
action.rbs.cli.list.text=Ejecutar RBS List
action.rbs.cli.method.description=Mostrar la definición del método especificado por `type_name` y `method_name`
action.rbs.cli.method.text=Ejecutar RBS Method
action.rbs.cli.methods.description=Mostrar todos los métodos definidos en la clase o módulo dado
action.rbs.cli.methods.text=Ejecutar RBS Methods
action.rbs.cli.parse.description=Analizar los archivos RBS dados e imprimir cualquier error de sintaxis
action.rbs.cli.parse.text=Ejecutar RBS Parse
action.rbs.cli.paths.description=Mostrar las rutas usadas para cargar archivos RBS
action.rbs.cli.paths.text=Ejecutar RBS Paths
action.rbs.cli.prototype.description=Generar archivos RBS prototipo. Los generadores soportados son rb, rbi y runtime
action.rbs.cli.prototype.text=Ejecutar RBS Prototype
action.rbs.cli.test.description=Ejecutar la prueba con las opciones dadas
action.rbs.cli.test.text=Ejecutar RBS Test
action.rbs.cli.validate.description=Asegurar que los nombres de tipo en archivos RBS estén presentes y las aplicaciones de tipo tengan la aridad correcta
action.rbs.cli.validate.text=Ejecutar RBS Validate
action.rbs.cli.vendor.description=Firmas de proveedor en el directorio del proyecto
action.rbs.cli.vendor.text=Ejecutar RBS Vendor
action.rbs.create.new.class.file.description=Crea una nueva clase/archivo RBS
action.rbs.create.new.class.file.text=Clase/Archivo RBS
action.rbs.generate.from.ruby.description=Generar las firmas RBS para un archivo Ruby
action.rbs.generate.from.ruby.popup.text=Firmas de Tipo
action.rbs.generate.from.ruby.text=Generar Firmas de Tipo
action.steep.cli.annotations.description=Comprobar las anotaciones en las fuentes dadas
action.steep.cli.annotations.text=Ejecutar Steep Annotations
action.steep.cli.check.description=Ejecutar comprobación de tipos
action.steep.cli.check.text=Ejecutar Steep Check
action.steep.cli.init.description=Generar un Steepfile
action.steep.cli.init.text=Ejecutar Steep Init
action.steep.cli.langserver.text=Ejecutar Steep Langserver
action.steep.cli.project.text=Ejecutar Steep Project
action.steep.cli.stats.text=Ejecutar Steep Stats
action.steep.cli.validate.description=Validar la configuración de Steep
action.steep.cli.validate.text=Ejecutar Steep Validate
action.steep.cli.watch.text=Ejecutar Steep Watch
filetype.rbs.description=RBS
rbs.action.error.generating.rbs=Ocurrió un error al generar RBS\: {0}
rbs.action.generate.title=Generando firmas de tipo
rbs.action.non.zero.exit.code=Código de salida distinto de cero de RBS\: {0}
rbs.action.output.null=No se pudo ejecutar el comando RBS prototype
rbs.action.tab.title=Ejecutar {0}
rbs.actions.create.class.file.dialog.class=Clase
rbs.actions.create.class.file.dialog.file=Archivo
rbs.actions.create.class.file.dialog.interface=Interfaz
rbs.actions.create.class.file.dialog.module=Módulo
rbs.actions.create.class.file.error.invalid.class.name=El nombre no es un nombre de clase válido
rbs.actions.create.class.file.error.invalid.file.name=El nombre no es un nombre de archivo válido
rbs.actions.create.class.file.error.invalid.interface.name=El nombre no es un nombre de interfaz válido
rbs.actions.create.class.file.error.invalid.module.name=El nombre no es un nombre de módulo válido
rbs.actions.create.class.file.name=Crear Clase/Archivo RBS {0}
rbs.actions.create.class.file.title=Nueva Clase/Archivo RBS
rbs.actions.run.anything.group.name=RBS
rbs.actions.run.anything.help.placeholder=rbs <comando>
rbs.annotation.block.with.untyped.parameters=Bloque usado con parámetros sin tipo
rbs.annotation.block.with.untyped.parameters.quickfix.family.name=Eliminar bloques
rbs.annotation.block.with.untyped.parameters.quickfix.name=Eliminar ''{0}''
rbs.annotation.interface.prepended=La interfaz no puede ser antepuesta
rbs.annotation.interface.prepended.remove.quickfix.family.name=Eliminar interfaces antepuestas
rbs.annotation.interface.prepended.remove.quickfix.name=Eliminar ''prepend {0}''
rbs.annotation.interface.prepended.replace.extend.quickfix.family.name=Cambiar interfaces antepuestas a 'extend'
rbs.annotation.interface.prepended.replace.extend.quickfix.name=Cambiar ''prepend {0}'' a ''extend {0}''
rbs.annotation.interface.prepended.replace.include.quickfix.family.name=Cambiar interfaces antepuestas a 'include'
rbs.annotation.interface.prepended.replace.include.quickfix.name=Cambiar ''prepend {0}'' a ''include {0}''
rbs.annotation.module.included.in.interface=Clase/módulo incluido en una interfaz
rbs.annotation.remove.include.statement.quickfix.name=Eliminar declaración 'include'
rbs.annotation.remove.statement.fix=Eliminar declaraciones
rbs.annotation.self.type.in.method=Vinculación de tipo self usada en un método
rbs.annotation.self.type.in.method.remove.quickfix.family.name=Eliminar vinculaciones de tipo self
rbs.annotation.self.type.in.method.remove.quickfix.name=Eliminar ''{0}''
rbs.annotation.self.type.in.proc.with.untyped.parameters=Vinculación de tipo self usada con parámetros sin tipo
rbs.annotation.self.type.in.proc.with.untyped.parameters.remove.quickfix.family.name=Eliminar vinculaciones de tipo self
rbs.annotation.self.type.in.proc.with.untyped.parameters.remove.quickfix.name=Eliminar ''{0}''
rbs.annotation.singleton.alias.in.interface.quickfix.family.name=Convertir alias singleton a alias de instancia
rbs.annotation.singleton.alias.in.interface.quickfix.name=Convertir a alias de instancia
rbs.annotation.singleton.in.interface=Definición de método singleton dentro de una interfaz
rbs.annotation.singleton.in.interface.remove.alias.quickfix.name=Eliminar alias singleton
rbs.annotation.singleton.in.interface.remove.quickfix.name=Eliminar método singleton
rbs.annotation.singleton.method.in.interface.quickfix.family.name=Convertir métodos singleton a métodos de instancia
rbs.annotation.singleton.method.in.interface.quickfix.name=Convertir a método de instancia
rbs.annotation.type.alias.used.as.self.type=Alias de tipo usado como tipo self
rbs.annotation.type.alias.used.as.self.type.remove.intention.family.name=Eliminar tipos self inválidos
rbs.annotation.type.alias.used.as.self.type.remove.intention.name=Eliminar ''{0}''
rbs.annotation.type.contexts.keyword.in.invalid.context=''{0}'' usado en un contexto inválido
rbs.annotation.type.contexts.keyword.in.invalid.context.replace.quickfix.family.name=Reemplazar usos de tipo inválidos
rbs.annotation.type.contexts.keyword.in.invalid.context.replace.quickfix.name=Reemplazar ''{0}''
rbs.annotation.type.variable.after.optional.type.variable=Variable de tipo requerida después de una opcional
rbs.annotation.type.variable.after.optional.type.variable.quickfix.family.name=Agregar tipos por defecto
rbs.annotation.type.variable.after.optional.type.variable.quickfix.name=Agregar tipo por defecto
rbs.annotation.type.variable.depends.on.optional.type.variable=Variable de tipo opcional referenciada en un tipo por defecto
rbs.annotation.type.variable.depends.on.optional.type.variable.quickfix.family.name=Reemplazar referencias de variables de tipo inválidas
rbs.annotation.type.variable.depends.on.optional.type.variable.quickfix.name=Reemplazar ''{0}''
rbs.annotation.use.alias.mismatched.case.interface=''{0}'' no es un nombre de interfaz válido
rbs.annotation.use.alias.mismatched.case.lowercase=''{0}'' no es un nombre de alias de tipo válido
rbs.annotation.use.alias.mismatched.case.uppercase=''{0}'' no es un nombre de clase/módulo válido
rbs.annotation.visibility.modifier.remove.quickfix.family.name=Eliminar modificadores de visibilidad inválidos
rbs.annotation.visibility.modifier.remove.quickfix.name=Eliminar ''{0}''
rbs.annotation.visibility.modifier.used.in.interface=Modificador de visibilidad usado dentro de una interfaz
rbs.annotation.visibility.modifier.used.in.module.method=Modificador de visibilidad usado en un método de módulo
rbs.collection.banner=Archivo de firmas incluido (descargado usando colección RBS)
rbs.collection.location=raíz de biblioteca
rbs.collection.name=rbs_collection [incluido]
rbs.collection.name.with.module=rbs_collection ({0}) [incluido]
rbs.collection.notification.enableCollectionManagement.body=Permitir que las firmas de tipo para gemas se descarguen en segundo plano (el proyecto y sus archivos no serán modificados). Habilitar esta función puede requerir instalar la última versión de la gema 'rbs' en el intérprete de Ruby.
rbs.collection.notification.enableCollectionManagement.dismiss.action.title=Descartar
rbs.collection.notification.enableCollectionManagement.enable.action.title=Habilitar
rbs.collection.notification.enableCollectionManagement.title=Soporte de tipos mejorado
rbs.collection.notification.installGem.body=Permitir que las firmas de tipo para gemas se descarguen en segundo plano instalando la última versión de la gema 'rbs' (el proyecto y sus archivos no serán modificados)
rbs.collection.notification.installGem.configure.action.title=Configurar…
rbs.collection.notification.installGem.install.action.title=Instalar
rbs.collection.notification.installGem.title=Soporte de tipos mejorado
rbs.collection.notificationGroup=Automatización de colección RBS
rbs.collection.runner.title=Ejecutando ''{0}''…
rbs.inlay.hints.choose.declaration.title=Elegir declaración
rbs.inlay.hints.ruby.attribute.type.description=Tipos de atributos (de RBS) junto a su declaración asociada. Los tipos se muestran para accessors, readers y writers.<br/><br/>Mantén presionado Ctrl y haz clic en la sugerencia para navegar a la firma de tipo.
rbs.inlay.hints.ruby.attribute.type.name=Tipos de atributos
rbs.inlay.hints.ruby.block.parameter.type.description=Tipos de parámetros de bloque (de RBS) junto a su declaración asociada. Los tipos se muestran tanto para parámetros nombrados como numerados.<br/><br/>Mantén presionado Ctrl y haz clic en la sugerencia para navegar a la firma de tipo.
rbs.inlay.hints.ruby.block.parameter.type.name=Tipos de parámetros de bloque
rbs.inlay.hints.ruby.block.self.type.description=Tipos self de bloque (de RBS) junto a su declaración asociada.<br/><br/>Mantén presionado Ctrl y haz clic en la sugerencia para navegar a la firma de tipo.
rbs.inlay.hints.ruby.block.self.type.name=Tipos self de bloque
rbs.inlay.hints.ruby.constant.type.description=Tipos de constantes (de RBS) junto a su declaración asociada.<br/><br/>Mantén presionado Ctrl y haz clic en la sugerencia para navegar a la firma de tipo.
rbs.inlay.hints.ruby.constant.type.name=Tipos de constantes
rbs.inlay.hints.ruby.container.type.description=Nombres de variables de tipo (de RBS) junto a declaraciones de clase/módulo.<br/><br/>Mantén presionado Ctrl y haz clic en la sugerencia para navegar a la firma de tipo.
rbs.inlay.hints.ruby.container.type.name=Variables de tipo de clase/módulo
rbs.inlay.hints.ruby.global.variable.type.description=Tipos de variables globales (de RBS) junto a su declaración asociada.<br/><br/>Mantén presionado Ctrl y haz clic en la sugerencia para navegar a la firma de tipo.
rbs.inlay.hints.ruby.global.variable.type.name=Tipos de variables globales
rbs.inlay.hints.ruby.method.parameter.type.description=Tipos de parámetros de método (de RBS) junto a su declaración asociada.<br/><br/>Mantén presionado Ctrl y haz clic en la sugerencia para navegar a la firma de tipo.
rbs.inlay.hints.ruby.method.parameter.type.name=Tipos de parámetros de método
rbs.inlay.hints.ruby.method.return.type.description=Tipos de retorno de método (de RBS) junto a su declaración asociada.<br/><br/>Mantén presionado Ctrl y haz clic en la sugerencia para navegar a la firma de tipo.
rbs.inlay.hints.ruby.method.return.type.name=Tipos de retorno de método
rbs.inspection.bad.type.argument.type.description=''{0}'' no es un subtipo de ''{1}''
rbs.inspection.bad.type.argument.type.name=Tipo de argumento de tipo incorrecto
rbs.inspection.bad.type.argument.type.replace.quickfix.family.name=Reemplazar argumentos de tipo incorrectos
rbs.inspection.bad.type.argument.type.replace.quickfix.name=Reemplazar ''{0}''
rbs.inspection.bad.type.variable.default.type.description=''{0}'' no es un subtipo de ''{1}''
rbs.inspection.bad.type.variable.default.type.name=Tipo predeterminado de variable de tipo incorrecto
rbs.inspection.bad.type.variable.default.type.replace.quickfix.family.name=Reemplazar tipos predeterminados incorrectos
rbs.inspection.bad.type.variable.default.type.replace.quickfix.name=Reemplazar ''{0}''
rbs.inspection.conflicting.type.variable.count.add.quickfix.family.name=Agregar variables de tipo faltantes
rbs.inspection.conflicting.type.variable.count.add.quickfix.name=Agregar{0, choice, 1\#variable de tipo|2\# {0} variables de tipo}
rbs.inspection.conflicting.type.variable.count.description={0}{1, choice, 0\#no tiene variables de tipo|1\#tiene 1 variable de tipo|2\#tiene {1} variables de tipo}, lo que entra en conflicto con otras declaraciones
rbs.inspection.conflicting.type.variable.count.goTo.quickfix.family.name=Ir a la declaración conflictiva
rbs.inspection.conflicting.type.variable.count.goTo.quickfix.name.popup.title=Elegir declaración conflictiva
rbs.inspection.conflicting.type.variable.count.name=Cantidad conflictiva de variables de tipo
rbs.inspection.conflicting.type.variable.count.remove.quickfix.family.name=Eliminar variables de tipo excedentes
rbs.inspection.conflicting.type.variable.count.remove.quickfix.name=Eliminar{0, choice, 1\#variable de tipo|2\# {0} variables de tipo}
rbs.inspection.conflicting.type.variable.variance.description={0} tiene una varianza que entra en conflicto con {1, choice, 1\#otra declaración|2\#otras declaraciones}
rbs.inspection.conflicting.type.variable.variance.name=Varianza conflictiva de variable de tipo
rbs.inspection.cyclic.class.alias.name=Declaración cíclica de alias de clase
rbs.inspection.cyclic.class.module.alias.name=Declaración cíclica de alias de clase/módulo
rbs.inspection.cyclic.module.alias.name=Declaración cíclica de alias de módulo
rbs.inspection.duplicate=Declaración duplicada
rbs.inspection.duplicate.class.alias=Declaración de alias de clase duplicada
rbs.inspection.duplicate.class.alias.container=''{0}'' ya existe como clase
rbs.inspection.duplicate.class.exists=''{0}'' ya existe como clase
rbs.inspection.duplicate.constant=Declaración de constante duplicada
rbs.inspection.duplicate.different.superclass={0} ya declarado con superclase ''{1}''
rbs.inspection.duplicate.global.variable=Declaración de variable global duplicada
rbs.inspection.duplicate.go.to.alias.quickfix.name=Ir a declaración de alias
rbs.inspection.duplicate.go.to.class.quickfix.name=Ir a declaración de clase
rbs.inspection.duplicate.go.to.conflicting.declarations.quickfix.name=Ir a declaraciones conflictivas
rbs.inspection.duplicate.go.to.conflicting.declarations.title=Elegir declaración conflictiva
rbs.inspection.duplicate.go.to.duplicate.included.method.quickfix.name=Ir a método incluido duplicado
rbs.inspection.duplicate.go.to.duplicate.included.method.title=Elegir método incluido duplicado
rbs.inspection.duplicate.go.to.duplicate.quickfix.name=Ir a declaración duplicada
rbs.inspection.duplicate.go.to.duplicate.title=Elegir declaración duplicada
rbs.inspection.duplicate.go.to.module.quickfix.name=Ir a declaración de módulo
rbs.inspection.duplicate.includes.method=Incluye definiciones duplicadas para el método ''{0}''
rbs.inspection.duplicate.inclusion.call.remove.quickfix.name=Eliminar llamada ''{0}''
rbs.inspection.duplicate.interface=Declaración de interfaz duplicada
rbs.inspection.duplicate.interface.include={0} ya incluido
rbs.inspection.duplicate.keyword.parameter=Parámetro de palabra clave duplicado
rbs.inspection.duplicate.method=Definición de método duplicada
rbs.inspection.duplicate.module.alias=Declaración de alias de módulo duplicada
rbs.inspection.duplicate.module.alias.container=''{0}'' ya existe como módulo
rbs.inspection.duplicate.module.exists=''{0}'' ya existe como módulo
rbs.inspection.duplicate.opened.class.alias=No se puede abrir el alias de clase ''{0}''
rbs.inspection.duplicate.opened.module.alias=No se puede abrir el alias de módulo ''{0}''
rbs.inspection.duplicate.remove.class.alias.quickfix.name=Eliminar alias de clase duplicado
rbs.inspection.duplicate.remove.conflicting.class.quickfix.name=Eliminar clase conflictiva
rbs.inspection.duplicate.remove.conflicting.module.quickfix.name=Eliminar módulo conflictivo
rbs.inspection.duplicate.remove.constant.quickfix.name=Eliminar constante duplicada
rbs.inspection.duplicate.remove.global.variable.quickfix.name=Eliminar variable global duplicada
rbs.inspection.duplicate.remove.interface.quickfix.name=Eliminar interfaz duplicada
rbs.inspection.duplicate.remove.method.quickfix.name=Eliminar método duplicado
rbs.inspection.duplicate.remove.module.alias.quickfix.name=Eliminar alias de módulo duplicado
rbs.inspection.duplicate.remove.quickfix.family.name=Eliminar declaración duplicada
rbs.inspection.duplicate.remove.superclass.quickfix.name=Eliminar superclase conflictiva
rbs.inspection.duplicate.remove.type.alias.quickfix.name=Eliminar alias de tipo duplicado
rbs.inspection.duplicate.type.alias=Declaración de alias de tipo duplicada
rbs.inspection.group.rbs=RBS
rbs.inspection.group.rbs.code.style.name=Problemas de estilo de código
rbs.inspection.group.rbs.data.flow.name=Flujo de datos
rbs.inspection.group.rbs.inheritance.name=Problemas de herencia
rbs.inspection.group.rbs.naming.conventions.name=Convenciones de nomenclatura
rbs.inspection.group.rbs.probable.bugs.name=Bugs probables
rbs.inspection.group.ruby=Ruby
rbs.inspection.group.ruby.rbs.name=RBS
rbs.inspection.inconsistent.class.alias.name=Módulo ''{0}'' usado como destino de alias de clase
rbs.inspection.inconsistent.class.module.alias.name=Alias de clase/módulo inconsistente
rbs.inspection.inconsistent.class.module.alias.quickfix.name=Ir a declaraciones en conflicto
rbs.inspection.inconsistent.module.alias.name=Clase ''{0}'' usada como destino de alias de módulo
rbs.inspection.incorrect.inclusion.call=Llamada de inclusión incorrecta
rbs.inspection.incorrect.inclusion.call.extend.description={0} usado en una llamada ''extend''
rbs.inspection.incorrect.inclusion.call.extend.remove.quickfix.name=Eliminar ''extend {0}''
rbs.inspection.incorrect.inclusion.call.include.description={0} usado en una llamada ''include''
rbs.inspection.incorrect.inclusion.call.include.remove.quickfix.name=Eliminar ''include {0}''
rbs.inspection.incorrect.inclusion.call.prepend.description={0} usado en una llamada ''prepend''
rbs.inspection.incorrect.inclusion.call.prepend.remove.quickfix.name=Eliminar ''prepend {0}''
rbs.inspection.incorrect.inclusion.call.remove.quickfix.family.name=Eliminar llamadas de inclusión incorrectas
rbs.inspection.incorrect.type.argument.count.add.description={0} requiere {1, choice, 1\#un argumento de tipo|2\#{1} argumentos de tipo}
rbs.inspection.incorrect.type.argument.count.add.quickfix.family.name=Agregar argumentos de tipo faltantes
rbs.inspection.incorrect.type.argument.count.add.quickfix.name=Agregar {0, choice, 1\#argumento de tipo|2\#{0} argumentos de tipo}
rbs.inspection.incorrect.type.argument.count.name=Cantidad incorrecta de argumentos de tipo
rbs.inspection.incorrect.type.argument.count.remove.all.quickfix.name=Eliminar {0, choice, 1\#argumento de tipo|2\#argumentos de tipo}
rbs.inspection.incorrect.type.argument.count.remove.description=Demasiados argumentos de tipo proporcionados
rbs.inspection.incorrect.type.argument.count.remove.quickfix.family.name=Eliminar argumentos de tipo excedentes
rbs.inspection.incorrect.type.argument.count.remove.quickfix.name=Eliminar {0, choice, 1\#argumento de tipo|2\#argumentos de tipo} excedentes
rbs.inspection.incorrect.type.argument.variance.description={0} {1} usado como argumento {2, choice, 0\#invariante|1\#covariante|2\#contravariante}
rbs.inspection.incorrect.type.argument.variance.name=Varianza incorrecta del argumento de tipo
rbs.inspection.invalid.method.overload.description=No se puede encontrar una declaración no sobrecargada para {0}
rbs.inspection.invalid.method.overload.name=Sobrecarga de método inválida
rbs.inspection.invalid.method.overload.remove.method.quickfix.family.name=Eliminar métodos
rbs.inspection.invalid.method.overload.remove.method.quickfix.name=Eliminar ''{0}''
rbs.inspection.invalid.method.overload.remove.quickfix.family.name=Eliminar '...'
rbs.inspection.invalid.method.overload.replace.quickfix.family.name=Reemplazar con '-> untyped'
rbs.inspection.invalid.type.argument.usage.description={0} {1} se usa en una ubicación {2, choice, 0\#invariante|1\#covariante|2\#contravariante}
rbs.inspection.invalid.type.argument.usage.name=Uso inválido de argumento de tipo
rbs.inspection.literal.class.referenced.description=Se referenció ''{0}'' en lugar de ''{1}''
rbs.inspection.literal.class.referenced.name=Clase literal referenciada
rbs.inspection.literal.class.referenced.replace.quickfix.family.name=Reemplazar con literales respectivos
rbs.inspection.literal.class.referenced.replace.quickfix.name=Reemplazar con ''{0}''
rbs.inspection.mismatch.edit.typeSignature.family.name=Editar firma de tipo
rbs.inspection.mismatch.goto.typeSignature.error=Sin firmas de tipo
rbs.inspection.mismatch.goto.typeSignature.family.name=Ir a firma de tipo
rbs.inspection.mismatch.goto.typeSignature.popup.title=Elegir Firma de Tipo
rbs.inspection.missing.type.signature.add.command.name=Agregar Firma de Tipo
rbs.inspection.missing.type.signature.add.create.file.name=Crear Archivo RBS {0}
rbs.inspection.missing.type.signature.add.create.file.title=Nuevo Archivo RBS
rbs.inspection.missing.type.signature.add.disambiguate.title=Elegir Clase/Módulo
rbs.inspection.missing.type.signature.add.family.name=Agregar firma de tipo
rbs.inspection.missing.type.signature.declaration=Falta firma de tipo
rbs.inspection.missing.type.signature.declaration.attr.description=Falta firma de tipo para {0, choice, 1\#{1} ''''{2}''''|2\#{1} ''''{2}'''' y {3} ''''{4}''''}
rbs.inspection.missing.type.signature.declaration.description=Falta firma de tipo para ''{0}''
rbs.inspection.module.used.as.superclass.description={0} usado como superclase
rbs.inspection.module.used.as.superclass.name=Módulo usado como superclase
rbs.inspection.module.used.as.superclass.remove.quickfix.family.name=Eliminar superclases inválidas
rbs.inspection.module.used.as.superclass.remove.quickfix.name=Eliminar ''< {0}''
rbs.inspection.simplifiable.boolean.union.description=''{0} | {1}'' puede simplificarse
rbs.inspection.simplifiable.boolean.union.name=Unión booleana simplificable
rbs.inspection.simplifiable.boolean.union.replace.quickfix.family.name=Simplificar uniones booleanas
rbs.inspection.simplifiable.boolean.union.replace.quickfix.name=Reemplazar ''{0} | {1}'' con ''bool''
rbs.inspection.unconventional.interface.name.name=Nombre de interfaz no convencional
rbs.inspection.unconventional.name.mismatched.description=''{0}'' no coincide con ''{1}''
rbs.inspection.unconventional.name.too.long.description=''{0}'' es demasiado largo; debe tener {1} {1, choice, 1\#carácter|2\#caracteres o menos}
rbs.inspection.unconventional.name.too.short.description=''{0}'' es demasiado corto; debe tener al menos {1} {1, choice, 1\#carácter|2\#caracteres}
rbs.inspection.unconventional.type.alias.name.name=Nombre de alias de tipo no convencional
rbs.inspection.unconventional.type.variable.name.name=Nombre de variable de tipo no convencional
rbs.inspection.unconventional.use.alias.name.name=Nombre de alias use no convencional
rbs.inspection.unnecessary.parentheses.description=Paréntesis innecesarios en tipo de función
rbs.inspection.unnecessary.parentheses.name=Paréntesis innecesarios
rbs.inspection.unnecessary.parentheses.remove.quickfix.name=Eliminar paréntesis innecesarios
rbs.inspection.unnecessary.qualifier.description=''{0}'' puede acortarse
rbs.inspection.unnecessary.qualifier.name=Calificador innecesario
rbs.inspection.unnecessary.qualifier.replace.quickfix.family.name=Eliminar calificadores innecesarios
rbs.inspection.unnecessary.qualifier.replace.quickfix.name=Reemplazar con ''{0}''
rbs.inspection.unresolved.reference.add.use.clause.quickfix.command=Agregar Cláusula Use
rbs.inspection.unresolved.reference.add.use.clause.quickfix.family.name=Agregar cláusula use
rbs.inspection.unresolved.reference.add.use.clause.quickfix.title=Elegir Destino
rbs.inspection.unresolved.reference.description=No se puede encontrar ''{0}''
rbs.inspection.unresolved.reference.name=Referencia no resuelta
rbs.inspection.unused.interface.description={0} no se utiliza
rbs.inspection.unused.interface.name=Interfaz no utilizada
rbs.inspection.unused.interface.remove.quickfix.family.name=Eliminar interfaces no utilizadas
rbs.inspection.unused.interface.remove.quickfix.name=Eliminar ''{0}''
rbs.inspection.unused.type.alias.description={0} no se utiliza
rbs.inspection.unused.type.alias.name=Alias de tipo no utilizado
rbs.inspection.unused.type.alias.remove.quickfix.family.name=Eliminar alias de tipo no utilizados
rbs.inspection.unused.type.alias.remove.quickfix.name=Eliminar ''{0}''
rbs.inspection.unused.type.variable.description={0} no se utiliza
rbs.inspection.unused.type.variable.name=Variable de tipo no utilizada
rbs.inspection.unused.type.variable.remove.quickfix.family.name=Eliminar variables de tipo no utilizadas
rbs.inspection.unused.type.variable.remove.quickfix.name=Eliminar ''{0}''
rbs.inspection.unused.use.clause.name=Cláusula use no utilizada
rbs.inspection.unused.use.clause.optimize.quickfix.family.name=Optimizar cláusulas use
rbs.inspection.unused.use.clause.shadowed.description=Cláusula use sombreada
rbs.inspection.unused.use.clause.unnecessary.alias.description=Alias use innecesario
rbs.inspection.unused.use.clause.unnecessary.description=Cláusula use innecesaria
rbs.inspection.unused.use.clause.unused.description=Cláusula use no utilizada
rbs.intention.ruby.category.rbs=Ruby/RBS
rbs.intention.ruby.edit.typeSignature.command.name=Editar Firma de Tipo
rbs.intention.ruby.edit.typeSignature.disambiguate.title=Elegir Firma de Tipo
rbs.intention.ruby.edit.typeSignature.text=Editar firma de tipo
rbs.language.configurable=RBS
rbs.language.configurable.collection.description=<a href\="https\://github.com/ruby/gem_rbs_collection">RBS collection</a> es una colección de firmas de tipo gestionada por la comunidad para gemas que se distribuyen sin ellas. Las firmas de tipo se descargarán automáticamente en segundo plano, mejorando el soporte de tipos y la comprensión del código para todas las gemas utilizadas en el proyecto. Esta función no modifica el proyecto ni sus archivos.
rbs.language.configurable.collection.enable=Soporte mejorado de tipos con colección RBS
rbs.language.configurable.name=RBS
rbs.lineMarker.overloaded.declarations=Método sobrecargado RBS
rbs.lineMarker.overloaded.declarations.title=Elegir Declaración Sobrecargada
rbs.lineMarker.overloaded.declarations.tooltip.few=Tiene declaraciones sobrecargadas en\:
rbs.lineMarker.overloaded.declarations.tooltip.many=Tiene declaraciones sobrecargadas en varios archivos
rbs.lineMarker.overloaded.declarations.tooltip.one=Tiene una declaración sobrecargada en\:
rbs.lineMarker.partial.declarations=Declaración parcial RBS
rbs.lineMarker.partial.declarations.title=Elegir Declaración Parcial
rbs.lineMarker.partial.declarations.tooltip.few=Tiene declaraciones parciales en\:
rbs.lineMarker.partial.declarations.tooltip.many=Tiene declaraciones parciales en varios archivos
rbs.lineMarker.partial.declarations.tooltip.one=Tiene una declaración parcial en\:
rbs.live.template.presentable.name=RBS
rbs.model.attribute.accessor.longDescription=Accesador de atributo ''{0}'' de {1}
rbs.model.attribute.accessor.shortDescription=Accesador de atributo ''{0}''
rbs.model.attribute.reader.longDescription=Lector de atributo ''{0}'' de {1}
rbs.model.attribute.reader.shortDescription=Lector de atributo ''{0}''
rbs.model.attribute.writer.longDescription=Escritor de atributo ''{0}'' de {1}
rbs.model.attribute.writer.shortDescription=Escritor de atributo ''{0}''
rbs.model.class.longDescription=Clase ''{0}'' en ''{1}''
rbs.model.class.shortDescription=Clase ''{0}''
rbs.model.class.variable.longDescription=Variable de clase ''{0}'' de {1}
rbs.model.class.variable.shortDescription=Variable de clase ''{0}''
rbs.model.constant.longDescription=Constante ''{0}'' en ''{1}''
rbs.model.constant.shortDescription=Constante ''{0}''
rbs.model.descriptions.contravariant=Contravariante
rbs.model.descriptions.covariant=Covariante
rbs.model.descriptions.invariant=Invariante
rbs.model.descriptions.private.prefix=Private
rbs.model.global.variable.shortDescription=Variable global ''{0}''
rbs.model.instance.variable.longDescription=Variable de instancia ''{0}'' de {1}
rbs.model.instance.variable.shortDescription=Variable de instancia ''{0}''
rbs.model.interface.longDescription=Interface ''{0}'' en ''{1}''
rbs.model.interface.shortDescription=Interface ''{0}''
rbs.model.keyword.shortDescription=Palabra clave ''{0}''
rbs.model.method.alias.longDescription=Alias de método ''{0}'' de {1}
rbs.model.method.alias.shortDescription=Alias de método ''{0}''
rbs.model.method.longDescription=Método ''{0}'' de {1}
rbs.model.method.shortDescription=Método ''{0}''
rbs.model.module.longDescription=Módulo ''{0}'' en ''{1}''
rbs.model.module.method.longDescription=Método de módulo ''{0}'' de {1}
rbs.model.module.method.shortDescription=Método de módulo ''{0}''
rbs.model.module.shortDescription=Módulo ''{0}''
rbs.model.parameter.shortDescription=Parámetro ''{0}''
rbs.model.singleton.longDescription=Singleton ''{0}'' en ''{1}''
rbs.model.singleton.shortDescription=Singleton ''{0}''
rbs.model.type.alias.longDescription=Alias de tipo ''{0}'' en ''{1}''
rbs.model.type.alias.shortDescription=Alias de tipo ''{0}''
rbs.model.type.variable.longDescription=Variable de tipo ''{0}'' de {1}
rbs.model.type.variable.shortDescription=Variable de tipo ''{0}''
rbs.model.use.clause.alias.shortDescription=Alias use ''{0}''
rbs.notificationGroup.fileGeneration=Generación de archivo RBS
rbs.parameter.info.untyped.parameters=<parámetros sin tipo>
rbs.ruby.model.class.longDescription=Clase ''{0}'' en ''{1}''
rbs.ruby.model.class.shortDescription=Clase ''{0}''
rbs.ruby.model.module.longDescription=Módulo ''{0}'' en ''{1}''
rbs.ruby.model.module.shortDescription=Módulo ''{0}''
rbs.ruby.model.singleton.longDescription=Singleton ''{0}'' en ''{1}''
rbs.ruby.model.singleton.shortDescription=Singleton ''{0}''
rbs.rubysigs.banner=Archivo de firmas incluido
rbs.rubysigs.banner.with.versions=Archivo de firmas incluido (generado usando RBS v{0} y Ruby v{1})
rbs.rubysigs.location=raíz de biblioteca
rbs.rubysigs.name=rbs [bundled]
rbs.rubysigs.name.with.version=rbs (v{0}) [bundled]
rbs.search.presentation.in.container=en {0}
rbs.search.presentation.of.container=/{0}
rbs.search.scope.display.name=Archivos de colección
rbs.search.usageType.alias.group=Alias
rbs.search.usageType.declaration.group=Declaración
rbs.search.usageType.extend.include.prepend.call.group=Uso en llamada extend/include/prepend
rbs.search.usageType.nested.constant.access.group=Acceso a constante anidada
rbs.search.usageType.self.type.clause.group=Cláusula de tipo propio
rbs.search.usageType.superclass.clause.group=Cláusula de superclase
rbs.search.usageType.type.signature.group=Firma de tipo
rbs.search.usageType.type.variable.default.group=Valor predeterminado de variable de tipo
rbs.search.usageType.type.variable.upper.bound.group=Límite superior de variable de tipo
rbs.search.usageType.use.clause.group=Cláusula use
rbs.structure.view.qualified.name={0} en {1}
steep.actions.run.anything.group.name=Steep
steep.actions.run.anything.help.placeholder=steep <command>